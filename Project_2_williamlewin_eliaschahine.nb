(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 11.1' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[    530825,      10666]
NotebookOptionsPosition[    519376,      10389]
NotebookOutlinePosition[    519729,      10405]
CellTagsIndexPosition[    519686,      10402]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell["Signal Processing - Project 2", "Title",
 CellChangeTimes->{{3.719892002995119*^9, 3.719892009713935*^9}, {
  3.721381025786459*^9, 
  3.721381025881826*^9}},ExpressionUUID->"269b3d32-aefc-4d7a-acea-\
9de2bdd98e97"],

Cell["\<\
William Lewin & Elias Chahine
wlewin@kth.se  echahine@kth.se\
\>", "Subtitle",
 CellChangeTimes->{{3.719892027466688*^9, 
  3.719892047265497*^9}},ExpressionUUID->"57eae278-d1ac-4785-ad01-\
61fa25bff17a"],

Cell[CellGroupData[{

Cell["Part 1", "Section",
 CellChangeTimes->{{3.719892062954335*^9, 
  3.7198920645211363`*^9}},ExpressionUUID->"9a707a71-4977-4374-86b1-\
3883a88eaa02"],

Cell[CellGroupData[{

Cell["Assignment", "Subsection",
 CellChangeTimes->{{3.719893143271935*^9, 
  3.7198931581801643`*^9}},ExpressionUUID->"85d4f9db-8c3f-4088-94d5-\
91a4c411e9bc"],

Cell[TextData[{
 "Introduce the system function of an IIR-filter as\n",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"H", "(", "z", ")"}], "=", 
    FractionBox[
     RowBox[{
      RowBox[{"(", 
       RowBox[{"1", "-", 
        SuperscriptBox["z", 
         RowBox[{"-", "1"}]]}], ")"}], "  ", 
      RowBox[{
       UnderoverscriptBox["\[Product]", 
        RowBox[{"k", "=", "1"}], "4"], 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"1", "-", 
          RowBox[{
           SuperscriptBox["z", 
            RowBox[{"-", "1"}]], 
           SuperscriptBox["e", 
            RowBox[{
             RowBox[{"-", "i"}], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"2", "k"}], "-", "1"}], ")"}], 
             FractionBox[
              RowBox[{"11", "\[Pi]"}], "100"]}]]}]}], ")"}], 
        RowBox[{"(", 
         RowBox[{"1", "-", 
          RowBox[{
           SuperscriptBox["z", 
            RowBox[{"-", "1"}]], 
           SuperscriptBox["e", 
            RowBox[{"i", " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"2", "k"}], "-", "1"}], ")"}], 
             FractionBox[
              RowBox[{"11", "\[Pi]"}], "100"]}]]}]}], ")"}]}]}]}], 
     RowBox[{"100", " ", 
      RowBox[{
       UnderoverscriptBox["\[Product]", 
        RowBox[{"k", "=", "1"}], "4"], 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"1", "-", 
          RowBox[{"0.9", 
           SuperscriptBox["z", 
            RowBox[{"-", "1"}]], 
           SuperscriptBox["e", 
            RowBox[{
             RowBox[{"-", "i"}], " ", "k", 
             FractionBox[
              RowBox[{"11", "\[Pi]"}], "50"]}]]}]}], ")"}], 
        RowBox[{"(", 
         RowBox[{"1", "-", 
          RowBox[{"0.9", 
           SuperscriptBox["z", 
            RowBox[{"-", "1"}]], 
           SuperscriptBox["e", 
            RowBox[{"i", " ", "k", 
             FractionBox[
              RowBox[{"11", "\[Pi]"}], "50"]}]]}]}], ")"}]}]}]}]]}], 
   TraditionalForm]], "DisplayFormula",
  ExpressionUUID -> "c05b0a33-9b57-4152-9729-6db815e7c202"],
 "\n"
}], "Text",
 CellChangeTimes->{{3.721381068331438*^9, 3.721381101485764*^9}, {
  3.721381190428986*^9, 3.721381201393652*^9}},
 ExpressionUUID -> "22174a65-b7c9-49b0-ab91-5a6309b13340"],

Cell[CellGroupData[{

Cell[TextData[{
 "Make a pole-zero plot of ",
 Cell[BoxData[
  FormBox[
   RowBox[{"H", "(", "z", ")"}], TraditionalForm]],ExpressionUUID->
  "b1b8a5fe-4c08-45af-9224-32bfbf40ba76"],
 ". Is the system stable?"
}], "Item",ExpressionUUID->"8ed9aeac-e6f6-4876-87c3-60845d22082e"],

Cell["\<\
Discuss how the filter works, what happens with certain frequencies?\
\>", "Item",ExpressionUUID->"f3010108-3526-4e6d-ae57-cece700c8b50"],

Cell["Illustrate the frequency response of the IIR.\[AliasDelimiter]", "Item",
 CellChangeTimes->{3.721552349126934*^9},
 ExpressionUUID -> "ef7a7622-a21a-49f0-867b-89fabc6a1c44"],

Cell["Sketch a direct form structure to illustrate the IIR.", "Item",
 ExpressionUUID -> "3ca13ce3-5629-4612-bccc-b1dbc0131843"],

Cell[TextData[{
 "Introduce the signal ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{
     RowBox[{"x", "(", "t", ")"}], "=", 
     RowBox[{
      FractionBox["1", "\[Pi]"], 
      RowBox[{
       UnderoverscriptBox["\[Sum]", 
        RowBox[{"k", "=", "1"}], "9"], 
       RowBox[{
        FractionBox[
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{"-", "1"}], ")"}], 
          RowBox[{"k", "-", "1"}]], "k"], 
        RowBox[{"sin", "(", 
         RowBox[{"2", " ", "\[Pi]", " ", 
          SubscriptBox["f", "0"], " ", "k", " ", "t"}], ")"}]}]}]}]}], ",", 
    " ", 
    RowBox[{
     SubscriptBox["f", "0"], "=", 
     RowBox[{"\[AliasDelimiter]", 
      RowBox[{"220", "Hz"}]}]}]}], TraditionalForm]],
  ExpressionUUID -> "3e54d5c9-7500-48e6-b4ff-ffa2065faf82"],
 ". This signal is sampled with the frequency ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubscriptBox["f", "s"], "=", 
    RowBox[{"4", "kHz"}]}], TraditionalForm]],
  ExpressionUUID -> "a5cbd117-6e71-4af7-a975-918262e13a9c"],
 ". Plot the sampled signal ",
 Cell[BoxData[
  FormBox[
   RowBox[{"x", "[", "n", "]"}], TraditionalForm]],
  ExpressionUUID -> "4c4229ef-072b-449a-99d0-9f96dda81eba"],
 "."
}], "Item",
 CellChangeTimes->{{3.721552355680634*^9, 3.721552355680826*^9}},
 UnderoverscriptBoxOptions->{LimitsPositioning->False},
 ExpressionUUID -> "00f54344-1ae4-4190-85ba-fd604b8d8e95"],

Cell[TextData[{
 "Now, the signal ",
 Cell[BoxData[
  FormBox[
   RowBox[{"x", "[", "n", "]"}], TraditionalForm]],ExpressionUUID->
  "48a6a884-3aa8-49f4-b204-5c9c97cf02a6"],
 " is input to the IIR above. Compute and plot the output signal ",
 Cell[BoxData[
  FormBox[
   RowBox[{"y", "[", "n", "]"}], TraditionalForm]],ExpressionUUID->
  "89a56dd1-d454-4e5a-bf0d-a640c118d945"],
 "."
}], "Item",
 UnderoverscriptBoxOptions->{
 LimitsPositioning->
  False},ExpressionUUID->"45e7f986-2ec6-45e4-97db-6798bc3e3e96"],

Cell[TextData[{
 "Finally, draw and compare the two-sided spectrum of ",
 Cell[BoxData[
  FormBox[
   RowBox[{"x", "[", "n", "]"}], TraditionalForm]],ExpressionUUID->
  "62d9e7ac-7ff7-48dd-8d82-7bc1d34924e9"],
 " and ",
 Cell[BoxData[
  FormBox[
   RowBox[{"y", "[", "n", "]"}], TraditionalForm]],ExpressionUUID->
  "c5d2d8bc-7b8f-42f7-91c5-c319be864b9a"],
 "."
}], "Item",
 UnderoverscriptBoxOptions->{
 LimitsPositioning->
  False},ExpressionUUID->"0854fe8b-c423-48ef-b89d-07053b2a70d4"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Discussion", "Subsection",
 CellChangeTimes->{{3.719893143271935*^9, 
  3.7198931740773067`*^9}},ExpressionUUID->"dcbb5e0b-45b0-45d9-b0b0-\
b5103e9013c9"],

Cell[CellGroupData[{

Cell["Is the system stable?", "Subsubsection",
 CellChangeTimes->{{3.7222321534229116`*^9, 3.722232171101377*^9}, {
  3.7222324211602*^9, 
  3.722232436528852*^9}},ExpressionUUID->"acf3a624-4dd0-4ea8-a9fe-\
b16e0c12fde8"],

Cell[TextData[{
 "\n",
 Cell[BoxData[
  GraphicsBox[{{
     {RGBColor[1, 0, 0], 
      LineBox[{{-0.8601333610785824, -0.3546466211953664}, \
{-0.8134643135202702, -0.30797757363705425`}}], 
      LineBox[{{-0.8601333610785824, -0.30797757363705425`}, \
{-0.8134643135202702, -0.3546466211953664}}]}, 
     {RGBColor[1, 0, 0], 
      LineBox[{{-0.8601333610785824, 
       0.30797757363705425`}, {-0.8134643135202702, 0.3546466211953664}}], 
      LineBox[{{-0.8601333610785824, 
       0.3546466211953664}, {-0.8134643135202702, 0.30797757363705425`}}]}, 
     {RGBColor[1, 0, 0], 
      LineBox[{{-0.4569128304706999, 
       0.7653414882603209}, {-0.4102437829123878, 0.8120105358186331}}], 
      LineBox[{{-0.4569128304706999, 
       0.8120105358186331}, {-0.4102437829123878, 0.7653414882603209}}]}, 
     {RGBColor[1, 0, 0], 
      LineBox[{{-0.45691283047069986`, -0.8120105358186331}, \
{-0.4102437829123877, -0.7653414882603211}}], 
      LineBox[{{-0.45691283047069986`, -0.7653414882603211}, \
{-0.4102437829123877, -0.8120105358186331}}]}, 
     {RGBColor[1, 0, 0], 
      LineBox[{{-0.02333452377915607, -0.02333452377915607}, {
       0.02333452377915607, 0.02333452377915607}}], 
      LineBox[{{-0.02333452377915607, 0.02333452377915607}, {
       0.02333452377915607, -0.02333452377915607}}]}, 
     {RGBColor[1, 0, 0], 
      LineBox[{{0.14530865934799622`, -0.907393049434976}, {
       0.19197770690630836`, -0.8607240018766638}}], 
      LineBox[{{0.14530865934799622`, -0.8607240018766638}, {
       0.19197770690630836`, -0.907393049434976}}]}, 
     {RGBColor[1, 0, 0], 
      LineBox[{{0.14530865934799633`, 0.8607240018766638}, {
       0.19197770690630847`, 0.907393049434976}}], 
      LineBox[{{0.14530865934799633`, 0.907393049434976}, {
       0.19197770690630847`, 0.8607240018766638}}]}, 
     {RGBColor[1, 0, 0], 
      LineBox[{{0.6701273947190542, -0.5970161145529767}, {
       0.7167964422773663, -0.5503470669946644}}], 
      LineBox[{{0.6701273947190542, -0.5503470669946644}, {
       0.7167964422773663, -0.5970161145529767}}]}, 
     {RGBColor[1, 0, 0], 
      LineBox[{{0.6701273947190542, 0.5503470669946644}, {0.7167964422773663, 
       0.5970161145529767}}], 
      LineBox[{{0.6701273947190542, 0.5970161145529767}, {0.7167964422773663, 
       0.5503470669946644}}]}}, {
     {RGBColor[0, 0, 1], 
      CircleBox[{-0.7501110696304596, -0.6613118653236518}, 0.033]}, 
     {RGBColor[0, 0, 1], 
      CircleBox[{-0.7501110696304596, 0.6613118653236518}, 0.033]}, 
     {RGBColor[0, 0, 1], 
      CircleBox[{-0.15643446504023095, -0.9876883405951378}, 0.033]}, 
     {RGBColor[0, 0, 1], 
      CircleBox[{-0.15643446504023073, 0.9876883405951377}, 0.033]}, 
     {RGBColor[0, 0, 1], 
      CircleBox[{0.5090414157503707, -0.8607420270039429}, 0.033]}, 
     {RGBColor[0, 0, 1], 
      CircleBox[{0.5090414157503714, 0.8607420270039444}, 0.033]}, 
     {RGBColor[0, 0, 1], 
      CircleBox[{0.9408807689542225, 0.33873792024528976}, 0.033]}, 
     {RGBColor[0, 0, 1], 
      CircleBox[{0.9408807689542261, -0.33873792024529237}, 0.033]}, 
     {RGBColor[0, 0, 1], CircleBox[{1.0000000000000027, 0}, 0.033]}}},
   AlignmentPoint->Center,
   AspectRatio->Automatic,
   Axes->True,
   AxesLabel->{
     FormBox["\"Re\"", TraditionalForm], 
     FormBox["\"Im\"", TraditionalForm]},
   AxesOrigin->Automatic,
   AxesStyle->{},
   Background->None,
   BaseStyle->{},
   BaselinePosition->Automatic,
   ColorOutput->Automatic,
   ContentSelectable->Automatic,
   CoordinatesToolOptions:>Automatic,
   DisplayFunction:>$DisplayFunction,
   Epilog->{},
   FormatType:>TraditionalForm,
   Frame->False,
   FrameLabel->None,
   FrameStyle->{},
   FrameTicks->Automatic,
   FrameTicksStyle->{},
   GridLines->None,
   GridLinesStyle->{},
   ImageMargins->0.,
   ImagePadding->All,
   ImageSize->Automatic,
   ImageSizeRaw->Automatic,
   LabelStyle->{},
   Method->Automatic,
   PlotLabel->FormBox["\"Pole-zero plot\"", TraditionalForm],
   PlotRange->{{-1.1, 1.1000000000000028`}, {-1.1, 1.1}},
   PlotRangeClipping->False,
   PlotRangePadding->Automatic,
   PlotRegion->Automatic,
   PreserveImageOptions->Automatic,
   Prolog->{
     GrayLevel[0.5], 
     CircleBox[{0, 0}]},
   RotateLabel->True,
   Ticks->Automatic,
   TicksStyle->{}]], "Output",
  CellChangeTimes->{
   3.721467622256089*^9, 3.721467817918461*^9, {3.721553830319899*^9, 
    3.721553837180533*^9}, {3.721553892237356*^9, 3.721553911669367*^9}, {
    3.721555074654304*^9, 3.721555102502056*^9}, 3.721555236349832*^9, 
    3.7220791879396152`*^9},ExpressionUUID->
  "aefeb15d-5a5e-46db-87e7-d1baa09b0ecd"],
 "\n\nThe system is stable. All the poles are located within the unit circle; \
meaning that the response signal will weaken with time and not grow to \
infinity. We can also plot the step response to further display the weakening \
over time:\n\n",
 Cell[BoxData[
  GraphicsBox[{{}, GraphicsComplexBox[CompressedData["
1:eJzt1dtLk3EYwPFXMdRYMm2kTpM5RWTJmKe56Q6PuunSVFaKWS7NFXpRmnQA
s9GWR1IzTyMp0gwjJcWgiIpwXVSWQepVFwblIaohWIq0hOgdPrt4n5v+AX/w
8vLd58e7383DL7Ki5uBJb4Zh+tnH/fasesF49peLjdqtWtWW7FmC45aeSWTI
7zFLLJYedD9ol0n+jJo8zoemfSXyD0KPC8Byt8CuG+9GD4G/c+qhhJ3d6OHQ
qBSO9O7qQhfB88KB9qCOa+hiYALkrv5zIvRoWPf1P3u1tRk7BsKDdGs+IQ24
PxZ6ysFXLrOhS6B8RWmsMl9Gj4NnsrLOiL5L6FK4kedbNNxbhy6DJZMxctN5
Hj0erJ/8Xzgrz6AnwPVS85Q5ugw7ESb6MqaabBdwfxLwKu7VF6x79ieDw/lw
7EjKKXQ58OZ5fL1fFXoK9FZPvm4sPYGugPcB+c1zE+XoSlC4bru6mBL0VIDp
VvObKznoafD5e5Qs+GMxtgpmliojAjs831PDx7BXtohvR9E1wB/9ev+xvQhd
C4cXbWGze43oAFZ5bkvtSM6WWwFmauyF86ZM9HRwhM68m34qR08H5sfK7J24
Dc2WZ4Ast26schjPZ82A36uDv1o6jfh/mQBOaAms0aNnwuD66d0HHmnQdcAU
q3boSuXobLeLJQqXFF0PoB4Yig0Wo+uBedC26dPmhZ4FjGl8o9YgxPNlgVU1
a0hdVuL5s0EkWHjZUKZCzwZH3k37sVtSdAM4FvuWD7mi0A3AVC8If06Fou8H
xsv7ydpbnmceyFrVkh+Am36k+aQFpENIh5MWkRaTjiYdQzqWtIR0HGkpaRnp
eNIJpBNJJ5FOJi0nnUJaQVpJOpV0GmkVaTVpDWktaeC2lTQ7L1wnzc4L10mz
88J10u554Thpdl64Tto9Lxwnzc4L10mz88J10u55IWv7ftm+X7bvl//fL/8A
2qnO9g==
     "], {{{}, {}, {}, 
       {RGBColor[1, 0, 0], Opacity[0.3], LineBox[{53, 2}], LineBox[{55, 4}], 
        LineBox[{57, 6}], LineBox[{59, 8}], LineBox[{61, 10}], 
        LineBox[{62, 11}], LineBox[{64, 13}], LineBox[{66, 15}], 
        LineBox[{68, 17}], LineBox[{71, 20}], LineBox[{73, 22}], 
        LineBox[{75, 24}], LineBox[{77, 26}], LineBox[{80, 29}], 
        LineBox[{82, 31}], LineBox[{84, 33}], LineBox[{86, 35}], 
        LineBox[{89, 38}], LineBox[{91, 40}], LineBox[{93, 42}], 
        LineBox[{95, 44}], LineBox[{96, 45}], LineBox[{98, 47}], 
        LineBox[{100, 49}], LineBox[{102, 51}]}, 
       {RGBColor[1, 0, 0], Opacity[0.3], LineBox[{52, 1}], LineBox[{54, 3}], 
        LineBox[{56, 5}], LineBox[{58, 7}], LineBox[{60, 9}], 
        LineBox[{63, 12}], LineBox[{65, 14}], LineBox[{67, 16}], 
        LineBox[{69, 18}], LineBox[{70, 19}], LineBox[{72, 21}], 
        LineBox[{74, 23}], LineBox[{76, 25}], LineBox[{78, 27}], 
        LineBox[{79, 28}], LineBox[{81, 30}], LineBox[{83, 32}], 
        LineBox[{85, 34}], LineBox[{87, 36}], LineBox[{88, 37}], 
        LineBox[{90, 39}], LineBox[{92, 41}], LineBox[{94, 43}], 
        LineBox[{97, 46}], LineBox[{99, 48}], LineBox[{101, 50}]}}, {{}, 
       {RGBColor[1, 0, 0], PointSize[0.011000000000000001`], 
        AbsoluteThickness[1.6], 
        PointBox[{103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 
         115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128,
          129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 
         142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 
         153}]}, {}}}], {}, {}, {{}, {}}},
   AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
   Axes->{True, True},
   AxesLabel->{
     FormBox[
      StyleBox["\"n\"", Italic, StripOnInput -> False], TraditionalForm], 
     FormBox[
      InterpretationBox[
      "\"\\!\\(\\*FormBox[StyleBox[\\\"\\\\\\\"y\\\\\\\"\\\", Italic, \
Rule[StripOnInput, False]], \
TraditionalForm]\\)[\\!\\(\\*FormBox[StyleBox[\\\"\\\\\\\"n\\\\\\\"\\\", \
Italic, Rule[StripOnInput, False]], TraditionalForm]\\)]\"", 
       StringForm["`1`[`2`]", 
        Style["y", Italic], 
        Style["n", Italic]], Editable -> False], TraditionalForm]},
   AxesOrigin->{0, 0},
   DisplayFunction->Identity,
   Frame->{{False, False}, {False, False}},
   FrameLabel->{{None, None}, {None, None}},
   FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
   GridLines->{None, None},
   GridLinesStyle->Directive[
     GrayLevel[0.5, 0.4]],
   ImagePadding->All,
   ImageSize->{262.56640625, Automatic},
   Method->{"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
         (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
          Part[#, 1]], 
         (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
          Part[#, 2]]}& ), "CopiedValueFunction" -> ({
         (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
          Part[#, 1]], 
         (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
          Part[#, 2]]}& )}},
   PlotLabel->FormBox["\"Impulse response\"", TraditionalForm],
   PlotRange->{{0, 50.}, {-0.019032973847990273`, 0.01903338977071494}},
   PlotRangeClipping->True,
   PlotRangePadding->{{
      Scaled[0.02], 
      Scaled[0.02]}, {
      Scaled[0.05], 
      Scaled[0.05]}},
   Ticks->{Automatic, Automatic}]],
  CellChangeTimes->{
   3.690707971322316*^9, 3.6907166888387537`*^9, {3.690784029663591*^9, 
    3.6907840559530115`*^9}, 3.6907841215917788`*^9, 3.690784424832896*^9},
  ExpressionUUID->"7e0080dc-3f3a-4b4b-b346-ae02708e703b"],
 "\n"
}], "Text",
 CellChangeTimes->{{3.7222322928998117`*^9, 
  3.722232440563129*^9}},ExpressionUUID->"c2509b87-9a93-42ff-b39f-\
25d7031bc92a"]
}, Closed]],

Cell[CellGroupData[{

Cell["Discuss the filters function", "Subsubsection",
 CellChangeTimes->{{3.7222321534229116`*^9, 3.72223215613405*^9}, {
  3.7222324424807653`*^9, 
  3.722232464025016*^9}},ExpressionUUID->"f2e3b2ff-caf0-41e3-927c-\
1a7ccccecbf2"],

Cell["\<\
The filter works as a high-pass filter of sorts. Some frequencies are even \
removed completely. \
\>", "Text",
 CellChangeTimes->{{3.722232472521722*^9, 
  3.722232500343892*^9}},ExpressionUUID->"7d2fc40a-a965-44d6-acac-\
5a2b2b2e6176"]
}, Closed]],

Cell[CellGroupData[{

Cell["Illustrate the frequency response of the IIR", "Subsubsection",
 CellChangeTimes->{{3.7222321534229116`*^9, 3.72223215613405*^9}, {
  3.722232516785718*^9, 
  3.722232527830206*^9}},ExpressionUUID->"ee618c1f-4806-4ea6-81b0-\
6138ee76fc82"],

Cell[TextData[{
 Cell[BoxData[
  GraphicsBox[{{{}, {}, 
     TagBox[
      {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], 
       Opacity[1.], LineBox[CompressedData["
1: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
        "]]},
      Annotation[#, "Charting`Private`Tag$2705#1"]& ]}, {}, {}},
   AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
   Axes->{True, True},
   AxesLabel->{
     FormBox["\"\[Omega]\"", TraditionalForm], 
     FormBox[
      TagBox[
       TemplateBox[{
         RowBox[{"H", "(", 
           SuperscriptBox["\[ExponentialE]", "\[ImaginaryJ]\[Omega]"], ")"}]},
         "Abs"], HoldForm], TraditionalForm]},
   AxesOrigin->{0, 0},
   DisplayFunction->Identity,
   Frame->{{False, False}, {False, False}},
   FrameLabel->{{None, None}, {None, None}},
   FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
   GridLines->{None, None},
   GridLinesStyle->Directive[
     GrayLevel[0.5, 0.4]],
   ImagePadding->All,
   Method->{
    "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
     AbsolutePointSize[6], "ScalingFunctions" -> None, 
     "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
         (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
          Part[#, 1]], 
         (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
          Part[#, 2]]}& ), "CopiedValueFunction" -> ({
         (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
          Part[#, 1]], 
         (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
          Part[#, 2]]}& )}},
   PlotLabel->FormBox["\"Frequency response\"", TraditionalForm],
   PlotRange->
    NCache[{{-Pi, Pi}, {0, 0.35}}, {{-3.141592653589793, 3.141592653589793}, {
      0, 0.35}}],
   PlotRangeClipping->True,
   PlotRangePadding->{{0, 0}, {0, 0}},
   Ticks->{Automatic, Automatic}]],
  CellChangeTimes->{
   3.721469521354857*^9, 3.7215539158085327`*^9, 3.721555075128183*^9, {
    3.7215551061968393`*^9, 3.721555128187701*^9}, 3.721555236875311*^9, 
    3.722079196467346*^9},ExpressionUUID->
  "b5bb7c7b-08f7-4b93-89d7-deabc53dc269"],
 "\n\nBy plotting the frequency response from \[Omega] = - \[Pi] \[Rule] \
\[Pi]  we can see how it affects different signals. The filter removes \
signals with low frequencies, acting as a highpass filter."
}], "Text",
 CellChangeTimes->{{3.722232539222253*^9, 3.722232566525299*^9}, {
  3.722232635557386*^9, 
  3.7222328105573187`*^9}},ExpressionUUID->"ceaf96ac-2ecf-4e6e-84b2-\
b5149b5017f8"]
}, Closed]],

Cell[CellGroupData[{

Cell["Sketch a direct form structure to illustrate the IIR", "Subsubsection",
 CellChangeTimes->{{3.7222321534229116`*^9, 3.72223215613405*^9}, {
  3.722232832574882*^9, 
  3.7222328497944393`*^9}},ExpressionUUID->"b74411c9-31aa-4d62-aa89-\
8cd2f453861e"],

Cell[TextData[{
 "First off, we expand the numerator of the signal to the 9th order, then the \
denominator by the same procedure. \n",
 Cell[BoxData[
  GraphicsBox[{GeometricTransformationBox[InsetBox[
      StyleBox[
       TagBox[
        RowBox[{"x", "[", "n", "]"}],
        HoldForm],
       TextAlignment->Center,
       FontSize->16,
       Background->GrayLevel[
        1.]], {0.2147569444444437, 0.46987951807229034}, {Left, Baseline},
      Alignment->{Left, Top}], {{{{0.9999999999999997, 0.}, {0., 
       0.9999999999999997}}, {-0.17474721618928327`, 0.35758502293938843`}}}],
     PointBox[{0.25926584878246733`, 0.841894861162338}], 
    {AbsoluteThickness[1], Arrowheads[0.02535128630497907], StrokeForm[{
     GrayLevel[0.], Opacity[1.]}], EdgeForm[{RGBColor[0., 0., 0.], Opacity[
     1.], AbsoluteThickness[1]}], 
     ArrowBox[{{0.25926584878246733`, 0.842836480748025}, {
      0.25926584878246733`, 0.7222885355425454}}]}, 
    {AbsoluteThickness[1], Arrowheads[0.024774220576332863`], StrokeForm[{
     GrayLevel[0.], Opacity[1.]}], EdgeForm[{RGBColor[0., 0., 0.], Opacity[
     1.], AbsoluteThickness[1]}], 
     ArrowBox[{{0.12940376199417614`, 0.8428364807480258}, {
      0.5804598929398561, 0.8428364807480258}}]}, 
    GeometricTransformationBox[InsetBox[
      StyleBox[
       TagBox[
        RowBox[{"y", "[", "n", "]"}],
        HoldForm],
       TextAlignment->Center,
       FontSize->16,
       Background->GrayLevel[1.]], {0.9140624999999999, 0.4698795180722919}, {
      Left, Baseline},
      Alignment->{Left, Top}], {{{{0.9999999999999997, 0.}, {0., 
       0.9999999999999997}}, {0.3072603619060569, 0.3577990273350185}}}], 
    {AbsoluteThickness[1], Arrowheads[0.02535128630497907], StrokeForm[{
     GrayLevel[0.], Opacity[1.]}], EdgeForm[{RGBColor[0., 0., 0.], Opacity[
     1.], AbsoluteThickness[1]}], 
     ArrowBox[{{0.2578889348537889, 0.6442133946767034}, {0.2578889348537889, 
      0.5236654494712237}}]}, 
    {AbsoluteThickness[1], Arrowheads[0.024774220576332863`], StrokeForm[{
     GrayLevel[0.], Opacity[1.]}], EdgeForm[{RGBColor[0., 0., 0.], Opacity[
     1.], AbsoluteThickness[1]}], 
     ArrowBox[{{0.2588171899774071, 0.5976810104421879}, {
      0.40342281938019053`, 0.5976810104421879}}]}, 
    {AbsoluteThickness[1], Arrowheads[0.024774220576332863`], StrokeForm[{
     GrayLevel[0.], Opacity[1.]}], EdgeForm[{RGBColor[0., 0., 0.], Opacity[
     1.], AbsoluteThickness[1]}], 
     ArrowBox[{{0.25679176777691315`, 0.3995677851957258}, {
      0.4019354014628148, 0.3995677851957258}}]}, 
    PointBox[{0.2577121764660831, 0.5981095504278743}], 
    PointBox[{0.2567705568803958, 0.39942781784783665`}], 
    {AbsoluteThickness[1], Arrowheads[0.02535128630497907], StrokeForm[{
     GrayLevel[0.], Opacity[1.]}], EdgeForm[{RGBColor[0., 0., 0.], Opacity[
     1.], AbsoluteThickness[1]}], 
     ArrowBox[{{0.4384343123976811, 0.6962049107557098}, {0.4384343123976811, 
      0.6277117600707782}}]}, 
    {AbsoluteThickness[1], Arrowheads[0.02535128630497907], StrokeForm[{
     GrayLevel[0.], Opacity[1.]}], EdgeForm[{RGBColor[0., 0., 0.], Opacity[
     1.], AbsoluteThickness[1]}], 
     ArrowBox[{{0.4356094536406189, 0.49563993900429737`}, {
      0.4356094536406189, 0.4271467883193658}}]}, 
    {AbsoluteThickness[1], StrokeForm[{GrayLevel[0.], Opacity[1.]}], 
     EdgeForm[{GrayLevel[0.], Opacity[1.]}], EdgeForm[None], 
     LineBox[{{0.44089998810840303`, 0.5963975201609973}, {0.6124459573221004,
       0.596397520160997}}]}, 
    {AbsoluteThickness[1], Arrowheads[0.02535128630497907], StrokeForm[{
     GrayLevel[0.], Opacity[1.]}], EdgeForm[{RGBColor[0., 0., 0.], Opacity[
     1.], AbsoluteThickness[1]}], 
     ArrowBox[{{0.6114335609470248, 0.16065279016474102`}, {
      0.6114335609470248, 0.8140890593124316}}]}, 
    GeometricTransformationBox[InsetBox[
      StyleBox[
       TagBox[
        RowBox[{"x", "[", 
         RowBox[{"n", "-", "1"}], "]"}],
        HoldForm],
       TextAlignment->Center,
       FontSize->16,
       Background->GrayLevel[
        1.]], {0.2147569444444437, 0.46987951807229034}, {Left, Baseline},
      Alignment->{Left, Top}], {{{{0.9999999999999997, 0.}, {0., 
       0.9999999999999997}}, {-0.11476604858099701`, 0.12587598339136563`}}}],
     GeometricTransformationBox[InsetBox[
      StyleBox[
       TagBox[
        RowBox[{"x", "[", 
         RowBox[{"n", "-", "2"}], "]"}],
        HoldForm],
       TextAlignment->Center,
       FontSize->16,
       Background->GrayLevel[
        1.]], {0.2147569444444437, 0.46987951807229034}, {Left, Baseline},
      Alignment->{Left, Top}], {{{{0.9999999999999997, 0.}, {0., 
       0.9999999999999997}}, {-0.13171520112336985`, -0.07468898836004678}}}], 
    {AbsoluteThickness[1], StrokeForm[{GrayLevel[0.], Opacity[1.]}], 
     EdgeForm[{GrayLevel[0.], Opacity[1.]}], EdgeForm[None], 
     LineBox[{{0.4450281287395047, 0.39865741145254885`}, {0.6095435254444439,
       0.3986574114525485}}]}, 
    {AbsoluteThickness[1], StrokeForm[{GrayLevel[0.], Opacity[1.]}], 
     EdgeForm[{GrayLevel[0.], Opacity[1.]}], EdgeForm[None], 
     LineBox[{{0.2557433261074725, 0.44411195941183945`}, {0.2557433261074725,
       0.33368566493829044`}}]}, 
    {AbsoluteThickness[1], Arrowheads[0.024774220576332863`], StrokeForm[{
     GrayLevel[0.], Opacity[1.]}], EdgeForm[{RGBColor[0., 0., 0.], Opacity[
     1.], AbsoluteThickness[1]}], 
     ArrowBox[{{0.9542331514382023, 0.840934495595441}, {1.2138360089597777`, 
      0.8409344955954412}}]}, {{
      PointBox[{1.112619936376164, 0.8362451436482132}], 
      {AbsoluteThickness[1], Arrowheads[0.02535128630497907], StrokeForm[{
       GrayLevel[0.], Opacity[1.]}], EdgeForm[{RGBColor[0., 0., 0.], Opacity[
       1.], AbsoluteThickness[1]}], 
       ArrowBox[{{1.112619936376164, 0.8447113172511359}, {1.112619936376164, 
        0.7167828856045048}}]}}, 
     {AbsoluteThickness[1], Arrowheads[0.02535128630497907], StrokeForm[{
      GrayLevel[0.], Opacity[1.]}], EdgeForm[{RGBColor[0., 0., 0.], Opacity[
      1.], AbsoluteThickness[1]}], 
      ArrowBox[{{1.1112430224474854`, 0.6518499621454883}, {
       1.1112430224474854`, 0.5181989794176739}}]}, 
     PointBox[{1.1129109341189212`, 0.20399363373686408`}], 
     {AbsoluteThickness[1], StrokeForm[{GrayLevel[0.], Opacity[1.]}], 
      EdgeForm[{GrayLevel[0.], Opacity[1.]}], EdgeForm[None], 
      LineBox[{{1.111883703345998, 0.25130244721687744`}, {1.111883703345998, 
       0.14087615274332843`}}]}}, 
    {AbsoluteThickness[1], Arrowheads[0.024774220576332863`], StrokeForm[{
     GrayLevel[0.], Opacity[1.]}], EdgeForm[{RGBColor[0., 0., 0.], Opacity[
     1.], AbsoluteThickness[1]}], 
     ArrowBox[{{1.1120613987244685`, 0.2023592911955825}, {0.9476959665646774,
       0.2023592911955825}}]}, 
    {AbsoluteThickness[1], Arrowheads[0.02535128630497907], StrokeForm[{
     GrayLevel[0.], Opacity[1.]}], EdgeForm[{RGBColor[0., 0., 0.], Opacity[
     1.], AbsoluteThickness[1]}], 
     ArrowBox[{{0.7384986771968525, 0.1568343573887431}, {0.7384986771968525, 
      0.8112762515358435}}]}, 
    {AbsoluteThickness[1], StrokeForm[{GrayLevel[0.], Opacity[1.]}], 
     EdgeForm[{GrayLevel[0.], Opacity[1.]}], EdgeForm[None], 
     LineBox[{{0.7386144956560443, 0.395126338006221}, {0.9228154953855061, 
      0.39512633800622066`}}]}, {
     PointBox[{1.1115370738526236`, 0.5998643908804066}], 
     {AbsoluteThickness[1], Arrowheads[0.024774220576332863`], StrokeForm[{
      GrayLevel[0.], Opacity[1.]}], EdgeForm[{RGBColor[0., 0., 0.], Opacity[
      1.], AbsoluteThickness[1]}], 
      ArrowBox[{{1.1107724990911065`, 0.598230048339125}, {0.9586731439581648,
        0.598230048339125}}]}, 
     {AbsoluteThickness[1], StrokeForm[{GrayLevel[0.], Opacity[1.]}], 
      EdgeForm[{GrayLevel[0.], Opacity[1.]}], EdgeForm[None], 
      LineBox[{{0.7400269250345753, 0.6012126285529155}, {0.9242279247640371, 
       0.6012126285529151}}]}}, 
    {AbsoluteThickness[1], Arrowheads[0.02535128630497907], StrokeForm[{
     GrayLevel[0.], Opacity[1.]}], EdgeForm[{RGBColor[0., 0., 0.], Opacity[
     1.], AbsoluteThickness[1]}], 
     ArrowBox[{{0.9301731029226203, 0.6997991853242254}, {0.9301731029226203, 
      0.6313060346392938}}]}, 
    {AbsoluteThickness[1], Arrowheads[0.02535128630497907], StrokeForm[{
     GrayLevel[0.], Opacity[1.]}], EdgeForm[{RGBColor[0., 0., 0.], Opacity[
     1.], AbsoluteThickness[1]}], 
     ArrowBox[{{0.927348244165558, 0.4949969254372195}, {0.927348244165558, 
      0.42650377475228796`}}]}, 
    {AbsoluteThickness[1], Arrowheads[0.024774220576332863`], StrokeForm[{
     GrayLevel[0.], Opacity[1.]}], EdgeForm[{RGBColor[0., 0., 0.], Opacity[
     1.], AbsoluteThickness[1]}], 
     ArrowBox[{{0.6431007865863411, 0.8441211589223756}, {0.7064872401527276, 
      0.8441211589223756}}]}, GeometricTransformationBox[GraphicsGroupBox[{
       {EdgeForm[{RGBColor[0., 0., 0.], Opacity[1.], AbsoluteThickness[1]}], 
        FaceForm[GrayLevel[1.]], 
        DiskBox[{0.7842448512345742, 0.8555856572400026}, \
{0.030480054312478133, 0.030480054312478022}]}, 
       GeometricTransformationBox[InsetBox[
         StyleBox[
          TagBox["+",
           HoldForm],
          TextAlignment->Center,
          FontSize->16,
          
          Background->RGBColor[
           1., 1., 1., 0]], {0.803672316384181, 0.5879943502824856}, {
         Left, Baseline},
         Alignment->{Left, Top}], {{-0.028265982021095926`, 
        0.2538135593220344}}]}], {{-0.04557907516377174, \
-0.2545656466641768}}], 
    GeometricTransformationBox[GraphicsGroupBox[{GeometricTransformationBox[
        {EdgeForm[{RGBColor[0., 0., 0.], Opacity[1.], AbsoluteThickness[1]}], 
         FaceForm[GrayLevel[1.]], 
         DiskBox[{0.7842448512345742, 0.8555856572400026}, \
{0.030480054312478133, 0.030480054312478022}]}, {{0.17903198492361794`, 
        0.014470839935138646`}}], GeometricTransformationBox[InsetBox[
         StyleBox[
          TagBox["\[Times]",
           HoldForm],
          TextAlignment->Center,
          FontSize->16,
          
          Background->RGBColor[
           1., 1., 1., 0]], {0.8037193973634653, 0.5861581920903961}, {
         Left, Baseline},
         Alignment->{Left, Top}], {{0.15106546807306595`, 
        0.2708246361080965}}]}], {{-0.5290765634132086, \
-0.27327377473490855`}}], 
    GeometricTransformationBox[GraphicsGroupBox[{GeometricTransformationBox[
        {EdgeForm[{RGBColor[0., 0., 0.], Opacity[1.], AbsoluteThickness[1]}], 
         FaceForm[GrayLevel[1.]], 
         DiskBox[{0.7842448512345742, 0.8555856572400026}, \
{0.030480054312478133, 0.030480054312478022}]}, {{0.17903198492361794`, 
        0.014470839935138646`}}], GeometricTransformationBox[InsetBox[
         StyleBox[
          TagBox["\[Times]",
           HoldForm],
          TextAlignment->Center,
          FontSize->16,
          
          Background->RGBColor[
           1., 1., 1., 0]], {0.8037193973634653, 0.5861581920903961}, {
         Left, Baseline},
         Alignment->{Left, Top}], {{0.15106546807306595`, 
        0.2683615819209034}}]}], {{-0.5290765634132086, \
-0.46960145835072775`}}], 
    GeometricTransformationBox[GraphicsGroupBox[{GeometricTransformationBox[
        {EdgeForm[{RGBColor[0., 0., 0.], Opacity[1.], AbsoluteThickness[1]}], 
         FaceForm[GrayLevel[1.]], 
         DiskBox[{0.7842448512345742, 0.8555856572400026}, \
{0.030480054312478133, 0.030480054312478022}]}, {{0.17903198492361794`, 
        0.014470839935138646`}}], GeometricTransformationBox[InsetBox[
         StyleBox[
          TagBox["\[Times]",
           HoldForm],
          TextAlignment->Center,
          FontSize->16,
          
          Background->RGBColor[
           1., 1., 1., 0]], {0.8037193973634653, 0.5861581920903961}, {
         Left, Baseline},
         Alignment->{Left, Top}], {{0.15106546807306592`, 
        0.2683615819209034}}]}], {{-0.04052906960563296, \
-0.4742005510561913}}], 
    GeometricTransformationBox[GraphicsGroupBox[{GeometricTransformationBox[
        {EdgeForm[{RGBColor[0., 0., 0.], Opacity[1.], AbsoluteThickness[1]}], 
         FaceForm[GrayLevel[1.]], 
         DiskBox[{0.7842448512345742, 0.8555856572400026}, \
{0.030480054312478133, 0.030480054312478022}]}, {{0.17903198492361794`, 
        0.014470839935138646`}}], GeometricTransformationBox[InsetBox[
         StyleBox[
          TagBox["\[Times]",
           HoldForm],
          TextAlignment->Center,
          FontSize->16,
          
          Background->RGBColor[
           1., 1., 1., 0]], {0.8037193973634653, 0.5861581920903961}, {
         Left, Baseline},
         Alignment->{Left, Top}], {{0.151065468073066, 
        0.2683615819209034}}]}], {{-0.034879352091508636`, \
-0.2665734324121234}}], 
    {FaceForm[GrayLevel[1.]], GeometricTransformationBox[GraphicsGroupBox[{
        {EdgeForm[GrayLevel[0]], 
         RectangleBox[{1.0197740112994351, 0.8968926553672316}, \
{1.0896856987048849, 0.8269809679617821}]}, 
        StyleBox[GeometricTransformationBox[
          StyleBox[InsetBox[
            StyleBox[Cell[TextData[Cell[BoxData[
              FormBox[
               SuperscriptBox["z", 
                RowBox[{"-", "1"}]], TraditionalForm]],ExpressionUUID->
              "988456b8-5eac-41a4-98f7-d0d27981f87c"]],
              GeneratedCell->False,
              CellAutoOverwrite->False,
              CellBaseline->Baseline,
              TextAlignment->Left,ExpressionUUID->
              "d696d81d-f31a-48bb-bbe5-a63aa5d4bc96"],
             
             Background->RGBColor[
              1., 1., 1., 0]], {0.6702833421161558, 0.32500000000000007}, {
            Left, Baseline},
            Alignment->{Left, Top}],
           FontSize->16], {{0.36079010421152785`, 0.5252824858757066}}],
         FontSize->16]}], {{-0.7980573877710055, -0.37814843950676}}]}, 
    {FaceForm[GrayLevel[1.]], GeometricTransformationBox[GraphicsGroupBox[{
        {EdgeForm[GrayLevel[0]], 
         RectangleBox[{1.0197740112994351, 0.8968926553672316}, \
{1.0896856987048849, 0.8269809679617821}]}, 
        StyleBox[GeometricTransformationBox[
          StyleBox[InsetBox[
            StyleBox[Cell[TextData[Cell[BoxData[
              FormBox[
               SuperscriptBox["z", 
                RowBox[{"-", "1"}]], TraditionalForm]],ExpressionUUID->
              "07dac71e-b7e7-4643-bb5c-c73ae66a2b4e"]],
              GeneratedCell->False,
              CellAutoOverwrite->False,
              CellBaseline->Baseline,
              TextAlignment->Left,ExpressionUUID->
              "2937b6a3-8a24-4eff-85a4-79909bbead00"],
             
             Background->RGBColor[
              1., 1., 1., 0]], {0.6702833421161558, 0.32500000000000007}, {
            Left, Baseline},
            Alignment->{Left, Top}],
           FontSize->16], {{0.36079010421152785`, 0.5252824858757066}}],
         FontSize->16]}], {{-0.7952325290139434, -0.1775834677553474}}]}, 
    {FaceForm[GrayLevel[1.]], GeometricTransformationBox[GraphicsGroupBox[{
        {EdgeForm[GrayLevel[0]], 
         RectangleBox[{1.0197740112994351, 0.8968926553672316}, \
{1.0896856987048849, 0.8269809679617821}]}, 
        StyleBox[GeometricTransformationBox[
          StyleBox[InsetBox[
            StyleBox[Cell[TextData[Cell[BoxData[
              FormBox[
               SuperscriptBox["z", 
                RowBox[{"-", "1"}]], TraditionalForm]],ExpressionUUID->
              "afb40b24-7d95-481a-8879-275478b23fb1"]],
              GeneratedCell->False,
              CellAutoOverwrite->False,
              CellBaseline->Baseline,
              TextAlignment->Left,ExpressionUUID->
              "3f45d1e3-43c7-49bc-ad2e-79def5eff363"],
             
             Background->RGBColor[
              1., 1., 1., 0]], {0.6702833421161558, 0.32500000000000007}, {
            Left, Baseline},
            Alignment->{Left, Top}],
           FontSize->16], {{0.36079010421152785`, 0.5252824858757066}}],
         FontSize->16]}], {{0.053637527483231834`, -0.3769361969692804}}]}, 
    {FaceForm[GrayLevel[1.]], GeometricTransformationBox[GraphicsGroupBox[{
        {EdgeForm[GrayLevel[0]], 
         RectangleBox[{1.0197740112994351, 0.8968926553672316}, \
{1.0896856987048849, 0.8269809679617821}]}, 
        StyleBox[GeometricTransformationBox[
          StyleBox[InsetBox[
            StyleBox[Cell[TextData[Cell[BoxData[
              FormBox[
               SuperscriptBox["z", 
                RowBox[{"-", "1"}]], TraditionalForm]],ExpressionUUID->
              "d6391847-c446-447e-b687-80ab7d545187"]],
              GeneratedCell->False,
              CellAutoOverwrite->False,
              CellBaseline->Baseline,
              TextAlignment->Left,ExpressionUUID->
              "59c8fdc3-b07f-43aa-a157-758a19274b45"],
             
             Background->RGBColor[
              1., 1., 1., 0]], {0.6702833421161558, 0.32500000000000007}, {
            Left, Baseline},
            Alignment->{Left, Top}],
           FontSize->16], {{0.36079010421152785`, 0.5252824858757066}}],
         FontSize->16]}], {{0.0564623862402939, -0.18323318526947174`}}]}, 
    {AbsoluteThickness[1], StrokeForm[{GrayLevel[0.], Opacity[1.]}], 
     EdgeForm[{GrayLevel[0.], Opacity[1.]}], EdgeForm[None], 
     LineBox[{{0.7387761133848627, 0.20320205267981784`}, {0.9229771131143245,
       0.2032020526798175}}]}, {
     {AbsoluteThickness[1], Arrowheads[0.02535128630497907], StrokeForm[{
      GrayLevel[0.], Opacity[1.]}], EdgeForm[{RGBColor[0., 0., 0.], Opacity[
      1.], AbsoluteThickness[1]}], 
      ArrowBox[{{0.9242943184751726, 0.3059325856084987}, {0.9242943184751726,
        0.23743943492356712`}}]}, 
     GeometricTransformationBox[GraphicsGroupBox[{GeometricTransformationBox[
         {EdgeForm[{RGBColor[0., 0., 0.], Opacity[1.], AbsoluteThickness[1]}],
           FaceForm[GrayLevel[1.]], 
          DiskBox[{0.7842448512345742, 0.8555856572400026}, \
{0.030480054312478133, 0.030480054312478022}]}, {{0.17903198492361794`, 
         0.014470839935138646`}}], GeometricTransformationBox[InsetBox[
          StyleBox[
           TagBox["\[Times]",
            HoldForm],
           TextAlignment->Center,
           FontSize->16,
           
           Background->RGBColor[
            1., 1., 1., 0]], {0.8037193973634653, 0.5861581920903961}, {
          Left, Baseline},
          Alignment->{Left, Top}], {{0.15106546807306595`, 
         0.2683615819209034}}]}], {{-0.04358299529601839, \
-0.6632648908849121}}]}, {
     {AbsoluteThickness[1], Arrowheads[0.02535128630497907], StrokeForm[{
      GrayLevel[0.], Opacity[1.]}], EdgeForm[{RGBColor[0., 0., 0.], Opacity[
      1.], AbsoluteThickness[1]}], 
      ArrowBox[{{1.1098048926362407`, 0.4482992994798547}, {
       1.1098048926362407`, 0.3120277092475734}}]}, {
      PointBox[{1.1100989440413789`, 0.3938276454735826}], 
      {AbsoluteThickness[1], Arrowheads[0.024774220576332863`], StrokeForm[{
       GrayLevel[0.], Opacity[1.]}], EdgeForm[{RGBColor[0., 0., 0.], Opacity[
       1.], AbsoluteThickness[1]}], 
       ArrowBox[{{1.1096393996340705`, 0.39219330293230104`}, {
        0.9550868290957588, 0.39219330293230104`}}]}}}, 
    {FaceForm[GrayLevel[1.]], GeometricTransformationBox[GraphicsGroupBox[{
        {EdgeForm[GrayLevel[0]], 
         RectangleBox[{1.0197740112994351, 0.8968926553672316}, \
{1.0896856987048849, 0.8269809679617821}]}, 
        StyleBox[GeometricTransformationBox[
          StyleBox[InsetBox[
            StyleBox[Cell[TextData[Cell[BoxData[
              FormBox[
               SuperscriptBox["z", 
                RowBox[{"-", "1"}]], TraditionalForm]],ExpressionUUID->
              "685e7dbe-7a7c-44cf-9f01-ba31704e3f59"]],
              GeneratedCell->False,
              CellAutoOverwrite->False,
              CellBaseline->Baseline,
              TextAlignment->Left,ExpressionUUID->
              "9632ee18-ddd4-495f-86e4-75f8003b5458"],
             
             Background->RGBColor[
              1., 1., 1., 0]], {0.6702833421161558, 0.32500000000000007}, {
            Left, Baseline},
            Alignment->{Left, Top}],
           FontSize->16], {{0.36079010421152785`, 0.5252824858757066}}],
         FontSize->16]}], {{0.05485989455500742, -0.5834567272419797}}]}, {
     {AbsoluteThickness[1], Arrowheads[0.024774220576332863`], StrokeForm[{
      GrayLevel[0.], Opacity[1.]}], EdgeForm[{RGBColor[0., 0., 0.], Opacity[
      1.], AbsoluteThickness[1]}], 
      ArrowBox[{{0.25696752576064447`, 0.2067218167882674}, {
       0.4045712210344427, 0.2067218167882674}}]}, 
     PointBox[{0.2568964688954921, 0.20658184944037827`}], 
     {AbsoluteThickness[1], Arrowheads[0.02535128630497907], StrokeForm[{
      GrayLevel[0.], Opacity[1.]}], EdgeForm[{RGBColor[0., 0., 0.], Opacity[
      1.], AbsoluteThickness[1]}], 
      ArrowBox[{{0.4357353656557153, 0.302793970596839}, {0.4357353656557153, 
       0.23430081991190743`}}]}, GeometricTransformationBox[InsetBox[
       StyleBox[
        TagBox[
         RowBox[{"x", "[", 
          RowBox[{"n", "-", "3"}], "]"}],
         HoldForm],
        TextAlignment->Center,
        FontSize->16,
        Background->GrayLevel[
         1.]], {0.2147569444444437, 0.46987951807229034}, {Left, Baseline},
       Alignment->{Left, Top}], {{{{0.9999999999999997, 0.}, {0., 
        0.9999999999999997}}, {-0.13158928910827358`, \
-0.26753495676750516`}}}], {
      {AbsoluteThickness[1], StrokeForm[{GrayLevel[0.], Opacity[1.]}], 
       EdgeForm[{GrayLevel[0.], Opacity[1.]}], EdgeForm[None], 
       LineBox[{{0.4426909865674088, 0.20581144304509047`}, {
        0.607206383272348, 0.20581144304509014`}}]}, 
      {AbsoluteThickness[1], StrokeForm[{GrayLevel[0.], Opacity[1.]}], 
       EdgeForm[{GrayLevel[0.], Opacity[1.]}], EdgeForm[None], 
       LineBox[{{0.2558692381225688, 0.2512659910043811}, {0.2558692381225688,
         0.14083969653083206`}}]}}, 
     GeometricTransformationBox[GraphicsGroupBox[{GeometricTransformationBox[
         {EdgeForm[{RGBColor[0., 0., 0.], Opacity[1.], AbsoluteThickness[1]}],
           FaceForm[GrayLevel[1.]], 
          DiskBox[{0.7842448512345742, 0.8555856572400026}, \
{0.030480054312478133, 0.030480054312478022}]}, {{0.17903198492361794`, 
         0.014470839935138646`}}], GeometricTransformationBox[InsetBox[
          StyleBox[
           TagBox["\[Times]",
            HoldForm],
           TextAlignment->Center,
           FontSize->16,
           
           Background->RGBColor[
            1., 1., 1., 0]], {0.8037193973634653, 0.5861581920903961}, {
          Left, Baseline},
          Alignment->{Left, Top}], {{0.1510654680730659, 
         0.2683615819209034}}]}], {{-0.5289506513981124, \
-0.6624474267581861}}], 
     {FaceForm[GrayLevel[1.]], GeometricTransformationBox[GraphicsGroupBox[{
         {EdgeForm[GrayLevel[0]], 
          RectangleBox[{1.0197740112994351, 0.8968926553672316}, \
{1.0896856987048849, 0.8269809679617821}]}, 
         StyleBox[GeometricTransformationBox[
           StyleBox[InsetBox[
             StyleBox[Cell[TextData[Cell[BoxData[
               FormBox[
                SuperscriptBox["z", 
                 RowBox[{"-", "1"}]], TraditionalForm]],ExpressionUUID->
               "27f9f8b5-408e-4594-aa9b-9577dcacf4fa"]],
               GeneratedCell->False,
               CellAutoOverwrite->False,
               CellBaseline->Baseline,
               TextAlignment->Left,ExpressionUUID->
               "97b34ca7-d81f-4073-b571-a6832f521f19"],
              
              Background->RGBColor[
               1., 1., 1., 0]], {0.6702833421161558, 0.32500000000000007}, {
             Left, Baseline},
             Alignment->{Left, Top}],
            FontSize->16], {{0.36079010421152785`, 0.5252824858757066}}],
          FontSize->16]}], {{-0.7979314757559093, -0.5709944079142184}}]}}, 
    {AbsoluteThickness[1], Dashing[{Medium, Medium}], StrokeForm[{GrayLevel[
     0.], Opacity[1.]}], EdgeForm[{GrayLevel[0.], Opacity[1.]}], EdgeForm[
     None], LineBox[{{1.1115471191453012`, 0.16276526377800105`}, {
      1.1115471191453012`, 0.0600431293840018}}]}, 
    {AbsoluteThickness[1], Dashing[{Medium, Medium}], StrokeForm[{GrayLevel[
     0.], Opacity[1.]}], EdgeForm[{GrayLevel[0.], Opacity[1.]}], EdgeForm[
     None], LineBox[{{0.7396259368792917, 0.16276526377800105`}, {
      0.7396259368792917, 0.0600431293840018}}]}, 
    {AbsoluteThickness[1], Dashing[{Medium, Medium}], StrokeForm[{GrayLevel[
     0.], Opacity[1.]}], EdgeForm[{GrayLevel[0.], Opacity[1.]}], EdgeForm[
     None], LineBox[{{0.6115471191453015, 0.16276526377800105`}, {
      0.6115471191453015, 0.0600431293840018}}]}, 
    {AbsoluteThickness[1], Dashing[{Medium, Medium}], StrokeForm[{GrayLevel[
     0.], Opacity[1.]}], EdgeForm[{GrayLevel[0.], Opacity[1.]}], EdgeForm[
     None], LineBox[{{0.25686731618963654`, 0.16030220959080888`}, {
      0.25686731618963654`, 0.05758007519680963}}]}, 
    GeometricTransformationBox[GraphicsGroupBox[{
       {EdgeForm[{RGBColor[0., 0., 0.], Opacity[1.], AbsoluteThickness[1]}], 
        FaceForm[GrayLevel[1.]], 
        DiskBox[{0.7842448512345742, 0.8555856572400026}, \
{0.030480054312478133, 0.030480054312478022}]}, 
       GeometricTransformationBox[InsetBox[
         StyleBox[
          TagBox["+",
           HoldForm],
          TextAlignment->Center,
          FontSize->16,
          
          Background->RGBColor[
           1., 1., 1., 0]], {0.803672316384181, 0.5879943502824856}, {
         Left, Baseline},
         Alignment->{Left, Top}], {{-0.028265982021095926`, 
        0.2538135593220344}}]}], {{-0.04861266732652815, \
-0.01322112522029828}}], GeometricTransformationBox[GraphicsGroupBox[{
       {EdgeForm[{RGBColor[0., 0., 0.], Opacity[1.], AbsoluteThickness[1]}], 
        FaceForm[GrayLevel[1.]], 
        DiskBox[{0.7842448512345742, 0.8555856572400026}, \
{0.030480054312478133, 0.030480054312478022}]}, 
       GeometricTransformationBox[InsetBox[
         StyleBox[
          TagBox["+",
           HoldForm],
          TextAlignment->Center,
          FontSize->16,
          
          Background->RGBColor[
           1., 1., 1., 0]], {0.803672316384181, 0.5879943502824856}, {
         Left, Baseline},
         Alignment->{Left, Top}], {{-0.028265982021095926`, 
        0.2538135593220344}}]}], {{-0.17422843087332618`, \
-0.01322112522029828}}], GeometricTransformationBox[GraphicsGroupBox[{
       {EdgeForm[{RGBColor[0., 0., 0.], Opacity[1.], AbsoluteThickness[1]}], 
        FaceForm[GrayLevel[1.]], 
        DiskBox[{0.7842448512345742, 0.8555856572400026}, \
{0.030480054312478133, 0.030480054312478022}]}, 
       GeometricTransformationBox[InsetBox[
         StyleBox[
          TagBox["+",
           HoldForm],
          TextAlignment->Center,
          FontSize->16,
          
          Background->RGBColor[
           1., 1., 1., 0]], {0.803672316384181, 0.5879943502824856}, {
         Left, Baseline},
         Alignment->{Left, Top}], {{-0.028265982021095926`, 
        0.2538135593220344}}]}], {{-0.04614961313933605, \
-0.45903393310207163`}}], GeometricTransformationBox[GraphicsGroupBox[{
       {EdgeForm[{RGBColor[0., 0., 0.], Opacity[1.], AbsoluteThickness[1]}], 
        FaceForm[GrayLevel[1.]], 
        DiskBox[{0.7842448512345742, 0.8555856572400026}, \
{0.030480054312478133, 0.030480054312478022}]}, 
       GeometricTransformationBox[InsetBox[
         StyleBox[
          TagBox["+",
           HoldForm],
          TextAlignment->Center,
          FontSize->16,
          
          Background->RGBColor[
           1., 1., 1., 0]], {0.803672316384181, 0.5879943502824856}, {
         Left, Baseline},
         Alignment->{Left, Top}], {{-0.028265982021095926`, 
        0.2538135593220344}}]}], {{-0.043686558952143906`, \
-0.6486891055158648}}], GeometricTransformationBox[GraphicsGroupBox[{
       {EdgeForm[{RGBColor[0., 0., 0.], Opacity[1.], AbsoluteThickness[1]}], 
        FaceForm[GrayLevel[1.]], 
        DiskBox[{0.7842448512345742, 0.8555856572400026}, \
{0.030480054312478133, 0.030480054312478022}]}, 
       GeometricTransformationBox[InsetBox[
         StyleBox[
          TagBox["+",
           HoldForm],
          TextAlignment->Center,
          FontSize->16,
          
          Background->RGBColor[
           1., 1., 1., 0]], {0.803672316384181, 0.5879943502824856}, {
         Left, Baseline},
         Alignment->{Left, Top}], {{-0.028265982021095926`, 
        0.2538135593220344}}]}], {{-0.1742284308733262, \
-0.2570634897523181}}], GeometricTransformationBox[GraphicsGroupBox[{
       {EdgeForm[{RGBColor[0., 0., 0.], Opacity[1.], AbsoluteThickness[1]}], 
        FaceForm[GrayLevel[1.]], 
        DiskBox[{0.7842448512345742, 0.8555856572400026}, \
{0.030480054312478133, 0.030480054312478022}]}, 
       GeometricTransformationBox[InsetBox[
         StyleBox[
          TagBox["+",
           HoldForm],
          TextAlignment->Center,
          FontSize->16,
          
          Background->RGBColor[
           1., 1., 1., 0]], {0.803672316384181, 0.5879943502824856}, {
         Left, Baseline},
         Alignment->{Left, Top}], {{-0.028265982021095926`, 
        0.2538135593220344}}]}], {{-0.17422843087332618`, \
-0.4565708789148797}}], GeometricTransformationBox[GraphicsGroupBox[{
       {EdgeForm[{RGBColor[0., 0., 0.], Opacity[1.], AbsoluteThickness[1]}], 
        FaceForm[GrayLevel[1.]], 
        DiskBox[{0.7842448512345742, 0.8555856572400026}, \
{0.030480054312478133, 0.030480054312478022}]}, 
       GeometricTransformationBox[InsetBox[
         StyleBox[
          TagBox["+",
           HoldForm],
          TextAlignment->Center,
          FontSize->16,
          
          Background->RGBColor[
           1., 1., 1., 0]], {0.803672316384181, 0.5879943502824856}, {
         Left, Baseline},
         Alignment->{Left, Top}], {{-0.028265982021095926`, 
        0.2538135593220344}}]}], {{-0.17176537668613406`, \
-0.6486891055158648}}], 
    GeometricTransformationBox[GraphicsGroupBox[{GeometricTransformationBox[
        {EdgeForm[{RGBColor[0., 0., 0.], Opacity[1.], AbsoluteThickness[1]}], 
         FaceForm[GrayLevel[1.]], 
         DiskBox[{0.7842448512345742, 0.8555856572400026}, \
{0.030480054312478133, 0.030480054312478022}]}, {{0.17903198492361794`, 
        0.014470839935138646`}}], GeometricTransformationBox[InsetBox[
         StyleBox[
          TagBox["\[Times]",
           HoldForm],
          TextAlignment->Center,
          FontSize->16,
          
          Background->RGBColor[
           1., 1., 1., 0]], {0.8037193973634653, 0.5861581920903961}, {
         Left, Baseline},
         Alignment->{Left, Top}], {{0.151065468073066, 
        0.2683615819209034}}]}], {{-0.03306337146196875, \
-0.030155019342629208`}}], {
     {AbsoluteThickness[1], Arrowheads[0.02535128630497907], StrokeForm[{
      GrayLevel[0.], Opacity[1.]}], EdgeForm[{RGBColor[0., 0., 0.], Opacity[
      1.], AbsoluteThickness[1]}], 
      ArrowBox[{{0.9308988843776629, 0.9416491361814008}, {0.9308988843776629,
        0.8731559854964692}}]}, InsetBox[
      StyleBox[
       TagBox[
        RowBox[{"1", "/", "100"}],
        HoldForm],
       TextAlignment->Center,
       FontSize->16,
       Background->GrayLevel[1.]], {0.8753197451286241, 0.9450016266028565}, {
      Left, Baseline},
      Alignment->{Left, Top}]}, 
    {AbsoluteThickness[1], Arrowheads[0.024774220576332863`], StrokeForm[{
     GrayLevel[0.], Opacity[1.]}], EdgeForm[{RGBColor[0., 0., 0.], Opacity[
     1.], AbsoluteThickness[1]}], 
     ArrowBox[{{0.7685954614461805, 0.8426086130106039}, {0.9008459737684926, 
      0.8426086130106041}}]}, InsetBox[
     StyleBox[
      TagBox["81.6544",
       HoldForm],
      TextAlignment->Center,
      FontSize->16,
      Background->GrayLevel[1.]], {0.8575533661740559, 0.7068965517241375}, {
     Left, Baseline},
     Alignment->{Left, Top}], InsetBox[
     StyleBox[
      TagBox["77.8267",
       HoldForm],
      TextAlignment->Center,
      FontSize->16,
      Background->GrayLevel[1.]], {0.8526272577996716, 0.4999999999999998}, {
     Left, Baseline},
     Alignment->{Left, Top}], InsetBox[
     StyleBox[
      TagBox["67.0446",
       HoldForm],
      TextAlignment->Center,
      FontSize->16,
      Background->GrayLevel[1.]], {0.8501642036124797, 0.31034482758620663}, {
     Left, Baseline},
     Alignment->{Left, Top}], InsetBox[
     StyleBox[
      TagBox[
       RowBox[{"-", "2.08675"}],
       HoldForm],
      TextAlignment->Center,
      FontSize->16,
      Background->GrayLevel[1.]], {0.35262725779967186, 0.7044334975369455}, {
     Left, Baseline},
     Alignment->{Left, Top}], InsetBox[
     StyleBox[
      TagBox[
       RowBox[{"-", "2.27535"}],
       HoldForm],
      TextAlignment->Center,
      FontSize->16,
      Background->GrayLevel[1.]], {0.3501642036124796, 0.30788177339901446}, {
     Left, Baseline},
     Alignment->{Left, Top}], InsetBox[
     StyleBox[
      TagBox["2.21423",
       HoldForm],
      TextAlignment->Center,
      FontSize->16,
      Background->GrayLevel[1.]], {0.3624794745484401, 0.49753694581280716}, {
     Left, Baseline},
     Alignment->{Left, Top}], 
    InsetBox["\[IndentingNewLine]", Scaled[{0.5, 0.5}], Center]},
   ContentSelectable->True,
   ImageMargins->0.,
   ImagePadding->{{0., 0.}, {0., 0.}},
   ImageSize->{436.05078125, 317.},
   PlotRange->{{0., 1.3333333333333335`}, {0., 1.}},
   PlotRangePadding->Automatic]],
  CellChangeTimes->{{3.6902229723350987`*^9, 3.6902230187179065`*^9}, {
    3.6902230788148737`*^9, 3.6902231060946493`*^9}, 3.690223138836071*^9, {
    3.690223173887932*^9, 3.690223268163005*^9}, {3.6902233366885653`*^9, 
    3.690223395886774*^9}, {3.6902237028994465`*^9, 3.6902237164954147`*^9}, {
    3.690223749055208*^9, 3.690223775376725*^9}, 3.6902241905458584`*^9, {
    3.690224852545867*^9, 3.690224929983774*^9}, {3.690225133745167*^9, 
    3.690225185678835*^9}, {3.6902252454571943`*^9, 3.6902252789748163`*^9}},
  ExpressionUUID->"1c7d64a9-59f2-4611-bf91-2b25450b1fb1"],
 "\n",
 Cell[BoxData[
  FormBox[
   SubscriptBox["b", "l"], TraditionalForm]],ExpressionUUID->
  "9a18ea8c-5732-4816-893d-95e85ea98241"],
 "={1.,-2.08675,2.21423,-2.27535,2.30205,-2.30205,2.27535,-2.21423,2.08675,-1}\
\n",
 Cell[BoxData[
  FormBox[
   SubscriptBox["a", "k"], TraditionalForm]],ExpressionUUID->
  "ed1a362b-af87-42d7-ab80-bc7e4764ec62"],
 "={100.,81.6544,77.8267,67.0446,62.7484,54.3061,51.0621,43.3945,43.0467}"
}], "Text",
 CellChangeTimes->{{3.7222328602139482`*^9, 3.72223286147563*^9}, {
  3.7222329430115967`*^9, 
  3.7222331180587597`*^9}},ExpressionUUID->"26875551-f923-4d7f-9bab-\
2c67ac5392ea"]
}, Closed]],

Cell[CellGroupData[{

Cell["Introduce a signal, plot the sampled signal x[n]", "Subsubsection",
 CellChangeTimes->{{3.7222321534229116`*^9, 3.72223215613405*^9}, {
  3.722233133620966*^9, 
  3.72223315749774*^9}},ExpressionUUID->"91e52814-e98b-48d5-a77d-\
21d9952552d8"],

Cell[TextData[{
 "Signal:\n",
 Cell[BoxData[
  GraphicsBox[{{{}, {}, 
     {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
      1.], LineBox[CompressedData["
1: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
uG2qh1u/hLf8DwAbfzA=
       "]]}}, {}, {}},
   AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
   Axes->{True, True},
   AxesLabel->{
     FormBox["\"t\"", TraditionalForm], 
     FormBox["\"x(t)\"", TraditionalForm]},
   AxesOrigin->{0, 0},
   DisplayFunction->Identity,
   Frame->{{False, False}, {False, False}},
   FrameLabel->{{None, None}, {None, None}},
   FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
   GridLines->{None, None},
   GridLinesStyle->Directive[
     GrayLevel[0.5, 0.4]],
   ImagePadding->All,
   ImageSize->{245.1328125, Automatic},
   Method->{
    "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
     AbsolutePointSize[6], "ScalingFunctions" -> None, 
     "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
         (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
          Part[#, 1]], 
         (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
          Part[#, 2]]}& ), "CopiedValueFunction" -> ({
         (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
          Part[#, 1]], 
         (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
          Part[#, 2]]}& )}},
   PlotLabel->FormBox["\"Continous signal\"", TraditionalForm],
   PlotRange->NCache[{{
       Rational[-1, 220], 
       Rational[1, 220]}, {-0.5386558609346715, 
      0.5386556987982167}}, {{-0.004545454545454545, 
     0.004545454545454545}, {-0.5386558609346715, 0.5386556987982167}}],
   PlotRangeClipping->True,
   PlotRangePadding->{{
      Scaled[0.02], 
      Scaled[0.02]}, {
      Scaled[0.05], 
      Scaled[0.05]}},
   Ticks->{Automatic, Automatic}]],
  CellChangeTimes->{3.6906956044901133`*^9, 3.6906967692811527`*^9, 
   3.6907071262569046`*^9, 3.69070734992072*^9},ExpressionUUID->
  "bef1e569-3f71-4879-84d4-474869faafcb"],
 "\nSampled signal:\n",
 Cell[BoxData[
  GraphicsBox[{
    {RGBColor[0.368417, 0.506779, 0.709798], PointSize[0.011000000000000001`],
      AbsoluteThickness[1.6], 
     {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
      0.011000000000000001`], AbsoluteThickness[1.6], Opacity[0.2], 
      LineBox[{{{-9., -0.08953243657105342}, {-9., 
          0}}, {{-8., -0.5210734047212868}, {-8., 
          0}}, {{-7., -0.3434823906751604}, {-7., 
          0}}, {{-6., -0.35610549323157936`}, {-6., 
          0}}, {{-5., -0.2572420164134835}, {-5., 
          0}}, {{-4., -0.23235728839312747`}, {-4., 
          0}}, {{-3., -0.15658050639534093`}, {-3., 
          0}}, {{-2., -0.11526967595727867`}, {-2., 
          0}}, {{-1., -0.05245820623951756}, {-1., 0}}, {{0., 0.}, {
         0., 0}}, {{10., -0.5386560007947574}, {10., 0}}, {{
         11., -0.34548461291974575`}, {11., 0}}, {{
         12., -0.37424086300743603`}, {12., 0}}, {{
         13., -0.25898361384734714`}, {13., 0}}, {{
         14., -0.2507594756157558}, {14., 0}}, {{
         15., -0.15800104898020612`}, {15., 0}}, {{
         16., -0.13406951999296815`}, {16., 0}}, {{
         17., -0.053383802003822346`}, {17., 0}}, {{
         18., -0.01941814137284494}, {18., 0}}},
       VertexColors->None]}, 
     {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
      0.011000000000000001`], AbsoluteThickness[1.6], Opacity[0.2], 
      LineBox[{{{-18., 0.01941814137284494}, {-18., 0}}, {{-17., 
         0.053383802003822346`}, {-17., 0}}, {{-16., 
         0.13406951999296815`}, {-16., 0}}, {{-15., 
         0.15800104898020612`}, {-15., 0}}, {{-14., 
         0.2507594756157558}, {-14., 0}}, {{-13., 
         0.25898361384734714`}, {-13., 0}}, {{-12., 
         0.37424086300743603`}, {-12., 0}}, {{-11., 
         0.34548461291974575`}, {-11., 0}}, {{-10., 
         0.5386560007947574}, {-10., 0}}, {{1., 0.05245820623951756}, {
         1., 0}}, {{2., 0.11526967595727867`}, {2., 0}}, {{3., 
         0.15658050639534093`}, {3., 0}}, {{4., 0.23235728839312747`}, {
         4., 0}}, {{5., 0.2572420164134835}, {5., 0}}, {{6., 
         0.35610549323157936`}, {6., 0}}, {{7., 0.3434823906751604}, {
         7., 0}}, {{8., 0.5210734047212868}, {8., 0}}, {{9., 
         0.08953243657105342}, {9., 0}}},
       VertexColors->None]}}, 
    {RGBColor[0.368417, 0.506779, 0.709798], PointSize[0.011000000000000001`],
      AbsoluteThickness[1.6], {}, PointBox[CompressedData["
1:eJxTTMoPSmViYGBQBWIQDQFGB1i/T8mIfDTZHsI3PBBqUKMuH7oayjc4cNTv
4VIDzYNQvt6BOFfeuwmWR6B8nQPei3ZXFPJcgPK1DjxRe81oMBnG1zhQnnbn
U//n61C+2oE7ewrqsmWuQfkqB94tSWtabfMQylc60POXgX3m6237IXyFA35/
mJQWrXkA5cscOPdizYS5v69C+RIH7h28tjHv1DUoX+TA3VMvzZeXXYDyBQ7E
xQeaPtp7FsrnOLAiVqT2CtcRKJ/hwMP/JQ4BTXuh/A/7/9pmBpy9vQomjwY+
2EPloe5lcIDqh/I5HKDmQ/kCDlD7oXwRB6j7oHwJB6j7oXwZB6j/oHwFB6j/
YeHjAA0fWPg5QMMP6l41B2j4QvkaDtDwh/K1HKDxA+XrOEDjD8rXc4DGL5Rv
4ACNfyjf0AGaPqB8Iwdo+tkPAGVduW0=
      "]], {}}},
   AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
   Axes->True,
   AxesLabel->{
     FormBox["\"n\"", TraditionalForm], 
     FormBox["\"x[n]\"", TraditionalForm]},
   AxesOrigin->{0, 0},
   FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
   GridLinesStyle->Directive[
     GrayLevel[0.5, 0.4]],
   ImageSize->{247.66015625, Automatic},
   Method->{
    "MessagesHead" -> DiscretePlot, "AxisPadding" -> Scaled[0.02], 
     "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
     AbsolutePointSize[6], "DefaultPlotStyle" -> {
       Directive[
        RGBColor[0.368417, 0.506779, 0.709798], 
        AbsoluteThickness[1.6]], 
       Directive[
        RGBColor[0.880722, 0.611041, 0.142051], 
        AbsoluteThickness[1.6]], 
       Directive[
        RGBColor[0.560181, 0.691569, 0.194885], 
        AbsoluteThickness[1.6]], 
       Directive[
        RGBColor[0.922526, 0.385626, 0.209179], 
        AbsoluteThickness[1.6]], 
       Directive[
        RGBColor[0.528488, 0.470624, 0.701351], 
        AbsoluteThickness[1.6]], 
       Directive[
        RGBColor[0.772079, 0.431554, 0.102387], 
        AbsoluteThickness[1.6]], 
       Directive[
        RGBColor[0.363898, 0.618501, 0.782349], 
        AbsoluteThickness[1.6]], 
       Directive[
        RGBColor[1, 0.75, 0], 
        AbsoluteThickness[1.6]], 
       Directive[
        RGBColor[0.647624, 0.37816, 0.614037], 
        AbsoluteThickness[1.6]], 
       Directive[
        RGBColor[0.571589, 0.586483, 0.], 
        AbsoluteThickness[1.6]], 
       Directive[
        RGBColor[0.915, 0.3325, 0.2125], 
        AbsoluteThickness[1.6]], 
       Directive[
        RGBColor[0.40082222609352647`, 0.5220066643438841, 0.85], 
        AbsoluteThickness[1.6]], 
       Directive[
        RGBColor[0.9728288904374106, 0.621644452187053, 0.07336199581899142], 
        
        AbsoluteThickness[1.6]], 
       Directive[
        RGBColor[0.736782672705901, 0.358, 0.5030266573755369], 
        AbsoluteThickness[1.6]], 
       Directive[
        RGBColor[0.28026441037696703`, 0.715, 0.4292089322474965], 
        AbsoluteThickness[1.6]]}, "DomainPadding" -> Scaled[0.02], 
     "PointSizeFunction" -> "SmallPointSize", "RangePadding" -> Scaled[0.05]},
   
   PlotLabel->FormBox["\"Sampled signal\"", TraditionalForm],
   PlotRange->{{-18, 18}, {-0.5386560007947574, 0.5386560007947574}},
   PlotRangePadding->{{
      Scaled[0.02], 
      Scaled[0.02]}, {
      Scaled[0.02], 
      Scaled[0.02]}},
   Ticks->{Automatic, Automatic}]],
  CellChangeTimes->{3.6907079723850036`*^9},ExpressionUUID->
  "0119f895-5cbe-4d18-87bf-cdfcb23c785d"]
}], "Text",
 CellChangeTimes->{{3.7222331624281473`*^9, 
  3.722233184226822*^9}},ExpressionUUID->"0c83f3e9-c826-471f-9b96-\
b53a318cf1d0"]
}, Closed]],

Cell["Is the system stable?", "Subsubsection",
 CellChangeTimes->{{3.7222321534229116`*^9, 
  3.72223215613405*^9}},ExpressionUUID->"70924c63-4bcf-4a94-8a66-\
255811486998"],

Cell["Is the system stable?", "Subsubsection",
 CellChangeTimes->{{3.7222321534229116`*^9, 
  3.72223215613405*^9}},ExpressionUUID->"dd9a128e-7f85-4a3b-aae0-\
067cedc3fa14"],

Cell["Is the system stable?", "Subsubsection",
 CellChangeTimes->{{3.7222321534229116`*^9, 
  3.72223215613405*^9}},ExpressionUUID->"67f71353-9ac4-4c2e-83f6-\
1067cf576407"],

Cell["Is the system stable?", "Subsubsection",
 CellChangeTimes->{{3.7222321534229116`*^9, 
  3.72223215613405*^9}},ExpressionUUID->"7262454b-f0ed-47ea-80c8-\
edd0be17648c"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Code", "Subsection",
 CellChangeTimes->{{3.719893143271935*^9, 
  3.719893177067865*^9}},ExpressionUUID->"e4607c36-21e0-4478-b986-\
c3d3fe889813"],

Cell[BoxData[
 RowBox[{"ClearAll", "[", "\"\<\.b4*\>\"", "]"}]], "Input",
 CellChangeTimes->{{3.7213822931096773`*^9, 3.721382311034927*^9}},
 ExpressionUUID -> "18367998-ae19-4cfb-b1a7-ddbcc4ab3bbd"],

Cell[CellGroupData[{

Cell["Package II1303", "Subsubsection",
 CellChangeTimes->{{3.7213821557391253`*^9, 3.721382156842993*^9}, {
  3.721382273408671*^9, 
  3.721382275240932*^9}},ExpressionUUID->"c671a0d7-3438-4862-b3de-\
08b4b35d3086"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{"Ver", ".", " ", "151125"}], ",", " ", 
    RowBox[{
     RowBox[{"goeran", "@", "kth"}], ".", "se"}]}], " ", "*)"}], "\n", 
  RowBox[{
   RowBox[{
    RowBox[{"BeginPackage", "[", "\"\<II1303`\>\"", "]"}], ";"}], " ", "\n", 
   RowBox[{
    RowBox[{"Unprotect", "[", 
     RowBox[{"{", 
      RowBox[{
      "ToExp", ",", " ", "TrigCombine", ",", " ", "PoleZeroPlot", ",", " ", 
       "Poles", ",", " ", "Zeros", ",", " ", "PoleZeroPlot", ",", " ", 
       "PoleZeroStyle", ",", " ", "\n", "\t", "ZTransform2", ",", " ", 
       "InverseZTransform2", ",", " ", "FactorAll", ",", " ", "ApartAll", ",",
        " ", "ZApart", ",", " ", "LaplaceTransform2", ",", " ", "\n", "\t", 
       "InverseLaplaceTransform2"}], "}"}], "]"}], ";"}], " ", "\n", 
   RowBox[{
    RowBox[{
     RowBox[{"Reconstruct", "::", "usage"}], " ", "=", " ", 
     "\"\<Reconstruct[fs][{f,A,\[Phi]}] returns the shifted or folded  \\\n\
{f,A,\[Phi]} list due to sampling. \
Reconstruct[\[Omega]s][{\[Omega],A,\[Phi]}] is also valid.\>\""}], ";"}], 
   "\n", 
   RowBox[{
    RowBox[{
     RowBox[{"fA\[Phi]", "::", "usage"}], " ", "=", " ", 
     "\"\<fA\[Phi][t][Cos|Sin|Exp[arg]] extracts {f,A,\[Phi]} \
information.\>\""}], ";"}], "\n", 
   RowBox[{
    RowBox[{
     RowBox[{"\[Omega]A\[Phi]", "::", "usage"}], " ", "=", " ", 
     "\"\<\[Omega]A\[Phi][t][Cos|Sin|Exp[arg]] extracts {\[Omega],A,\[Phi]} \
information.\>\""}], ";"}], "\n", 
   RowBox[{
    RowBox[{
     RowBox[{"ToExp", "::", "usage"}], " ", "=", " ", 
     "\"\<ToExp[z] = Abs[z]*E^(I*Arg[z]) returns a complex number in \\\n\
exponential form.\\nFor floating point complex numbers use ReleaseHold in \
orer to \\\nevaluate.\>\""}], ";"}], " ", "\n", 
   RowBox[{
    RowBox[{
     RowBox[{"TrigCombine", "::", "usage"}], " ", "=", " ", 
     "\"\<ToExp[a*trig[x+\[Alpha]] + b*trig[x+\[Beta]]], where trig is Cos or \
Sin, \\\nreturns A*trig[x+v].\>\""}], ";"}], "\n", 
   RowBox[{
    RowBox[{
     RowBox[{"Poles", "::", "usage"}], " ", "=", " ", 
     "\"\<Poles[H, z] returns the poles of the system function H[z].\>\""}], 
    ";"}], " ", "\n", 
   RowBox[{
    RowBox[{
     RowBox[{"Zeros", "::", "usage"}], " ", "=", " ", 
     "\"\<Zeros[H, z] returns the zeros of the system function H[z].\>\""}], 
    ";"}], " ", "\n", 
   RowBox[{
    RowBox[{
     RowBox[{"PoleZeroPlot", "::", "usage"}], " ", "=", " ", 
     "\"\<PoleZeroPlot[H, z] plots poles and zeros of the system \\\nfunction \
H[z].\\nPoleZeroPlot takes the same options as ListPlot.\>\""}], ";"}], " ", 
   "\n", 
   RowBox[{
    RowBox[{
     RowBox[{"PoleMarker", "::", "usage"}], " ", "=", " ", 
     "\"\<PoleMarker is an option for PoleZeroPlot that defines the \\\n\
graphics for the pole marker.\\nIt is assumed to be a Function[{postition, \\\
\nmultiplicity, scale}, ...].\>\""}], ";"}], " ", "\n", 
   RowBox[{
    RowBox[{
     RowBox[{"ZeroMarker", "::", "usage"}], " ", "=", " ", 
     "\"\<ZeroMarker is an option for PoleZeroPlot that defines the \\\n\
graphics for the zero marker.\\nIt is assumed to be a Function[{postition, \\\
\nmultiplicity, scale}, ...].\>\""}], ";"}], "\n", 
   RowBox[{
    RowBox[{
     RowBox[{"MarkerScale", "::", "usage"}], " ", "=", " ", 
     "\"\<MarkerScale is an option for PoleZeroPlot that defines the \\\n\
scale for the pole and zero marker.\>\""}], ";"}], " ", "\n", 
   RowBox[{
    RowBox[{
     RowBox[{"ZTransform2", "::", "usage"}], " ", "=", " ", 
     "\"\<ZTransform2[x, n, z] returns the bilateral, 1D z-transform.\\n\\\n\
It evaluates FourierSequenceTransform[x,n,-I Log[z]].\>\""}], ";"}], " ", 
   "\n", 
   RowBox[{
    RowBox[{
     RowBox[{"InverseZTransform2", "::", "usage"}], " ", "=", " ", 
     "\"\<InverseZTransform2[X, z, n] returns the bilateral, 1D \\\ninverse \
z-transform.\\nIt evaluates InverseFourierSequenceTransform[X /. z -> \\\n\
E^(I*\[Omega]), \[Omega], n].\>\""}], ";"}], " ", "\n", 
   RowBox[{
    RowBox[{
     RowBox[{"FactorAll", "::", "usage"}], " ", "=", " ", 
     "\"\<FactorAll[p, x] returns a product of first degree factors.\>\""}], 
    ";"}], " ", "\n", 
   RowBox[{
    RowBox[{
     RowBox[{"ZApart", "::", "usage"}], " ", "=", " ", 
     "\"\<ZApart[X, z] = Expand[z*Apart[X/z,z]] returns an expression \\\n\
suitable for inverse z-transform.\>\""}], ";"}], " ", "\n", 
   RowBox[{
    RowBox[{
     RowBox[{"LaplaceTransform2", "::", "usage"}], " ", "=", " ", 
     "\"\<LaplaceTransform2[x, t, s] returns the bilateral, 1D \\\nLaplace \
transform.\\nIt evaluates FourierTransform[x, t, -I*s].\>\""}], ";"}], " ", 
   "\n", 
   RowBox[{
    RowBox[{
     RowBox[{"InverseLaplaceTransform2", "::", "usage"}], " ", "=", " ", 
     "\"\<InverseLaplaceTransform2[X, s, t] returns the \\\nbilateral, 1D \
inverse Laplace transform.\\nIt evaluates InverseFourierTransform[X /. \\\ns \
-> I*\[Omega], \[Omega], t].\>\""}], ";"}], "\n", " ", "\n", 
   RowBox[{
    RowBox[{"Begin", "[", "\"\<`Private`\>\"", "]"}], ";"}], "\n", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{"Reconstruct", "[", 
       RowBox[{
        RowBox[{"(", "fs_", ")"}], "?", "Positive"}], "]"}], "[", 
      RowBox[{"{", 
       RowBox[{"f_", ",", "A_", ",", "\[Phi]_"}], "}"}], "]"}], ":=", "\n", 
     RowBox[{"Module", "[", "\[IndentingNewLine]", "\t", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"fa", ",", 
         RowBox[{"\[Phi]a", "=", "\[Phi]"}]}], "}"}], ",", 
       "\[IndentingNewLine]", "\t", 
       RowBox[{"(*", " ", "shift", " ", "*)"}], "\[IndentingNewLine]", "\t", 
       RowBox[{
        RowBox[{"fa", "=", 
         RowBox[{"Mod", "[", 
          RowBox[{
           RowBox[{"Abs", "[", "f", "]"}], ",", " ", "fs"}], "]"}]}], ";", 
        "\[IndentingNewLine]", "\t", 
        RowBox[{"(*", " ", "fold", " ", "*)"}], "\[IndentingNewLine]", "\t", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{"fa", ">", 
           RowBox[{"fs", "/", "2"}]}], ",", 
          RowBox[{
           RowBox[{"fa", "=", 
            RowBox[{"fs", "-", "fa"}]}], ";", 
           RowBox[{"\[Phi]a", "=", 
            RowBox[{"-", "\[Phi]"}]}]}]}], "]"}], ";", "\[IndentingNewLine]", 
        "\t", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{"fa", ">", "0"}], ",", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{
             RowBox[{"Sign", "[", "f", "]"}], "*", "fa"}], ",", "A", ",", 
            "\[Phi]a"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"0", ",", "A", ",", "\[Phi]a"}], "}"}]}], "]"}]}]}], 
      "\[IndentingNewLine]", "]"}]}], ";"}], "\n", "\n", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{"Reconstruct", "[", "fs_", "]"}], "[", 
      RowBox[{"data", ":", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"_", ",", " ", "_", ",", " ", "_"}], "}"}], ".."}], "}"}]}],
       "]"}], " ", ":=", " ", "\[IndentingNewLine]", 
     RowBox[{"Module", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"data1", ",", "data2", ",", "data3"}], "}"}], ",", " ", 
       "\[IndentingNewLine]", "\t", 
       RowBox[{
        RowBox[{"data1", " ", "=", " ", 
         RowBox[{
          RowBox[{"Reconstruct", "[", "fs", "]"}], " ", "/@", " ", "data"}]}],
         ";", "\[IndentingNewLine]", "\t", 
        RowBox[{"data2", " ", "=", " ", 
         RowBox[{"Gather", "[", 
          RowBox[{"data1", ",", " ", 
           RowBox[{
            RowBox[{
             RowBox[{"#1", "[", 
              RowBox[{"[", "1", "]"}], "]"}], " ", "==", " ", 
             RowBox[{"#2", "[", 
              RowBox[{"[", "1", "]"}], "]"}]}], " ", "&"}]}], " ", "]"}]}], 
        ";", "\[IndentingNewLine]", "\t", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{
             RowBox[{"#1", "[", 
              RowBox[{"[", 
               RowBox[{"1", ",", "1"}], "]"}], "]"}], ",", " ", 
             RowBox[{"Norm", "[", 
              RowBox[{
               RowBox[{"#1", "[", 
                RowBox[{"[", 
                 RowBox[{"All", ",", "2"}], "]"}], "]"}], " ", ".", " ", 
               RowBox[{"E", "^", 
                RowBox[{"(", 
                 RowBox[{"I", "*", 
                  RowBox[{"#1", "[", 
                   RowBox[{"[", 
                    RowBox[{"All", ",", "3"}], "]"}], "]"}]}], ")"}]}]}], 
              "]"}], ",", " ", 
             RowBox[{"Arg", "[", 
              RowBox[{
               RowBox[{"#1", "[", 
                RowBox[{"[", 
                 RowBox[{"All", ",", "2"}], "]"}], "]"}], " ", ".", " ", 
               RowBox[{"E", "^", 
                RowBox[{"(", 
                 RowBox[{"I", "*", 
                  RowBox[{"#1", "[", 
                   RowBox[{"[", 
                    RowBox[{"All", ",", "3"}], "]"}], "]"}]}], ")"}]}]}], 
              "]"}]}], "}"}], " ", "&"}], " ", ")"}], " ", "/@", " ", 
         "data2"}]}]}], "\[IndentingNewLine]", "]"}]}], ";"}], "\n", "\n", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{"fA\[Phi]", "[", "t_Symbol", "]"}], "[", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{"A_:", "1"}], ")"}], 
       RowBox[{"Cos", "[", "x_", "]"}]}], "]"}], ":=", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{
        RowBox[{"Coefficient", "[", 
         RowBox[{"x", ",", "t"}], "]"}], "/", 
        RowBox[{"(", 
         RowBox[{"2", "\[Pi]"}], ")"}]}], ",", 
       RowBox[{"Abs", "[", "A", "]"}], ",", 
       RowBox[{
        RowBox[{"Coefficient", "[", 
         RowBox[{"x", ",", "t", ",", "0"}], "]"}], "+", 
        RowBox[{"Arg", "[", "A", "]"}]}]}], "}"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{"fA\[Phi]", "[", "t_Symbol", "]"}], "[", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{"A_:", "1"}], ")"}], 
       RowBox[{"Sin", "[", "x_", "]"}]}], "]"}], ":=", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{
        RowBox[{"Coefficient", "[", 
         RowBox[{"x", ",", "t"}], "]"}], "/", 
        RowBox[{"(", 
         RowBox[{"2", "\[Pi]"}], ")"}]}], ",", 
       RowBox[{"Abs", "[", "A", "]"}], ",", 
       RowBox[{
        RowBox[{"Coefficient", "[", 
         RowBox[{"x", ",", "t", ",", "0"}], "]"}], "-", 
        RowBox[{"\[Pi]", "/", "2"}], "+", 
        RowBox[{"Arg", "[", "A", "]"}]}]}], "}"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{"fA\[Phi]", "[", "t_Symbol", "]"}], "[", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{"A_:", "1"}], ")"}], 
       RowBox[{"Exp", "[", "z_", "]"}]}], "]"}], ":=", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{
        RowBox[{"Coefficient", "[", 
         RowBox[{"z", ",", "t"}], "]"}], "/", 
        RowBox[{"(", 
         RowBox[{"2", "\[Pi]", " ", "\[ImaginaryI]"}], ")"}]}], ",", 
       RowBox[{"Abs", "[", "A", "]"}], ",", 
       RowBox[{
        RowBox[{
         RowBox[{"Coefficient", "[", 
          RowBox[{"z", ",", "t", ",", "0"}], "]"}], "/", "\[ImaginaryI]"}], 
        "+", 
        RowBox[{"Arg", "[", "A", "]"}]}]}], "}"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{"\[Omega]A\[Phi]", "[", "t_Symbol", "]"}], "[", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{"A_:", "1"}], ")"}], 
       RowBox[{"Cos", "[", "x_", "]"}]}], "]"}], ":=", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"Coefficient", "[", 
        RowBox[{"x", ",", "t"}], "]"}], ",", 
       RowBox[{"Abs", "[", "A", "]"}], ",", 
       RowBox[{
        RowBox[{"Coefficient", "[", 
         RowBox[{"x", ",", "t", ",", "0"}], "]"}], "+", 
        RowBox[{"Arg", "[", "A", "]"}]}]}], "}"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{"\[Omega]A\[Phi]", "[", "t_Symbol", "]"}], "[", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{"A_:", "1"}], ")"}], 
       RowBox[{"Sin", "[", "x_", "]"}]}], "]"}], ":=", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"Coefficient", "[", 
        RowBox[{"x", ",", "t"}], "]"}], ",", 
       RowBox[{"Abs", "[", "A", "]"}], ",", 
       RowBox[{
        RowBox[{"Coefficient", "[", 
         RowBox[{"x", ",", "t", ",", "0"}], "]"}], "-", 
        RowBox[{"\[Pi]", "/", "2"}], "+", 
        RowBox[{"Arg", "[", "A", "]"}]}]}], "}"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{"\[Omega]A\[Phi]", "[", "t_Symbol", "]"}], "[", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{"A_:", "1"}], ")"}], 
       RowBox[{"Exp", "[", "z_", "]"}]}], "]"}], ":=", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{
        RowBox[{"Coefficient", "[", 
         RowBox[{"z", ",", "t"}], "]"}], "/", "\[ImaginaryI]"}], ",", 
       RowBox[{"Abs", "[", "A", "]"}], ",", 
       RowBox[{
        RowBox[{
         RowBox[{"Coefficient", "[", 
          RowBox[{"x", ",", "t", ",", "0"}], "]"}], "/", "\[ImaginaryI]"}], 
        "+", 
        RowBox[{"Arg", "[", "A", "]"}]}]}], "}"}]}], ";"}], "\n", " ", "\n", 
   RowBox[{
    RowBox[{
     RowBox[{"ToExp", "[", 
      RowBox[{"z", ":", 
       RowBox[{"Complex", "[", 
        RowBox[{"_Real", ",", " ", "_Real"}], "]"}]}], "]"}], " ", ":=", " ", 
     
     RowBox[{
      RowBox[{"Abs", "[", "z", "]"}], "*", 
      RowBox[{
       RowBox[{"HoldForm", "[", "E", "]"}], "^", 
       RowBox[{"(", 
        RowBox[{"I", "*", 
         RowBox[{"Arg", "[", "z", "]"}]}], ")"}]}]}]}], ";"}], " ", "\n", 
   RowBox[{
    RowBox[{
     RowBox[{"ToExp", "[", 
      RowBox[{
       RowBox[{"(", "z_", ")"}], "?", "NumericQ"}], "]"}], " ", ":=", " ", 
     RowBox[{
      RowBox[{"Abs", "[", "z", "]"}], "*", 
      RowBox[{"E", "^", 
       RowBox[{"(", 
        RowBox[{"I", "*", 
         RowBox[{"Arg", "[", "z", "]"}]}], ")"}]}]}]}], ";"}], " ", "\n", 
   RowBox[{
    RowBox[{
     RowBox[{"ToExp", "[", "z___", "]"}], " ", ":=", " ", "z"}], ";"}], " ", 
   "\n", 
   RowBox[{
    RowBox[{"SetAttributes", "[", 
     RowBox[{"ToExp", ",", " ", "Listable"}], "]"}], ";"}], "\n", "\n", 
   RowBox[{
    RowBox[{
     RowBox[{"TrigCombine", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"(", 
         RowBox[{"a_:", "1"}], ")"}], "*", 
        RowBox[{"Cos", "[", 
         RowBox[{
          RowBox[{"(", "x_", ")"}], " ", "+", " ", 
          RowBox[{"(", 
           RowBox[{"u_:", "0"}], ")"}]}], "]"}]}], " ", "+", " ", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"b_:", "1"}], ")"}], "*", 
        RowBox[{"Cos", "[", 
         RowBox[{
          RowBox[{"(", "x_", ")"}], " ", "+", " ", 
          RowBox[{"(", 
           RowBox[{"v_:", "0"}], ")"}]}], "]"}]}]}], "]"}], " ", ":=", " ", 
     "\n", "  ", 
     RowBox[{"Simplify", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"ComplexExpand", "[", 
         RowBox[{"Abs", "[", 
          RowBox[{
           RowBox[{"a", "*", 
            RowBox[{"E", "^", 
             RowBox[{"(", 
              RowBox[{"I", "*", "u"}], ")"}]}]}], " ", "+", " ", 
           RowBox[{"b", "*", 
            RowBox[{"E", "^", 
             RowBox[{"(", 
              RowBox[{"I", "*", "v"}], ")"}]}]}]}], "]"}], "]"}], "*", "\n", 
        "   ", 
        RowBox[{"Cos", "[", 
         RowBox[{"x", " ", "+", " ", 
          RowBox[{"ComplexExpand", "[", 
           RowBox[{"Arg", "[", 
            RowBox[{
             RowBox[{"a", "*", 
              RowBox[{"E", "^", 
               RowBox[{"(", 
                RowBox[{"I", "*", "u"}], ")"}]}]}], " ", "+", " ", 
             RowBox[{"b", "*", 
              RowBox[{"E", "^", 
               RowBox[{"(", 
                RowBox[{"I", "*", "v"}], ")"}]}]}]}], "]"}], "]"}]}], "]"}]}],
        ",", " ", 
       RowBox[{"ExcludedForms", " ", "->", " ", 
        RowBox[{"{", 
         RowBox[{"_Sin", ",", " ", "_Cos"}], "}"}]}]}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"TrigCombine", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"(", 
         RowBox[{"a_:", "1"}], ")"}], "*", 
        RowBox[{"Cos", "[", 
         RowBox[{
          RowBox[{"(", "x_", ")"}], " ", "+", " ", 
          RowBox[{"(", 
           RowBox[{"u_:", "0"}], ")"}]}], "]"}]}], " ", "+", " ", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"b_:", "1"}], ")"}], "*", 
        RowBox[{"Sin", "[", 
         RowBox[{
          RowBox[{"(", "x_", ")"}], " ", "+", " ", 
          RowBox[{"(", 
           RowBox[{"v_:", "0"}], ")"}]}], "]"}]}]}], "]"}], " ", ":=", " ", 
     "\n", "  ", 
     RowBox[{"Simplify", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"ComplexExpand", "[", 
         RowBox[{"Abs", "[", 
          RowBox[{
           RowBox[{"a", "*", 
            RowBox[{"E", "^", 
             RowBox[{"(", 
              RowBox[{"I", "*", "u"}], ")"}]}]}], " ", "-", " ", 
           RowBox[{"I", "*", "b", "*", 
            RowBox[{"E", "^", 
             RowBox[{"(", 
              RowBox[{"I", "*", "v"}], ")"}]}]}]}], "]"}], "]"}], "*", "\n", 
        "   ", 
        RowBox[{"Cos", "[", 
         RowBox[{"x", " ", "+", " ", 
          RowBox[{"ComplexExpand", "[", 
           RowBox[{"Arg", "[", 
            RowBox[{
             RowBox[{"a", "*", 
              RowBox[{"E", "^", 
               RowBox[{"(", 
                RowBox[{"I", "*", "u"}], ")"}]}]}], " ", "-", " ", 
             RowBox[{"I", "*", "b", "*", 
              RowBox[{"E", "^", 
               RowBox[{"(", 
                RowBox[{"I", "*", "v"}], ")"}]}]}]}], "]"}], "]"}]}], "]"}]}],
        ",", " ", 
       RowBox[{"ExcludedForms", " ", "->", " ", 
        RowBox[{"{", 
         RowBox[{"_Sin", ",", " ", "_Cos"}], "}"}]}]}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"TrigCombine", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"(", 
         RowBox[{"a_:", "1"}], ")"}], "*", 
        RowBox[{"Sin", "[", 
         RowBox[{
          RowBox[{"(", "x_", ")"}], " ", "+", " ", 
          RowBox[{"(", 
           RowBox[{"u_:", "0"}], ")"}]}], "]"}]}], " ", "+", " ", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"b_:", "1"}], ")"}], "*", 
        RowBox[{"Sin", "[", 
         RowBox[{
          RowBox[{"(", "x_", ")"}], " ", "+", " ", 
          RowBox[{"(", 
           RowBox[{"v_:", "0"}], ")"}]}], "]"}]}]}], "]"}], " ", ":=", " ", 
     "\n", "  ", 
     RowBox[{"Simplify", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"ComplexExpand", "[", 
         RowBox[{"Abs", "[", 
          RowBox[{
           RowBox[{"a", "*", 
            RowBox[{"E", "^", 
             RowBox[{"(", 
              RowBox[{"I", "*", "u"}], ")"}]}]}], " ", "+", " ", 
           RowBox[{"b", "*", 
            RowBox[{"E", "^", 
             RowBox[{"(", 
              RowBox[{"I", "*", "v"}], ")"}]}]}]}], "]"}], "]"}], "*", "\n", 
        "   ", 
        RowBox[{"Cos", "[", 
         RowBox[{"x", " ", "+", " ", 
          RowBox[{"ComplexExpand", "[", 
           RowBox[{"Arg", "[", 
            RowBox[{
             RowBox[{
              RowBox[{"(", 
               RowBox[{"-", "I"}], ")"}], "*", "a", "*", 
              RowBox[{"E", "^", 
               RowBox[{"(", 
                RowBox[{"I", "*", "u"}], ")"}]}]}], " ", "-", " ", 
             RowBox[{"I", "*", "b", "*", 
              RowBox[{"E", "^", 
               RowBox[{"(", 
                RowBox[{"I", "*", "v"}], ")"}]}]}]}], "]"}], "]"}]}], "]"}]}],
        ",", " ", 
       RowBox[{"ExcludedForms", " ", "->", " ", 
        RowBox[{"{", 
         RowBox[{"_Sin", ",", " ", "_Cos"}], "}"}]}]}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"SetAttributes", "[", 
     RowBox[{"TrigCombine", ",", " ", "HoldAll"}], "]"}], ";"}], "\n", "\n", 
   RowBox[{
    RowBox[{
     RowBox[{"Poles", "[", 
      RowBox[{"H_", ",", " ", "z_Symbol"}], "]"}], " ", ":=", " ", 
     RowBox[{"Flatten", "[", "\n", "\t", 
      RowBox[{"TransferFunctionPoles", "[", 
       RowBox[{"TransferFunctionCancel", "[", 
        RowBox[{"TransferFunctionModel", "[", 
         RowBox[{"H", ",", " ", "z"}], "]"}], "]"}], "]"}], "\n", "]"}]}], 
    ";"}], " ", "\n", 
   RowBox[{
    RowBox[{
     RowBox[{"Poles", "[", 
      RowBox[{
       RowBox[{"H", ":", 
        RowBox[{"_Symbol", " ", "|", " ", "_Function"}]}], ",", " ", 
       "z_Symbol"}], "]"}], " ", ":=", " ", 
     RowBox[{"Poles", "[", 
      RowBox[{
       RowBox[{"H", "[", "z", "]"}], ",", " ", "z"}], "]"}]}], ";"}], "\n", 
   " ", "\n", 
   RowBox[{
    RowBox[{
     RowBox[{"Zeros", "[", 
      RowBox[{"H_", ",", " ", "z_Symbol"}], "]"}], " ", ":=", " ", 
     RowBox[{"Flatten", "[", "\n", 
      RowBox[{"TransferFunctionZeros", "[", 
       RowBox[{"TransferFunctionCancel", "[", 
        RowBox[{"TransferFunctionModel", "[", 
         RowBox[{"H", ",", " ", "z"}], "]"}], "]"}], "]"}], "\n", "]"}]}], 
    ";"}], " ", "\n", 
   RowBox[{
    RowBox[{
     RowBox[{"Zeros", "[", 
      RowBox[{
       RowBox[{"H", ":", 
        RowBox[{"_Symbol", " ", "|", " ", "_Function"}]}], ",", " ", 
       "z_Symbol"}], "]"}], " ", ":=", " ", 
     RowBox[{"Zeros", "[", 
      RowBox[{
       RowBox[{"H", "[", "z", "]"}], ",", " ", "z"}], "]"}]}], ";"}], "\n", 
   " ", "\n", 
   RowBox[{
    RowBox[{
     RowBox[{"Options", "[", "PoleZeroPlot", "]"}], " ", "=", " ", 
     RowBox[{"Join", "[", 
      RowBox[{
       RowBox[{"{", "\n", "\t", 
        RowBox[{
         RowBox[{"PoleMarker", " ", ":>", " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"{", "\n", "\t\t", 
             RowBox[{"Red", ",", " ", "\n", "\t\t", 
              RowBox[{"Line", "[", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"#1", " ", "+", " ", 
                  RowBox[{"#3", "*", 
                   RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"-", "1"}], ",", " ", 
                    RowBox[{"-", "1"}]}], "}"}], "/", 
                    SqrtBox["2"]}]}]}], ",", " ", 
                 RowBox[{"#1", " ", "+", " ", 
                  RowBox[{"#3", "*", 
                   RowBox[{
                    RowBox[{"{", 
                    RowBox[{"1", ",", " ", "1"}], "}"}], "/", 
                    SqrtBox["2"]}]}]}]}], "}"}], "]"}], ",", " ", "\n", 
              "\t\t", 
              RowBox[{"Line", "[", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"#1", " ", "+", " ", 
                  RowBox[{"#3", "*", 
                   RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"-", "1"}], ",", " ", "1"}], "}"}], "/", 
                    SqrtBox["2"]}]}]}], ",", " ", 
                 RowBox[{"#1", " ", "+", " ", 
                  RowBox[{"#3", "*", 
                   RowBox[{
                    RowBox[{"{", 
                    RowBox[{"1", ",", " ", 
                    RowBox[{"-", "1"}]}], "}"}], "/", 
                    SqrtBox["2"]}]}]}]}], "}"}], "]"}], ",", " ", "\n", 
              "\t\t", 
              RowBox[{"If", "[", 
               RowBox[{
                RowBox[{"#2", " ", ">", " ", "1"}], ",", " ", 
                RowBox[{"Text", "[", 
                 RowBox[{"#2", ",", " ", 
                  RowBox[{"#1", " ", "+", " ", 
                   RowBox[{"#3", "*", 
                    RowBox[{"{", 
                    RowBox[{
                    SqrtBox["2"], ",", " ", 
                    SqrtBox["2"]}], "}"}]}]}], ",", " ", 
                  RowBox[{"{", 
                   RowBox[{
                    RowBox[{"-", "1"}], ",", " ", "0"}], "}"}]}], "]"}], ",", 
                " ", 
                RowBox[{"Sequence", " ", "@@", " ", 
                 RowBox[{"{", "}"}]}]}], "]"}]}], "}"}], " ", "&"}], " ", 
           ")"}]}], ",", " ", "\n", "\t", 
         RowBox[{"ZeroMarker", " ", ":>", " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"{", "\n", "\t\t", 
             RowBox[{"Blue", ",", " ", "\n", "\t\t", 
              RowBox[{"Circle", "[", 
               RowBox[{"#1", ",", " ", "#3"}], "]"}], ",", " ", "\n", 
              "        ", 
              RowBox[{"If", "[", 
               RowBox[{
                RowBox[{"#2", " ", ">", " ", "1"}], ",", " ", 
                RowBox[{"Text", "[", 
                 RowBox[{"#2", ",", " ", 
                  RowBox[{"#1", " ", "+", " ", 
                   RowBox[{"#3", "*", 
                    RowBox[{"{", 
                    RowBox[{
                    SqrtBox["2"], ",", " ", 
                    SqrtBox["2"]}], "}"}]}]}], ",", " ", 
                  RowBox[{"{", 
                   RowBox[{
                    RowBox[{"-", "1"}], ",", " ", "0"}], "}"}]}], "]"}], ",", 
                " ", 
                RowBox[{"Sequence", " ", "@@", " ", 
                 RowBox[{"{", "}"}]}]}], "]"}]}], "}"}], " ", "&"}], " ", 
           ")"}]}], ",", "\n", "\t", 
         RowBox[{"MarkerScale", " ", "->", " ", "Automatic"}]}], "\n", "\t", 
        "}"}], ",", " ", "\n", "\t", 
       RowBox[{"Options", "[", "Graphics", "]"}]}], "\n", "]"}]}], ";"}], " ",
    "\n", 
   RowBox[{
    RowBox[{"SetOptions", "[", 
     RowBox[{"PoleZeroPlot", ",", " ", 
      RowBox[{"AspectRatio", " ", "->", " ", "Automatic"}], ",", " ", 
      RowBox[{"Axes", " ", "->", " ", "True"}], ",", " ", 
      RowBox[{"PlotRange", " ", "->", " ", "Automatic"}]}], "]"}], ";"}], " ",
    "\n", 
   RowBox[{
    RowBox[{
     RowBox[{"PoleZeroPlot", "[", 
      RowBox[{"H_", ",", " ", "z_Symbol", ",", " ", 
       RowBox[{"opts", ":", 
        RowBox[{"OptionsPattern", "[", "]"}]}]}], "]"}], " ", ":=", " ", 
     RowBox[{"Module", "[", "\n", "\t", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
        "xy", ",", " ", "x", ",", " ", "y", ",", " ", "d", ",", " ", "pp", 
         ",", " ", "pz", ",", " ", "mp", ",", " ", "mz", ",", " ", "s", ",", 
         " ", "r", ",", " ", "\[DoubleStruckP]", ",", " ", "\[DoubleStruckZ]",
          ",", " ", "range", ",", " ", "allopts", ",", " ", 
         RowBox[{"s0", "=", 
          RowBox[{"Scaled", "[", "0.015", "]"}]}]}], "}"}], ",", " ", "\n", 
       "\t", 
       RowBox[{
        RowBox[{"xy", " ", ":=", " ", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{
            RowBox[{"Re", "[", "#1", "]"}], ",", " ", 
            RowBox[{"Im", "[", "#1", "]"}]}], "}"}], " ", "&"}]}], " ", ";", 
        " ", 
        RowBox[{"\[DoubleStruckP]", " ", "=", " ", 
         RowBox[{"Poles", "[", 
          RowBox[{
           RowBox[{"N", "[", "H", "]"}], ",", " ", "z"}], "]"}]}], ";", " ", 
        RowBox[{"\[DoubleStruckZ]", " ", "=", " ", 
         RowBox[{"Zeros", "[", 
          RowBox[{
           RowBox[{"N", "[", "H", "]"}], ",", " ", "z"}], "]"}]}], ";", " ", 
        "\n", "\t", 
        RowBox[{"pp", " ", "=", " ", 
         RowBox[{"xy", " ", "/@", " ", 
          RowBox[{"DeleteDuplicates", "[", "\[DoubleStruckP]", "]"}]}]}], ";",
         " ", 
        RowBox[{"pz", " ", "=", " ", 
         RowBox[{"xy", " ", "/@", " ", 
          RowBox[{"DeleteDuplicates", "[", "\[DoubleStruckZ]", "]"}]}]}], ";",
         " ", "\n", "\t", 
        RowBox[{"mp", " ", "=", " ", 
         RowBox[{"Length", " ", "/@", " ", 
          RowBox[{"Gather", "[", "\[DoubleStruckP]", "]"}]}]}], ";", " ", 
        RowBox[{"mz", " ", "=", " ", 
         RowBox[{"Length", " ", "/@", " ", 
          RowBox[{"Gather", "[", "\[DoubleStruckZ]", "]"}]}]}], ";", " ", 
        "\n", "\t", 
        RowBox[{"x", " ", "=", " ", 
         RowBox[{"Join", "[", 
          RowBox[{
           RowBox[{"pz", "[", 
            RowBox[{"[", 
             RowBox[{"All", ",", "1"}], "]"}], "]"}], ",", " ", 
           RowBox[{"pp", "[", 
            RowBox[{"[", 
             RowBox[{"All", ",", "1"}], "]"}], "]"}]}], "]"}]}], ";", " ", 
        RowBox[{"y", " ", "=", " ", 
         RowBox[{"Join", "[", 
          RowBox[{
           RowBox[{"pz", "[", 
            RowBox[{"[", 
             RowBox[{"All", ",", "2"}], "]"}], "]"}], ",", " ", 
           RowBox[{"pp", "[", 
            RowBox[{"[", 
             RowBox[{"All", ",", "2"}], "]"}], "]"}]}], "]"}]}], ";", " ", 
        "\n", "\t", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"OptionValue", "[", "PlotRange", "]"}], " ", "===", " ", 
           "Automatic"}], ",", " ", "\n", "\t\t", 
          RowBox[{
           RowBox[{"x", " ", "=", " ", 
            RowBox[{"Join", "[", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{
                RowBox[{"-", "1"}], ",", " ", "1"}], "}"}], ",", " ", "x"}], 
             "]"}]}], ";", " ", 
           RowBox[{"y", " ", "=", " ", 
            RowBox[{"Join", "[", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{
                RowBox[{"-", "1"}], ",", " ", "1"}], "}"}], ",", " ", "y"}], 
             "]"}]}]}]}], "\n", "\t", "]"}], ";", " ", "\n", "\t", 
        RowBox[{"range", " ", "=", " ", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{
              RowBox[{"Min", "[", "#1", "]"}], ",", " ", 
              RowBox[{"Max", "[", "#1", "]"}]}], "}"}], " ", "&"}], " ", 
           ")"}], " ", "/@", " ", 
          RowBox[{"{", 
           RowBox[{"x", ",", " ", "y"}], "}"}]}]}], ";", " ", "\n", "\t", 
        RowBox[{"d", " ", "=", " ", 
         RowBox[{"0.05", "*", 
          RowBox[{"Apply", "[", 
           RowBox[{"Subtract", ",", " ", "range", ",", " ", 
            RowBox[{"{", "1", "}"}]}], "]"}]}]}], ";", " ", 
        RowBox[{"range", " ", "=", " ", 
         RowBox[{"range", " ", "+", " ", 
          RowBox[{"Transpose", "[", 
           RowBox[{"{", 
            RowBox[{"d", ",", " ", 
             RowBox[{"-", "d"}]}], "}"}], "]"}]}]}], ";", " ", "\n", "\t", 
        RowBox[{"allopts", " ", "=", " ", 
         RowBox[{"FilterRules", "[", 
          RowBox[{
           RowBox[{"Join", "[", 
            RowBox[{
             RowBox[{"{", "opts", "}"}], ",", " ", 
             RowBox[{"Options", "[", "PoleZeroPlot", "]"}]}], "]"}], ",", " ", 
           RowBox[{"Options", "[", "Graphics", "]"}]}], "]"}]}], ";", " ", 
        "\n", "\t", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{
           RowBox[{
            RowBox[{"OptionValue", "[", "PlotRange", "]"}], " ", "===", " ", 
            "Automatic"}], " ", "||", " ", 
           RowBox[{
            RowBox[{"OptionValue", "[", "PlotRange", "]"}], " ", "===", " ", 
            "All"}]}], ",", " ", "\n", "\t\t", 
          RowBox[{"PrependTo", "[", 
           RowBox[{"allopts", ",", " ", 
            RowBox[{"PlotRange", " ", "->", " ", "range"}]}], "]"}]}], "\n", 
         "\t", "]"}], ";", " ", "\n", "\t", 
        RowBox[{"s", " ", "=", " ", 
         RowBox[{"OptionValue", "[", "MarkerScale", "]"}]}], ";", "\n", "\t", 
        
        RowBox[{"If", "[", " ", 
         RowBox[{
          RowBox[{"s", "===", " ", "Automatic"}], ",", " ", 
          RowBox[{"s", " ", "=", " ", "s0"}]}], "]"}], ";", "\n", "\t", 
        RowBox[{"If", "[", " ", 
         RowBox[{
          RowBox[{
           RowBox[{"!", " ", 
            RowBox[{"MatchQ", "[", 
             RowBox[{"s", ",", " ", 
              RowBox[{"_", "?", "NumericQ"}]}], "]"}]}], " ", "&&", " ", 
           RowBox[{"!", " ", 
            RowBox[{"MatchQ", "[", 
             RowBox[{"s", ",", " ", 
              RowBox[{"Scaled", "[", 
               RowBox[{"_", "?", "NumericQ"}], "]"}]}], "]"}]}]}], ",", " ", 
          RowBox[{"s", " ", "=", " ", "s0"}]}], "]"}], ";", "\n", "\t", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{"MatchQ", "[", 
           RowBox[{"s", ",", " ", 
            RowBox[{"Scaled", "[", 
             RowBox[{"_", "?", "NumericQ"}], "]"}]}], "]"}], ",", "\n", 
          "\t\t", 
          RowBox[{
           RowBox[{"s", " ", "=", " ", 
            RowBox[{"First", "[", "s", "]"}]}], ";", "\n", "\t\t", 
           RowBox[{"r", " ", "=", " ", 
            RowBox[{"PlotRange", "/.", 
             RowBox[{"AbsoluteOptions", "[", 
              RowBox[{
               RowBox[{"Graphics", "[", 
                RowBox[{
                 RowBox[{"Point", "[", 
                  RowBox[{"Join", "[", 
                   RowBox[{"pp", ",", "pz"}], "]"}], "]"}], ",", 
                 RowBox[{"Sequence", " ", "@@", " ", "allopts"}]}], "]"}], 
               ",", "PlotRange"}], "]"}]}]}], ";", "\n", "\t\t", 
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{"MatchQ", "[", 
              RowBox[{"r", ",", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"{", 
                  RowBox[{
                   RowBox[{"_", "?", "NumberQ"}], ",", 
                   RowBox[{"_", "?", "NumberQ"}]}], "}"}], ",", 
                 RowBox[{"{", 
                  RowBox[{
                   RowBox[{"_", "?", "NumberQ"}], ",", 
                   RowBox[{"_", "?", "NumberQ"}]}], "}"}]}], "}"}]}], "]"}], 
             ",", 
             RowBox[{"s", "*=", 
              RowBox[{"Min", "[", 
               RowBox[{"-", 
                RowBox[{"Subtract", "@@@", "r"}]}], "]"}]}]}], "]"}]}]}], 
         "\n", "\t", "]"}], ";", "\n", "\t", 
        RowBox[{"Graphics", "[", 
         RowBox[{
          RowBox[{"{", "\n", "\t\t", 
           RowBox[{
            RowBox[{"Apply", "[", 
             RowBox[{
              RowBox[{"OptionValue", "[", "PoleMarker", "]"}], ",", " ", 
              RowBox[{
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"Join", "[", 
                  RowBox[{"#1", ",", " ", 
                   RowBox[{"{", "s", "}"}]}], "]"}], " ", "&"}], " ", ")"}], 
               " ", "/@", " ", 
               RowBox[{"Transpose", "[", 
                RowBox[{"{", 
                 RowBox[{"pp", ",", " ", "mp"}], "}"}], "]"}]}], ",", " ", 
              RowBox[{"{", "1", "}"}]}], "]"}], ",", " ", "\n", "\t\t", 
            RowBox[{"Apply", "[", 
             RowBox[{
              RowBox[{"OptionValue", "[", "ZeroMarker", "]"}], ",", " ", 
              RowBox[{
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"Join", "[", 
                  RowBox[{"#1", ",", " ", 
                   RowBox[{"{", "s", "}"}]}], "]"}], " ", "&"}], " ", ")"}], 
               " ", "/@", " ", 
               RowBox[{"Transpose", "[", 
                RowBox[{"{", 
                 RowBox[{"pz", ",", " ", "mz"}], "}"}], "]"}]}], ",", " ", 
              RowBox[{"{", "1", "}"}]}], "]"}]}], "\n", "\t\t", "}"}], ",", 
          " ", 
          RowBox[{"Sequence", " ", "@@", " ", "allopts"}]}], "\n", "\t", 
         "]"}]}]}], "\n", "]"}]}], ";"}], "\n", 
   RowBox[{
    RowBox[{
     RowBox[{"PoleZeroPlot", "[", 
      RowBox[{
       RowBox[{"H", ":", 
        RowBox[{"_Symbol", " ", "|", " ", "_Function"}]}], ",", " ", 
       "z_Symbol", ",", " ", 
       RowBox[{"opts", ":", 
        RowBox[{"OptionsPattern", "[", "]"}]}]}], "]"}], " ", ":=", " ", 
     RowBox[{"PoleZeroPlot", "[", 
      RowBox[{
       RowBox[{"H", "[", "z", "]"}], ",", " ", "z", ",", " ", "opts"}], 
      "]"}]}], ";"}], " ", "\n", "\n", 
   RowBox[{
    RowBox[{
     RowBox[{"Options", "[", "ZTransform2", "]"}], " ", "=", " ", 
     RowBox[{"Rest", "[", 
      RowBox[{"Options", "[", "FourierSequenceTransform", "]"}], "]"}]}], 
    ";"}], " ", "\n", 
   RowBox[{
    RowBox[{
     RowBox[{"ZTransform2", "[", 
      RowBox[{"x_", ",", " ", "n_Symbol", ",", " ", "z_", ",", " ", 
       RowBox[{"opts", ":", 
        RowBox[{"OptionsPattern", "[", "]"}]}]}], "]"}], " ", ":=", " ", "\n",
      "\t", 
     RowBox[{"FourierSequenceTransform", "[", 
      RowBox[{"x", ",", " ", "n", ",", " ", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"-", "I"}], ")"}], "*", 
        RowBox[{"Log", "[", "z", "]"}]}], ",", " ", 
       RowBox[{"FourierParameters", " ", "->", " ", 
        RowBox[{"{", 
         RowBox[{"1", ",", " ", "1"}], "}"}]}], ",", " ", "opts"}], "]"}]}], 
    ";"}], "\n", 
   RowBox[{
    RowBox[{
     RowBox[{"ZTransform2", "[", 
      RowBox[{
       RowBox[{"x", ":", 
        RowBox[{"_Symbol", " ", "|", " ", "_Function"}]}], ",", " ", 
       "n_Symbol", ",", " ", "z_", ",", " ", 
       RowBox[{"opts", ":", 
        RowBox[{"OptionsPattern", "[", "]"}]}]}], "]"}], " ", ":=", " ", "\n",
      "\t", 
     RowBox[{"ZTransform2", "[", 
      RowBox[{
       RowBox[{"x", "[", "n", "]"}], ",", " ", "n", ",", " ", "z", ",", " ", 
       "opts"}], "]"}]}], ";"}], " ", "\n", "\n", 
   RowBox[{
    RowBox[{
     RowBox[{"Options", "[", "InverseZTransform2", "]"}], " ", "=", " ", 
     RowBox[{"Rest", "[", 
      RowBox[{"Options", "[", "InverseFourierSequenceTransform", "]"}], 
      "]"}]}], ";"}], " ", "\n", 
   RowBox[{
    RowBox[{
     RowBox[{"InverseZTransform2", "[", 
      RowBox[{"X_", ",", " ", "z_Symbol", ",", " ", "n_", ",", " ", 
       RowBox[{"opts", ":", 
        RowBox[{"OptionsPattern", "[", "]"}]}]}], "]"}], " ", ":=", " ", 
     RowBox[{"Module", "[", 
      RowBox[{
       RowBox[{"{", "\[Omega]", "}"}], ",", " ", "\n", "\t", 
       RowBox[{"InverseFourierSequenceTransform", "[", 
        RowBox[{
         RowBox[{"X", " ", "/.", " ", 
          RowBox[{"z", " ", "->", " ", 
           RowBox[{"E", "^", 
            RowBox[{"(", 
             RowBox[{"I", "*", "\[Omega]"}], ")"}]}]}]}], ",", " ", 
         "\[Omega]", ",", " ", "n", ",", " ", 
         RowBox[{"FourierParameters", " ", "->", " ", 
          RowBox[{"{", 
           RowBox[{"1", ",", " ", "1"}], "}"}]}], ",", " ", "opts"}], "]"}]}],
       "\n", "]"}]}], ";"}], " ", "\n", 
   RowBox[{
    RowBox[{
     RowBox[{"InverseZTransform2", "[", 
      RowBox[{
       RowBox[{"X", ":", 
        RowBox[{"_Symbol", " ", "|", " ", "_Function"}]}], ",", " ", 
       "z_Symbol", ",", " ", "n_", ",", " ", 
       RowBox[{"opts", ":", 
        RowBox[{"OptionsPattern", "[", "]"}]}]}], "]"}], " ", ":=", " ", "\n",
      "\t", 
     RowBox[{"InverseZTransform2", "[", 
      RowBox[{
       RowBox[{"X", "[", "z", "]"}], ",", " ", "z", ",", " ", "n", ",", " ", 
       "opts"}], "]"}]}], ";"}], "\n", "\n", 
   RowBox[{
    RowBox[{
     RowBox[{"FactorAll", "[", 
      RowBox[{"p_", ",", " ", "x_Symbol"}], "]"}], " ", ":=", " ", 
     RowBox[{
      RowBox[{"Module", "[", "\n", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"a", ",", " ", "z", ",", " ", "q"}], "}"}], "\n", ",", " ", 
        RowBox[{
         RowBox[{"a", " ", "=", " ", 
          RowBox[{"Coefficient", "[", 
           RowBox[{"p", ",", " ", "x", ",", " ", 
            RowBox[{"Exponent", "[", 
             RowBox[{"p", ",", " ", "x"}], "]"}]}], "]"}]}], ";", " ", "\n", 
         RowBox[{"q", " ", "=", " ", 
          RowBox[{"p", "/", "a"}]}], ";", " ", 
         RowBox[{"z", " ", "=", " ", 
          RowBox[{"x", " ", "/.", " ", 
           RowBox[{"Solve", "[", 
            RowBox[{
             RowBox[{"q", " ", "==", " ", "0"}], ",", " ", "x", ",", " ", 
             "Complexes"}], "]"}]}]}], ";", " ", "\n", 
         RowBox[{"Times", " ", "@@", " ", 
          RowBox[{"Join", "[", 
           RowBox[{
            RowBox[{"{", "a", "}"}], ",", " ", 
            RowBox[{"x", " ", "-", " ", "z"}]}], "]"}]}]}]}], "\n", "]"}], 
      " ", "/;", " ", 
      RowBox[{"PolynomialQ", "[", 
       RowBox[{"p", ",", " ", "x"}], "]"}]}]}], ";"}], "\n", "\n", 
   RowBox[{
    RowBox[{
     RowBox[{"ZApart", "[", 
      RowBox[{"X_", ",", " ", "z_Symbol"}], "]"}], " ", ":=", " ", 
     RowBox[{"Expand", "[", 
      RowBox[{"z", "*", 
       RowBox[{"Apart", "[", 
        RowBox[{
         RowBox[{"X", "/", "z"}], ",", " ", "z"}], "]"}]}], "]"}]}], ";"}], 
   "\n", " ", "\n", 
   RowBox[{
    RowBox[{
     RowBox[{"Options", "[", "LaplaceTransform2", "]"}], " ", "=", " ", 
     RowBox[{"Most", "[", 
      RowBox[{"Options", "[", "FourierSequenceTransform", "]"}], "]"}]}], 
    ";"}], " ", "\n", 
   RowBox[{
    RowBox[{
     RowBox[{"LaplaceTransform2", "[", 
      RowBox[{"x_", ",", " ", "t_Symbol", ",", " ", "s_", ",", " ", 
       RowBox[{"opts", ":", 
        RowBox[{"OptionsPattern", "[", "]"}]}]}], "]"}], " ", ":=", " ", "\n",
      "\t", 
     RowBox[{"FourierTransform", "[", 
      RowBox[{"x", ",", " ", "t", ",", " ", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"-", "I"}], ")"}], "*", "s"}], ",", " ", 
       RowBox[{"FourierParameters", " ", "->", " ", 
        RowBox[{"{", 
         RowBox[{"1", ",", " ", 
          RowBox[{"-", "1"}]}], "}"}]}], ",", " ", "opts"}], "]"}]}], ";"}], 
   "\n", 
   RowBox[{
    RowBox[{
     RowBox[{"LaplaceTransform2", "[", 
      RowBox[{
       RowBox[{"x", ":", 
        RowBox[{"_Symbol", " ", "|", " ", "_Function"}]}], ",", " ", 
       "t_Symbol", ",", " ", "s_", ",", " ", 
       RowBox[{"opts", ":", 
        RowBox[{"OptionsPattern", "[", "]"}]}]}], "]"}], " ", ":=", " ", "\n",
      "\t", 
     RowBox[{"LaplaceTransform2", "[", 
      RowBox[{
       RowBox[{"x", "[", "t", "]"}], ",", " ", "t", ",", " ", "s", ",", " ", 
       "opts"}], "]"}]}], ";"}], " ", "\n", "\n", 
   RowBox[{
    RowBox[{
     RowBox[{"Options", "[", "InverseLaplaceTransform2", "]"}], " ", "=", " ", 
     RowBox[{"Most", "[", 
      RowBox[{"Options", "[", "InverseFourierSequenceTransform", "]"}], 
      "]"}]}], ";"}], " ", "\n", 
   RowBox[{
    RowBox[{
     RowBox[{"InverseLaplaceTransform2", "[", 
      RowBox[{"X_", ",", " ", "s_Symbol", ",", " ", "t_", ",", " ", 
       RowBox[{"opts", ":", 
        RowBox[{"OptionsPattern", "[", "]"}]}]}], "]"}], " ", ":=", " ", 
     RowBox[{"Module", "[", 
      RowBox[{
       RowBox[{"{", "\[Omega]", "}"}], ",", " ", "\n", "\t", 
       RowBox[{"InverseFourierTransform", "[", 
        RowBox[{
         RowBox[{"X", " ", "/.", " ", 
          RowBox[{"s", " ", "->", " ", 
           RowBox[{"I", "*", "\[Omega]"}]}]}], ",", " ", "\[Omega]", ",", " ",
          "t", ",", " ", 
         RowBox[{"FourierParameters", " ", "->", " ", 
          RowBox[{"{", 
           RowBox[{"1", ",", " ", 
            RowBox[{"-", "1"}]}], "}"}]}], ",", " ", "opts"}], "]"}]}], "\n", 
      "]"}]}], ";"}], " ", "\n", 
   RowBox[{
    RowBox[{
     RowBox[{"InverseLaplaceTransform2", "[", 
      RowBox[{
       RowBox[{"X", ":", 
        RowBox[{"_Symbol", " ", "|", " ", "_Function"}]}], ",", " ", 
       "s_Symbol", ",", " ", "t_", ",", " ", 
       RowBox[{"opts", ":", 
        RowBox[{"OptionsPattern", "[", "]"}]}]}], "]"}], " ", ":=", " ", "\n",
      "\t", 
     RowBox[{"InverseLaplaceTransform2", "[", 
      RowBox[{
       RowBox[{"X", "[", "s", "]"}], ",", " ", "s", ",", " ", "t", ",", " ", 
       "opts"}], "]"}]}], ";"}], "\n", " ", "\n", 
   RowBox[{
    RowBox[{"End", "[", "]"}], ";"}], "\n", " ", "\n", 
   RowBox[{
    RowBox[{"Protect", "[", 
     RowBox[{"{", 
      RowBox[{
      "Reconstruct", ",", " ", "fA\[Phi]", ",", " ", "\[Omega]A\[Phi]", ",", 
       " ", "ToExp", ",", " ", "TrigCombine", ",", " ", "PoleZeroPlot", ",", 
       " ", "Poles", ",", " ", "Zeros", ",", " ", "PoleZeroPlot", ",", " ", 
       "PoleZeroStyle", ",", " ", "\n", "\t", "ZTransform2", ",", " ", 
       "InverseZTransform2", ",", " ", "FactorAll", ",", " ", "ApartAll", ",",
        " ", "ZApart", ",", " ", "LaplaceTransform2", ",", " ", "\n", "\t", 
       "InverseLaplaceTransform2"}], "}"}], "]"}], ";"}], " ", "\n", "\n", 
   RowBox[{
    RowBox[{"EndPackage", "[", "]"}], ";"}], " "}]}]], "Input",
 ExpressionUUID -> "aec69cc3-e6f0-42de-bd9c-8658885b4c6c"]
}, Closed]],

Cell[CellGroupData[{

Cell["The rest", "Subsubsection",
 CellChangeTimes->{{3.721382187428138*^9, 3.721382196609975*^9}, {
  3.721382257129428*^9, 
  3.72138225810525*^9}},ExpressionUUID->"ee93048c-516a-48fa-b95b-\
cdb0a3cc292c"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"\[Omega]z", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", 
      FractionBox[
       RowBox[{"77", "\[Pi]"}], "100"]}], ",", 
     RowBox[{"-", 
      FractionBox[
       RowBox[{"55", "\[Pi]"}], "100"]}], ",", 
     RowBox[{"-", 
      FractionBox[
       RowBox[{"33", "\[Pi]"}], "100"]}], ",", 
     RowBox[{"-", 
      FractionBox[
       RowBox[{"11", "\[Pi]"}], "100"]}], ",", "0", ",", 
     FractionBox[
      RowBox[{"11", "\[Pi]"}], "100"], ",", 
     FractionBox[
      RowBox[{"33", "\[Pi]"}], "100"], ",", 
     FractionBox[
      RowBox[{"55", "\[Pi]"}], "100"], ",", 
     FractionBox[
      RowBox[{"77", "\[Pi]"}], "100"]}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Xz", "=", " ", 
   RowBox[{"{", 
    RowBox[{
    "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1",
      ",", "1"}], "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"\[Omega]p", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", 
      FractionBox[
       RowBox[{"44", "\[Pi]"}], "50"]}], ",", 
     RowBox[{"-", 
      FractionBox[
       RowBox[{"33", "\[Pi]"}], "50"]}], ",", 
     RowBox[{"-", 
      FractionBox[
       RowBox[{"22", "\[Pi]"}], "50"]}], ",", 
     RowBox[{"-", 
      FractionBox[
       RowBox[{"11", "\[Pi]"}], "50"]}], ",", 
     FractionBox[
      RowBox[{"11", "\[Pi]"}], "50"], ",", 
     FractionBox[
      RowBox[{"22", "\[Pi]"}], "50"], ",", 
     FractionBox[
      RowBox[{"33", "\[Pi]"}], "50"], ",", 
     FractionBox[
      RowBox[{"44", "\[Pi]"}], "50"]}], "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Xp", "=", " ", 
   RowBox[{"{", 
    RowBox[{
    "0.9", ",", "0.9", ",", "0.9", ",", "0.9", ",", "0.9", ",", "0.9", ",", 
     "0.9", ",", "0.9"}], "}"}]}], ";"}]}], "Input"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"H", "[", "z_", "]"}], ":=", 
   FractionBox[
    RowBox[{
     RowBox[{"(", 
      RowBox[{"1", "-", 
       SuperscriptBox["z", 
        RowBox[{"-", "1"}]]}], ")"}], 
     RowBox[{
      UnderoverscriptBox["\[Product]", 
       RowBox[{"k", "=", "1", " "}], "4"], 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"1", "-", 
          RowBox[{
           SuperscriptBox["z", 
            RowBox[{"-", "1"}]], 
           SuperscriptBox["\[ExponentialE]", 
            RowBox[{
             RowBox[{"-", "\[ImaginaryJ]"}], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"2", "k"}], "-", "1"}], ")"}], 
             FractionBox[
              RowBox[{"11", " ", "\[Pi]"}], "100"]}]]}]}], ")"}], " ", 
        RowBox[{"(", 
         RowBox[{"1", "-", 
          RowBox[{
           SuperscriptBox["z", 
            RowBox[{"-", "1"}]], 
           SuperscriptBox["\[ExponentialE]", 
            RowBox[{"\[ImaginaryJ]", " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"2", "k"}], "-", "1"}], ")"}], 
             FractionBox[
              RowBox[{"11", " ", "\[Pi]"}], "100"]}]]}]}], ")"}]}], ")"}]}]}], 
    RowBox[{"100", 
     RowBox[{
      UnderoverscriptBox["\[Product]", 
       RowBox[{"k", "=", "1"}], "4"], " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"1", "-", 
          RowBox[{"0.9", 
           SuperscriptBox["z", 
            RowBox[{"-", "1"}]], 
           SuperscriptBox["\[ExponentialE]", 
            RowBox[{
             RowBox[{"-", "\[ImaginaryJ]"}], " ", "k", 
             FractionBox[
              RowBox[{"11", " ", "\[Pi]"}], "50"]}]]}]}], ")"}], " ", 
        RowBox[{"(", 
         RowBox[{"1", "-", 
          RowBox[{"0.9", 
           SuperscriptBox["z", 
            RowBox[{"-", "1"}]], 
           SuperscriptBox["\[ExponentialE]", 
            RowBox[{"\[ImaginaryJ]", " ", "k", 
             FractionBox[
              RowBox[{"11", " ", "\[Pi]"}], "50"]}]]}]}], ")"}]}], 
       ")"}]}]}]]}], "\[IndentingNewLine]"}]], "Input",
 CellChangeTimes->{{3.721382260689509*^9, 3.721382261873336*^9}, {
   3.72138233791083*^9, 3.721382341859261*^9}, {3.721382520285666*^9, 
   3.72138266526814*^9}, {3.721382700963347*^9, 3.721382717473179*^9}, {
   3.7213828186437473`*^9, 3.721382839651149*^9}, 3.721382949545926*^9, {
   3.721383375741437*^9, 3.7213833781157312`*^9}, {3.721466974887869*^9, 
   3.721466998624136*^9}, {3.721467224204385*^9, 3.721467268741571*^9}, {
   3.721467469066639*^9, 3.7214674834595823`*^9}, {3.7214676016952333`*^9, 
   3.721467619662221*^9}, {3.7214678438708153`*^9, 3.7214678937397423`*^9}, 
   3.721553885237472*^9},
 ExpressionUUID -> "18d43b55-aaee-44f5-9711-80ffc35f0639"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"PoleZeroPlot", "[", 
  RowBox[{
   RowBox[{"H", "[", "z", "]"}], ",", "z", ",", 
   RowBox[{"AxesLabel", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"\"\<Re\>\"", ",", "\"\<Im\>\""}], "}"}]}], ",", 
   RowBox[{"Prolog", " ", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"Gray", ",", " ", 
      RowBox[{"Circle", "[", "]"}]}], "}"}]}], ",", 
   RowBox[{"PlotLabel", "\[Rule]", "\"\<Pole-zero plot\>\""}]}], 
  "]"}]], "Input",
 CellChangeTimes->{3.721467816225128*^9},
 ExpressionUUID -> "62bb4788-3eca-487a-b66b-99f232920d9f"],

Cell[BoxData[
 GraphicsBox[{{
    {RGBColor[1, 0, 0], 
     LineBox[{{-0.8601333610785824, -0.3546466211953664}, \
{-0.8134643135202702, -0.30797757363705425`}}], 
     LineBox[{{-0.8601333610785824, -0.30797757363705425`}, \
{-0.8134643135202702, -0.3546466211953664}}]}, 
    {RGBColor[1, 0, 0], 
     LineBox[{{-0.8601333610785824, 
      0.30797757363705425`}, {-0.8134643135202702, 0.3546466211953664}}], 
     LineBox[{{-0.8601333610785824, 0.3546466211953664}, {-0.8134643135202702,
       0.30797757363705425`}}]}, 
    {RGBColor[1, 0, 0], 
     LineBox[{{-0.4569128304706999, 0.7653414882603209}, {-0.4102437829123878,
       0.8120105358186331}}], 
     LineBox[{{-0.4569128304706999, 0.8120105358186331}, {-0.4102437829123878,
       0.7653414882603209}}]}, 
    {RGBColor[1, 0, 0], 
     LineBox[{{-0.45691283047069986`, -0.8120105358186331}, \
{-0.4102437829123877, -0.7653414882603211}}], 
     LineBox[{{-0.45691283047069986`, -0.7653414882603211}, \
{-0.4102437829123877, -0.8120105358186331}}]}, 
    {RGBColor[1, 0, 0], 
     LineBox[{{-0.02333452377915607, -0.02333452377915607}, {
      0.02333452377915607, 0.02333452377915607}}], 
     LineBox[{{-0.02333452377915607, 0.02333452377915607}, {
      0.02333452377915607, -0.02333452377915607}}]}, 
    {RGBColor[1, 0, 0], 
     LineBox[{{0.14530865934799622`, -0.907393049434976}, {
      0.19197770690630836`, -0.8607240018766638}}], 
     LineBox[{{0.14530865934799622`, -0.8607240018766638}, {
      0.19197770690630836`, -0.907393049434976}}]}, 
    {RGBColor[1, 0, 0], 
     LineBox[{{0.14530865934799633`, 0.8607240018766638}, {
      0.19197770690630847`, 0.907393049434976}}], 
     LineBox[{{0.14530865934799633`, 0.907393049434976}, {
      0.19197770690630847`, 0.8607240018766638}}]}, 
    {RGBColor[1, 0, 0], 
     LineBox[{{0.6701273947190542, -0.5970161145529767}, {
      0.7167964422773663, -0.5503470669946644}}], 
     LineBox[{{0.6701273947190542, -0.5503470669946644}, {
      0.7167964422773663, -0.5970161145529767}}]}, 
    {RGBColor[1, 0, 0], 
     LineBox[{{0.6701273947190542, 0.5503470669946644}, {0.7167964422773663, 
      0.5970161145529767}}], 
     LineBox[{{0.6701273947190542, 0.5970161145529767}, {0.7167964422773663, 
      0.5503470669946644}}]}}, {
    {RGBColor[0, 0, 1], 
     CircleBox[{-0.7501110696304596, -0.6613118653236518}, 0.033]}, 
    {RGBColor[0, 0, 1], 
     CircleBox[{-0.7501110696304596, 0.6613118653236518}, 0.033]}, 
    {RGBColor[0, 0, 1], 
     CircleBox[{-0.15643446504023095, -0.9876883405951378}, 0.033]}, 
    {RGBColor[0, 0, 1], 
     CircleBox[{-0.15643446504023073, 0.9876883405951377}, 0.033]}, 
    {RGBColor[0, 0, 1], 
     CircleBox[{0.5090414157503707, -0.8607420270039429}, 0.033]}, 
    {RGBColor[0, 0, 1], 
     CircleBox[{0.5090414157503714, 0.8607420270039444}, 0.033]}, 
    {RGBColor[0, 0, 1], 
     CircleBox[{0.9408807689542225, 0.33873792024528976}, 0.033]}, 
    {RGBColor[0, 0, 1], 
     CircleBox[{0.9408807689542261, -0.33873792024529237}, 0.033]}, 
    {RGBColor[0, 0, 1], CircleBox[{1.0000000000000027, 0}, 0.033]}}},
  AlignmentPoint->Center,
  AspectRatio->Automatic,
  Axes->True,
  AxesLabel->{
    FormBox["\"Re\"", TraditionalForm], 
    FormBox["\"Im\"", TraditionalForm]},
  AxesOrigin->Automatic,
  AxesStyle->{},
  Background->None,
  BaseStyle->{},
  BaselinePosition->Automatic,
  ColorOutput->Automatic,
  ContentSelectable->Automatic,
  CoordinatesToolOptions:>Automatic,
  DisplayFunction:>$DisplayFunction,
  Epilog->{},
  FormatType:>TraditionalForm,
  Frame->False,
  FrameLabel->None,
  FrameStyle->{},
  FrameTicks->Automatic,
  FrameTicksStyle->{},
  GridLines->None,
  GridLinesStyle->{},
  ImageMargins->0.,
  ImagePadding->All,
  ImageSize->Automatic,
  ImageSizeRaw->Automatic,
  LabelStyle->{},
  Method->Automatic,
  PlotLabel->FormBox["\"Pole-zero plot\"", TraditionalForm],
  PlotRange->{{-1.1, 1.1000000000000028`}, {-1.1, 1.1}},
  PlotRangeClipping->False,
  PlotRangePadding->Automatic,
  PlotRegion->Automatic,
  PreserveImageOptions->Automatic,
  Prolog->{
    GrayLevel[0.5], 
    CircleBox[{0, 0}]},
  RotateLabel->True,
  Ticks->Automatic,
  TicksStyle->{}]], "Output",
 CellChangeTimes->{
  3.721467622256089*^9, 3.721467817918461*^9, {3.721553830319899*^9, 
   3.721553837180533*^9}, {3.721553892237356*^9, 3.721553911669367*^9}, {
   3.721555074654304*^9, 3.721555102502056*^9}, 3.721555236349832*^9, 
   3.7220791879396152`*^9},ExpressionUUID->"c5960b43-e11c-498c-9859-\
f571bd294ac8"]
}, Open  ]],

Cell[BoxData[
 RowBox[{"\n", 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"The", " ", "system", " ", "is", " ", 
     RowBox[{"stable", ".", " ", "All"}], " ", "the", " ", "poles", " ", 
     "are", " ", "located", " ", "within", " ", "the", " ", "unit", " ", 
     "circle"}], ";", " ", 
    RowBox[{
    "meaning", " ", "that", " ", "the", " ", "response", " ", "signal", " ", 
     "will", " ", "weaken", " ", "with", " ", "time", " ", "and", " ", "not", 
     " ", "grow", " ", "to", " ", "infinity"}]}], " ", "*)"}]}]], "Input",
 CellChangeTimes->{{3.721467984636063*^9, 
  3.721467988757283*^9}},ExpressionUUID->"c57094f8-5ee6-4794-95b5-\
f4445d1b0fce"],

Cell[BoxData[
 RowBox[{"(*", 
  RowBox[{
   RowBox[{
   "The", " ", "filter", " ", "works", " ", "as", " ", "a", " ", "high"}], 
   "-", 
   RowBox[{"pass", " ", "filter", " ", "of", " ", 
    RowBox[{"sorts", ".", " ", "Some"}], " ", "frequencies", " ", "are", " ", 
    "removed", " ", 
    RowBox[{"completely", "."}]}]}], " ", "*)"}]], "Input",
 CellChangeTimes->{{3.7214676261564913`*^9, 3.721467634618951*^9}, {
  3.721468271571262*^9, 3.721468307526659*^9}},
 ExpressionUUID -> "cb470722-a060-4ba2-8dfd-3bb894a9d9a3"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"\[DoubleStruckCapitalX]", "=", 
   RowBox[{
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{"UnitStep", "[", "n", "]"}], ",", 
      RowBox[{"{", 
       RowBox[{"n", ",", "0", ",", "50", ",", "1"}], "}"}]}], "]"}], "//", 
    "N"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"\[DoubleStruckCapitalH]", "=", 
   RowBox[{"TransferFunctionModel", "[", 
    RowBox[{GridBox[{
       {
        RowBox[{"H", "[", "z", "]"}]}
      },
      AllowScriptLevelChange->False,
      BaseStyle->{Deployed -> False},
      GridBoxAlignment->{
       "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
        "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
      GridBoxItemStyle->{
       "ItemsIndexed" -> {{{1, 1}, {}} -> {
           Deployed -> True, ShowStringCharacters -> False}, {{}, {1, 1}} -> {
           Deployed -> True, ShowStringCharacters -> False}}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
          Offset[0.2], {
           Offset[0.4]}, 
          Offset[0.2]}, "RowsIndexed" -> {}}], ",", "z", ",", 
     RowBox[{"SamplingPeriod", "\[Rule]", "1"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"{", "\[DoubleStruckCapitalY]", "}"}], "=", 
   RowBox[{"OutputResponse", "[", 
    RowBox[{"\[DoubleStruckCapitalH]", ",", "\[DoubleStruckCapitalX]"}], 
    "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.72207914454714*^9, 
  3.722079160355707*^9}},ExpressionUUID->"b1281bf0-877f-4112-b5e2-\
3d9e3c04b4ff"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ListPlot", "[", 
  RowBox[{"\[DoubleStruckCapitalY]", ",", 
   RowBox[{"DataRange", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"0", ",", "50"}], "}"}]}], ",", 
   RowBox[{"PlotRange", "\[Rule]", "All"}], ",", 
   RowBox[{"Filling", "\[Rule]", "Axis"}], ",", 
   RowBox[{"PlotStyle", "\[Rule]", "Red"}], ",", 
   RowBox[{"AxesLabel", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"Style", "[", 
       RowBox[{"\"\<n\>\"", ",", "Italic"}], "]"}], ",", 
      RowBox[{"StringForm", "[", 
       RowBox[{"\"\<`1`[`2`]\>\"", ",", 
        RowBox[{"Style", "[", 
         RowBox[{"\"\<y\>\"", ",", "Italic"}], "]"}], ",", 
        RowBox[{"Style", "[", 
         RowBox[{"\"\<n\>\"", ",", "Italic"}], "]"}]}], "]"}]}], "}"}]}], ",",
    " ", 
   RowBox[{"PlotLabel", "\[Rule]", "\"\<Impulse response\>\""}]}], 
  "]"}]], "Input",
 CellChangeTimes->{
  3.690208150115305*^9, {3.6907074217117386`*^9, 3.6907074301660757`*^9}, {
   3.690784336809095*^9, 3.6907843379706383`*^9}}],

Cell[BoxData[
 GraphicsBox[{{}, GraphicsComplexBox[CompressedData["
1:eJzt1d1LU3EYwPG5DGdoqY1cy0SniEwZ8+3odG6Pe9Glpaw0sVwzV+iFZdIL
WJnOmYoviZsbiJFlGCooGUV0IVJSmV2UXkQXRmQuIhM0S1redMJnF+e56R/w
B4fDd58fZ7+bh19kefXh03wej9fLPv/e3nVNOJbz6XKTerNW1KV7FuFknWMS
GYwOi7SuzoEuALtc+mfE5PUg6IgrYd6IvS6ExrsFLt2YHV0EnrnMgcQddvQw
qFeIh3sCu9EjYKiwvyOk8wa6BJ75M57eCxHo0bBL4H++rbUZOwYUIbo1X5EN
98fCZBn4MXIruhQeLCuMlZZ69Hhwy81d4c6r6DKoPeRXNNhTiy6HCZMxcmPp
InoCHP3gP7FUcQ49EYQmy7Ql2oydBB+dmunr1ku4PxmY8ntXCn5696eA6vv4
6LHUKnQGzPMBQXpBJXoqjJ+dfNFUego9Ddp25jfP3S9DV8DU71uebl4Jejpo
Z1otLxtz0TMg6VuUPPR9MbYSAt0V4cGd3u9lQlzYc2v41+PoKugb+TL0yFWE
rgb7Z+u+2f1GdAAHk9dSM5y76Q0A/GpX4bxJi54FU6K3M6+fMOhZsO3d8uyd
+HXVpmvAllc7WjGI52vQgGb19o+WLiP+nxZsS9ASXK1H18LirzO7Dz5UoetA
W6zcritl0HWg65BI0zwydD1oMvoHYkMl6HrgD7Vv+Lb7oGeDrWxsvcYgxvNl
g1Y5a0h3K/D8OdAkXHhqMyvRc0CX3+c6cVOGboBGt9N9xBOFbgBb1YJ4dXov
+gHw9eE/XnsV4J0HslbU5AfgpoB0EGkhaRHpMNIRpCWko0nHkI4lLSUdT1pG
Wk46gXQi6STSyaRTSDOkU0mnkVaQTiedQVpJOpO0irSaNHC7gTQ7L1wnzc4L
10mz88J10uy8cJ00Oy9cJ83OC9dJs/PCddLsvHCdNDsvPLK27pet+2Xrfvn/
/fIX5U3NjA==
    "], {{{}, {}, {}, 
      {RGBColor[1, 0, 0], Opacity[0.3], LineBox[{53, 2}], LineBox[{55, 4}], 
       LineBox[{57, 6}], LineBox[{59, 8}], LineBox[{61, 10}], 
       LineBox[{62, 11}], LineBox[{64, 13}], LineBox[{66, 15}], 
       LineBox[{68, 17}], LineBox[{71, 20}], LineBox[{73, 22}], 
       LineBox[{75, 24}], LineBox[{77, 26}], LineBox[{80, 29}], 
       LineBox[{82, 31}], LineBox[{84, 33}], LineBox[{86, 35}], 
       LineBox[{89, 38}], LineBox[{91, 40}], LineBox[{93, 42}], 
       LineBox[{95, 44}], LineBox[{96, 45}], LineBox[{98, 47}], 
       LineBox[{100, 49}], LineBox[{102, 51}]}, 
      {RGBColor[1, 0, 0], Opacity[0.3], LineBox[{52, 1}], LineBox[{54, 3}], 
       LineBox[{56, 5}], LineBox[{58, 7}], LineBox[{60, 9}], 
       LineBox[{63, 12}], LineBox[{65, 14}], LineBox[{67, 16}], 
       LineBox[{69, 18}], LineBox[{70, 19}], LineBox[{72, 21}], 
       LineBox[{74, 23}], LineBox[{76, 25}], LineBox[{78, 27}], 
       LineBox[{79, 28}], LineBox[{81, 30}], LineBox[{83, 32}], 
       LineBox[{85, 34}], LineBox[{87, 36}], LineBox[{88, 37}], 
       LineBox[{90, 39}], LineBox[{92, 41}], LineBox[{94, 43}], 
       LineBox[{97, 46}], LineBox[{99, 48}], LineBox[{101, 50}]}}, {{}, 
      {RGBColor[1, 0, 0], PointSize[0.011000000000000001`], AbsoluteThickness[
       1.6], PointBox[{103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 
        114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 
        128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 
        142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 
        153}]}, {}}}], {}, {}, {{}, {}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{
    FormBox[
     StyleBox["\"n\"", Italic, StripOnInput -> False], TraditionalForm], 
    FormBox[
     InterpretationBox[
     "\"\\!\\(\\*FormBox[StyleBox[\\\"\\\\\\\"y\\\\\\\"\\\", Italic, \
Rule[StripOnInput, False]], \
TraditionalForm]\\)[\\!\\(\\*FormBox[StyleBox[\\\"\\\\\\\"n\\\\\\\"\\\", \
Italic, Rule[StripOnInput, False]], TraditionalForm]\\)]\"", 
      StringForm["`1`[`2`]", 
       Style["y", Italic], 
       Style["n", Italic]], Editable -> False], TraditionalForm]},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
         Part[#, 1]], 
        (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
         Part[#, 1]], 
        (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
         Part[#, 2]]}& )}},
  PlotLabel->FormBox["\"Impulse response\"", TraditionalForm],
  PlotRange->{{0, 50.}, {-0.019032973847990284`, 0.01903338977071495}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.7220791935451612`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"Abs", "[", 
    RowBox[{"H", "[", 
     SuperscriptBox["E", 
      RowBox[{"\[ImaginaryJ]", "*", "\[Omega]"}]], "]"}], "]"}], ",", " ", 
   RowBox[{"{", 
    RowBox[{"\[Omega]", ",", " ", 
     RowBox[{"-", "\[Pi]"}], ",", " ", "\[Pi]"}], "}"}], ",", 
   RowBox[{"PlotRange", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"-", "Pi"}], ",", "Pi"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"0", ",", "0.35"}], "}"}]}], "}"}]}], ",", " ", 
   RowBox[{"AxesLabel", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"\"\<\[Omega]\>\"", ",", " ", 
      RowBox[{"HoldForm", "[", 
       RowBox[{"Abs", "[", 
        RowBox[{"H", "[", 
         SuperscriptBox["\[ExponentialE]", "\[ImaginaryJ]\[Omega]"], "]"}], 
        "]"}], "]"}]}], "}"}]}], ",", 
   RowBox[{"PlotLabel", "\[Rule]", "\"\<Frequency response\>\""}]}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.721555113659202*^9, 3.721555127089819*^9}},
 ExpressionUUID -> "4fb23e89-468d-4e8e-8c62-f8c06f14c507"],

Cell[BoxData[
 GraphicsBox[{{{}, {}, 
    TagBox[
     {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
      1.], LineBox[CompressedData["
1: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
       "]]},
     Annotation[#, "Charting`Private`Tag$2705#1"]& ]}, {}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{
    FormBox["\"\[Omega]\"", TraditionalForm], 
    FormBox[
     TagBox[
      TemplateBox[{
        RowBox[{"H", "(", 
          SuperscriptBox["\[ExponentialE]", "\[ImaginaryJ]\[Omega]"], ")"}]}, 
       "Abs"], HoldForm], TraditionalForm]},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{
   "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
         Part[#, 1]], 
        (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
         Part[#, 1]], 
        (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
         Part[#, 2]]}& )}},
  PlotLabel->FormBox["\"Frequency response\"", TraditionalForm],
  PlotRange->
   NCache[{{-Pi, Pi}, {0, 0.35}}, {{-3.141592653589793, 3.141592653589793}, {
     0, 0.35}}],
  PlotRangeClipping->True,
  PlotRangePadding->{{0, 0}, {0, 0}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{
  3.721469521354857*^9, 3.7215539158085327`*^9, 3.721555075128183*^9, {
   3.7215551061968393`*^9, 3.721555128187701*^9}, 3.721555236875311*^9, 
   3.722079196467346*^9},ExpressionUUID->"2e77c64f-2532-487b-b42a-\
c6fdfbcd9efc"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  SubscriptBox["b", "k"], "=", 
  RowBox[{
   RowBox[{
    RowBox[{"Reverse", "[", 
     RowBox[{"CoefficientList", "[", 
      RowBox[{
       RowBox[{"Expand", "[", 
        RowBox[{
         RowBox[{"Numerator", "[", 
          RowBox[{"H", "[", "z", "]"}], "]"}], "\[Times]", 
         SuperscriptBox["z", "9"]}], "]"}], ",", " ", "z"}], "]"}], "]"}], "//",
     "Re"}], "//", "N"}]}], "\[IndentingNewLine]", 
 RowBox[{
  SubscriptBox["a", "k"], "=", 
  RowBox[{
   RowBox[{
    RowBox[{"Reverse", "[", 
     RowBox[{"CoefficientList", "[", 
      RowBox[{
       RowBox[{"Expand", "[", 
        RowBox[{
         RowBox[{"Denominator", "[", 
          RowBox[{"H", "[", "z", "]"}], "]"}], "\[Times]", 
         SuperscriptBox["z", "8"]}], "]"}], ",", " ", "z"}], "]"}], "]"}], "//",
     "Re"}], "//", "N"}]}]}], "Input",
 CellChangeTimes->{{3.6902244483350477`*^9, 3.690224575756641*^9}, {
  3.69022460738863*^9, 3.6902247937245283`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"1.`", ",", 
   RowBox[{"-", "2.086753300067813`"}], ",", "2.214233381728729`", ",", 
   RowBox[{"-", "2.27534819565895`"}], ",", "2.302047761444083`", ",", 
   RowBox[{"-", "2.302047761444083`"}], ",", "2.27534819565895`", ",", 
   RowBox[{"-", "2.214233381728729`"}], ",", "2.086753300067813`", ",", 
   RowBox[{"-", "1.`"}]}], "}"}]], "Output",
 CellChangeTimes->{3.7220792092318907`*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "100.`", ",", "81.65440847312148`", ",", "77.82673256314582`", ",", 
   "67.04460790461778`", ",", "62.748399250635536`", ",", 
   "54.30613240274036`", ",", "51.06211923467995`", ",", 
   "43.394500493364106`", ",", "43.04672099999999`"}], "}"}]], "Output",
 CellChangeTimes->{
  3.7220792092402*^9},ExpressionUUID->"32eb0bad-233c-4b46-9c3f-763f93b46958"]
}, Open  ]],

Cell[BoxData[
 RowBox[{"\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{
     SubscriptBox["f", "0"], "=", "220"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     SubscriptBox["f", "s"], "=", 
     RowBox[{"4", "\[Times]", 
      SuperscriptBox["10", "3"]}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     SubscriptBox["T", "0"], "=", 
     FractionBox["1", 
      SubscriptBox["f", "0"]]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     OverscriptBox["\[Omega]", "^"], "=", 
     FractionBox[
      SubscriptBox["f", "0"], 
      SubscriptBox["f", "s"]]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{
      SubscriptBox["x", "1"], "[", "t_", "]"}], "=", 
     RowBox[{
      FractionBox["1", "\[Pi]"], "\[Times]", 
      RowBox[{
       UnderoverscriptBox["\[Sum]", 
        RowBox[{"k", "=", "1"}], "9"], 
       RowBox[{"(", 
        RowBox[{
         FractionBox[
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{"-", "1"}], ")"}], 
           RowBox[{"k", "-", "1"}]], "k"], "\[Times]", 
         RowBox[{"Sin", "[", 
          RowBox[{"2", "\[Pi]", "\[Times]", "k", "\[Times]", 
           SubscriptBox["f", "0"], "\[Times]", "t"}], "]"}]}], ")"}]}]}]}], 
    ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{
      SubscriptBox["x", "2"], "[", "n_", "]"}], "=", 
     RowBox[{
      FractionBox["1", "\[Pi]"], "\[Times]", 
      RowBox[{
       UnderoverscriptBox["\[Sum]", 
        RowBox[{"k", "=", "1"}], "9"], 
       RowBox[{"(", 
        RowBox[{
         FractionBox[
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{"-", "1"}], ")"}], 
           RowBox[{"k", "-", "1"}]], "k"], "\[Times]", 
         RowBox[{"Sin", "[", 
          RowBox[{"2", "\[Pi]", "\[Times]", "k", "\[Times]", 
           OverscriptBox["\[Omega]", "^"], "\[Times]", "n"}], "]"}]}], 
        ")"}]}]}]}], ";"}]}]}]], "Input",
 CellChangeTimes->{{3.690225781134787*^9, 3.6902260102070093`*^9}, {
  3.6902260609779825`*^9, 3.6902260811992445`*^9}, {3.6902265503309546`*^9, 
  3.6902265934307404`*^9}, {3.690226682866022*^9, 3.690226686910876*^9}, {
  3.69022682486814*^9, 3.6902268754227924`*^9}, {3.690226924207646*^9, 
  3.690226952303382*^9}, {3.6902271565775995`*^9, 3.6902271733112884`*^9}, {
  3.7222316379614887`*^9, 
  3.722231638823863*^9}},ExpressionUUID->"af6c306e-92a4-4373-9660-\
9c852e7cef3b"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"\[Omega]x", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", 
      FractionBox[
       RowBox[{"99", "\[Pi]"}], "100"]}], ",", 
     RowBox[{"-", 
      FractionBox[
       RowBox[{"88", "\[Pi]"}], "100"]}], ",", 
     RowBox[{"-", 
      FractionBox[
       RowBox[{"77", "\[Pi]"}], "100"]}], ",", 
     RowBox[{"-", 
      FractionBox[
       RowBox[{"66", "\[Pi]"}], "100"]}], ",", 
     RowBox[{"-", 
      FractionBox[
       RowBox[{"55", "\[Pi]"}], "100"]}], ",", 
     RowBox[{"-", 
      FractionBox[
       RowBox[{"44", "\[Pi]"}], "100"]}], ",", 
     RowBox[{"-", 
      FractionBox[
       RowBox[{"33", "\[Pi]"}], "100"]}], ",", 
     RowBox[{"-", 
      FractionBox[
       RowBox[{"22", "\[Pi]"}], "100"]}], ",", 
     RowBox[{"-", 
      FractionBox[
       RowBox[{"11", "\[Pi]"}], "100"]}], ",", 
     FractionBox[
      RowBox[{"11", "\[Pi]"}], "100"], ",", 
     FractionBox[
      RowBox[{"22", "\[Pi]"}], "100"], ",", 
     FractionBox[
      RowBox[{"33", "\[Pi]"}], "100"], ",", 
     FractionBox[
      RowBox[{"44", "\[Pi]"}], "100"], ",", 
     FractionBox[
      RowBox[{"55", "\[Pi]"}], "100"], ",", 
     FractionBox[
      RowBox[{"66", "\[Pi]"}], "100"], ",", 
     FractionBox[
      RowBox[{"77", "\[Pi]"}], "100"], ",", 
     FractionBox[
      RowBox[{"88", "\[Pi]"}], "100"], ",", 
     FractionBox[
      RowBox[{"99", "\[Pi]"}], "100"]}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Ax", "=", 
   RowBox[{"{", 
    RowBox[{
     FractionBox["1", 
      RowBox[{"18", "\[Pi]"}]], ",", 
     RowBox[{"-", 
      FractionBox["1", 
       RowBox[{"16", "\[Pi]"}]]}], ",", 
     FractionBox["1", 
      RowBox[{"14", "\[Pi]"}]], ",", 
     RowBox[{"-", 
      FractionBox["1", 
       RowBox[{"12", "\[Pi]"}]]}], ",", 
     FractionBox["1", 
      RowBox[{"10", "\[Pi]"}]], ",", 
     RowBox[{"-", 
      FractionBox["1", 
       RowBox[{"8", "\[Pi]"}]]}], ",", " ", 
     FractionBox["1", 
      RowBox[{"6", "\[Pi]"}]], ",", 
     RowBox[{"-", 
      FractionBox["1", 
       RowBox[{"4", "\[Pi]"}]]}], ",", 
     FractionBox["1", 
      RowBox[{"2", "\[Pi]"}]], ",", 
     FractionBox["1", 
      RowBox[{"2", "\[Pi]"}]], ",", 
     RowBox[{"-", 
      FractionBox["1", 
       RowBox[{"4", "\[Pi]"}]]}], ",", 
     FractionBox["1", 
      RowBox[{"6", "\[Pi]"}]], ",", 
     RowBox[{"-", 
      FractionBox["1", 
       RowBox[{"8", "\[Pi]"}]]}], ",", 
     FractionBox["1", 
      RowBox[{"10", "\[Pi]"}]], ",", 
     RowBox[{"-", 
      FractionBox["1", 
       RowBox[{"12", "\[Pi]"}]]}], ",", 
     FractionBox["1", 
      RowBox[{"14", "\[Pi]"}]], ",", 
     RowBox[{"-", 
      FractionBox["1", 
       RowBox[{"16", "\[Pi]"}]]}], ",", 
     FractionBox["1", 
      RowBox[{"18", "\[Pi]"}]]}], "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"\[CurlyPhi]x", "=", 
   RowBox[{"{", 
    RowBox[{
     FractionBox["\[Pi]", "2"], ",", 
     FractionBox["\[Pi]", "2"], ",", 
     FractionBox["\[Pi]", "2"], ",", 
     FractionBox["\[Pi]", "2"], ",", 
     FractionBox["\[Pi]", "2"], ",", 
     FractionBox["\[Pi]", "2"], ",", 
     FractionBox["\[Pi]", "2"], ",", 
     FractionBox["\[Pi]", "2"], ",", 
     FractionBox["\[Pi]", "2"], ",", 
     RowBox[{"-", 
      FractionBox["\[Pi]", "2"]}], ",", 
     RowBox[{"-", 
      FractionBox["\[Pi]", "2"]}], ",", 
     RowBox[{"-", 
      FractionBox["\[Pi]", "2"]}], ",", 
     RowBox[{"-", 
      FractionBox["\[Pi]", "2"]}], ",", 
     RowBox[{"-", 
      FractionBox["\[Pi]", "2"]}], ",", 
     RowBox[{"-", 
      FractionBox["\[Pi]", "2"]}], ",", 
     RowBox[{"-", 
      FractionBox["\[Pi]", "2"]}], ",", 
     RowBox[{"-", 
      FractionBox["\[Pi]", "2"]}], ",", 
     RowBox[{"-", 
      FractionBox["\[Pi]", "2"]}]}], "}"}]}], 
  ";"}], "\[IndentingNewLine]"}], "Input",
 CellChangeTimes->{{3.69022767915268*^9, 3.690227963262905*^9}, {
   3.6902280301927795`*^9, 3.690228094850206*^9}, {3.6902281438412013`*^9, 
   3.69022821915209*^9}, {3.6902282756651287`*^9, 3.6902282850697975`*^9}, {
   3.6902283281267242`*^9, 3.6902283969116163`*^9}, {3.690228473903179*^9, 
   3.6902285358861914`*^9}, {3.6902286077033443`*^9, 3.6902286514585905`*^9}, 
   3.6902291367385745`*^9},ExpressionUUID->"360304c4-b645-4935-a289-\
608028c8416b"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"X", "=", 
   RowBox[{"Ax", "*", 
    SuperscriptBox["\[ExponentialE]", 
     RowBox[{"\[ImaginaryJ]", "*", "\[CurlyPhi]x"}]]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"x", "[", "n_", "]"}], "=", 
   RowBox[{"Plus", "@@", 
    RowBox[{"(", 
     RowBox[{"X", "*", 
      SuperscriptBox["\[ExponentialE]", 
       RowBox[{"\[ImaginaryJ]", "*", "\[Omega]x", "*", "n"}]]}], ")"}]}]}], 
  ";"}]}], "Input",
 CellChangeTimes->{{3.690228680114002*^9, 3.690228703774249*^9}, {
   3.6902290807527285`*^9, 3.690229102480217*^9}, {3.6902292074240317`*^9, 
   3.690229207712068*^9}, 3.722231629383862*^9},
 FontWeight->"Plain",ExpressionUUID->"2b3c8f7d-b0cf-49c3-8dfa-379469ef11fb"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{
    SubscriptBox["x", "1"], "[", "t", "]"}], " ", ",", 
   RowBox[{"{", 
    RowBox[{"t", ",", " ", 
     RowBox[{"-", 
      SubscriptBox["T", "0"]}], ",", " ", 
     SubscriptBox["T", "0"]}], "}"}], ",", 
   RowBox[{"AxesLabel", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"\"\<t\>\"", ",", "\"\<x(t)\>\""}], "}"}]}], ",", 
   RowBox[{"PlotLabel", "\[Rule]", "\"\<Continous signal\>\""}]}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.6902268995782924`*^9, 3.6902269198539925`*^9}, {
   3.6902269562218876`*^9, 3.6902269845745955`*^9}, 3.6902865809161234`*^9, {
   3.690707458724075*^9, 3.6907074657252417`*^9}, {3.690707545556958*^9, 
   3.6907075739537826`*^9}}],

Cell[BoxData[
 GraphicsBox[{{{}, {}, 
    TagBox[
     {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
      1.], LineBox[CompressedData["
1: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
AR6b6pG2z+Gt/wPbp39S
       "]]},
     Annotation[#, "Charting`Private`Tag$2776#1"]& ]}, {}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{
    FormBox["\"t\"", TraditionalForm], 
    FormBox["\"x(t)\"", TraditionalForm]},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{
   "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
         Part[#, 1]], 
        (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
         Part[#, 1]], 
        (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
         Part[#, 2]]}& )}},
  PlotLabel->FormBox["\"Continous signal\"", TraditionalForm],
  PlotRange->NCache[{{
      Rational[-1, 220], 
      Rational[1, 220]}, {-0.5386558609346715, 
     0.5386556987982167}}, {{-0.004545454545454545, 
    0.004545454545454545}, {-0.5386558609346715, 0.5386556987982167}}],
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.7220793134785833`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"DiscretePlot", "[", 
  RowBox[{
   RowBox[{"x", "[", "n", "]"}], " ", ",", 
   RowBox[{"{", 
    RowBox[{"n", ",", " ", 
     RowBox[{"-", "18"}], ",", " ", "18"}], "}"}], ",", 
   RowBox[{"AxesLabel", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"\"\<n\>\"", ",", "\"\<x[n]\>\""}], "}"}]}], ",", 
   RowBox[{"PlotLabel", "\[Rule]", "\"\<Sampled signal\>\""}]}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.6902269944770193`*^9, 3.690226999214216*^9}, {
  3.6902270450060897`*^9, 3.6902270698638535`*^9}, {3.690229173855029*^9, 
  3.690229174478627*^9}, {3.6907075772984796`*^9, 3.6907076094322057`*^9}}],

Cell[BoxData[
 GraphicsBox[{
   {RGBColor[0.368417, 0.506779, 0.709798], PointSize[0.011000000000000001`], 
    AbsoluteThickness[1.6], {
     {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
      0.011000000000000001`], AbsoluteThickness[1.6], Opacity[0.2], 
      LineBox[{{{-9., -0.08953243657105342}, {-9., 
          0}}, {{-8., -0.5210734047212868}, {-8., 
          0}}, {{-7., -0.3434823906751604}, {-7., 
          0}}, {{-6., -0.35610549323157936`}, {-6., 
          0}}, {{-5., -0.2572420164134835}, {-5., 
          0}}, {{-4., -0.23235728839312747`}, {-4., 
          0}}, {{-3., -0.15658050639534093`}, {-3., 
          0}}, {{-2., -0.11526967595727867`}, {-2., 
          0}}, {{-1., -0.05245820623951756}, {-1., 0}}, {{0., 0.}, {
         0., 0}}, {{10., -0.5386560007947574}, {10., 0}}, {{
         11., -0.34548461291974575`}, {11., 0}}, {{
         12., -0.37424086300743603`}, {12., 0}}, {{
         13., -0.25898361384734714`}, {13., 0}}, {{
         14., -0.25075947561575584`}, {14., 0}}, {{
         15., -0.15800104898020612`}, {15., 0}}, {{
         16., -0.13406951999296815`}, {16., 0}}, {{
         17., -0.053383802003822346`}, {17., 0}}, {{
         18., -0.01941814137284494}, {18., 0}}},
       VertexColors->None]}, 
     {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
      0.011000000000000001`], AbsoluteThickness[1.6], Opacity[0.2], 
      LineBox[{{{-18., 0.01941814137284494}, {-18., 0}}, {{-17., 
         0.053383802003822346`}, {-17., 0}}, {{-16., 
         0.13406951999296815`}, {-16., 0}}, {{-15., 
         0.15800104898020612`}, {-15., 0}}, {{-14., 
         0.25075947561575584`}, {-14., 0}}, {{-13., 
         0.25898361384734714`}, {-13., 0}}, {{-12., 
         0.37424086300743603`}, {-12., 0}}, {{-11., 
         0.34548461291974575`}, {-11., 0}}, {{-10., 
         0.5386560007947574}, {-10., 0}}, {{1., 0.05245820623951756}, {
         1., 0}}, {{2., 0.11526967595727867`}, {2., 0}}, {{3., 
         0.15658050639534093`}, {3., 0}}, {{4., 0.23235728839312747`}, {
         4., 0}}, {{5., 0.2572420164134835}, {5., 0}}, {{6., 
         0.35610549323157936`}, {6., 0}}, {{7., 0.3434823906751604}, {
         7., 0}}, {{8., 0.5210734047212868}, {8., 0}}, {{9., 
         0.08953243657105342}, {9., 0}}},
       VertexColors->None]}}}, 
   {RGBColor[0.368417, 0.506779, 0.709798], PointSize[0.011000000000000001`], 
    AbsoluteThickness[1.6], {}, PointBox[CompressedData["
1:eJxTTMoPSmViYGBQBWIQDQFGB1i/T8mIfDTZHsI3PBBqUKMuH7oayjc4cNTv
4VIDzYNQvt6BOFfeuwmWR6B8nQM+i3ZXFPJcgPK1DjxRe81oMBnG1zhQnnbn
U//n61C+2oE7ewrqsmWuQfkqB94tSWtabfMQylc60POXgX3m6237IXyFA35/
mJQWrXkA5cscOPdizYS5v69C+RIH7h28tjHv1DUoX+TA3VMvzZeXXYDyBQ7E
xQeaPtp7FsrnOLAiVqT2CtcRKJ/hwMP/JQ4BTXuh/A/7/9pmBpy9vQomjwY+
2EPloe5lcIDqh/I5HKDmQ/kCDlD7oXwRB6j7oHwJB6j7oXwZB6j/oHwFB6j/
YeHjAA0fWPg5QMMP6l41B2j4QvkaDtDwh/K1HKDxA+XrOEDjD8rXc4DGL5Rv
4ACNfyjf0AGaPqB8Iwdo+tkPAGetuW8=
     "]], {}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->True,
  AxesLabel->{
    FormBox["\"n\"", TraditionalForm], 
    FormBox["\"x[n]\"", TraditionalForm]},
  AxesOrigin->{0, 0},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{
   "MessagesHead" -> DiscretePlot, "AxisPadding" -> Scaled[0.02], 
    "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "DefaultPlotStyle" -> {
      Directive[
       RGBColor[0.368417, 0.506779, 0.709798], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.880722, 0.611041, 0.142051], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.560181, 0.691569, 0.194885], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.922526, 0.385626, 0.209179], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.528488, 0.470624, 0.701351], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.772079, 0.431554, 0.102387], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.363898, 0.618501, 0.782349], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[1, 0.75, 0], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.647624, 0.37816, 0.614037], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.571589, 0.586483, 0.], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.915, 0.3325, 0.2125], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.40082222609352647`, 0.5220066643438841, 0.85], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.9728288904374106, 0.621644452187053, 0.07336199581899142], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.736782672705901, 0.358, 0.5030266573755369], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.28026441037696703`, 0.715, 0.4292089322474965], 
       AbsoluteThickness[1.6]]}, "DomainPadding" -> Scaled[0.02], 
    "PointSizeFunction" -> "SmallPointSize", "RangePadding" -> Scaled[0.05]},
  PlotLabel->FormBox["\"Sampled signal\"", TraditionalForm],
  PlotRange->{{-18, 18}, {-0.5386560007947574, 0.5386560007947574}},
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.02]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.7220793229252*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"plot1", "=", 
  RowBox[{"ListPlot", "[", 
   RowBox[{
    RowBox[{"Transpose", "[", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{
        SubscriptBox["f", "s"], "\[Omega]x"}], ",", " ", 
       RowBox[{"Abs", "[", "Ax", "]"}]}], "}"}], "]"}], ",", " ", 
    RowBox[{"PlotRange", "\[Rule]", "All"}], ",", " ", 
    RowBox[{"Filling", "\[Rule]", "Axis"}], ",", " ", 
    RowBox[{"AxesLabel", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{
      "\"\<\[Omega]\>\"", ",", " ", 
       "\"\<|X(\!\(\*SuperscriptBox[\(\[ExponentialE]\), \(\[ImaginaryJ]\
\[Omega]\)]\))|\>\""}], "}"}]}], ",", " ", 
    RowBox[{"Ticks", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{
          RowBox[{"-", "9"}], "\[Times]", "440", "Pi"}], ",", 
         RowBox[{
          RowBox[{"-", "7"}], "\[Times]", "440", "Pi"}], ",", 
         RowBox[{
          RowBox[{"-", "5"}], "\[Times]", "440", "Pi"}], ",", 
         RowBox[{
          RowBox[{"-", "3"}], "\[Times]", "440", "Pi"}], ",", 
         RowBox[{
          RowBox[{"-", "1"}], "\[Times]", "440", "Pi"}], ",", 
         RowBox[{"1", "\[Times]", "440", "Pi"}], ",", 
         RowBox[{"3", "\[Times]", "440", "Pi"}], ",", 
         RowBox[{"5", "\[Times]", "440", "Pi"}], ",", 
         RowBox[{"7", "\[Times]", "440", "Pi"}], ",", " ", 
         RowBox[{"9", "\[Times]", "440", "Pi"}]}], "}"}], ",", "Automatic"}], 
      "}"}]}], ",", 
    RowBox[{"PlotLabel", "\[Rule]", "\"\<Frequency spectrum of x[n]\>\""}]}], 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.690287419790968*^9, 3.690287463461635*^9}, {
  3.690287619959332*^9, 3.6902877155596733`*^9}, {3.6902877696899633`*^9, 
  3.690287777081457*^9}, {3.6902879057019444`*^9, 3.690287946230774*^9}, {
  3.690287982953032*^9, 3.690288145125984*^9}, {3.6902883674641438`*^9, 
  3.690288370985489*^9}, {3.6902884133215113`*^9, 3.6902884721822176`*^9}, {
  3.6902885406324778`*^9, 3.690288553335473*^9}, {3.6902885844886513`*^9, 
  3.6902885873965225`*^9}, {3.6902887017208147`*^9, 3.690288759238637*^9}, {
  3.6907076213724375`*^9, 3.6907076419607873`*^9}, {3.690784069027253*^9, 
  3.690784072140182*^9}, {3.690784376972767*^9, 3.6907843997097664`*^9}}],

Cell[BoxData[
 GraphicsBox[{{}, GraphicsComplexBox[CompressedData["
1:eJxTTMoPSmViYGAwA2IQPfPl9+oonxMHmFRUXXdKT7I/OC3rj/HMoweaT5zM
NYifYv/S+W4N77NDB5jnPIsw95huL/jR/+8zowMHWLZtfz5Vc7Z9oU3r74b/
uw6cZ7Pep+azAKp/K1T/Eqj6DVD1q6HyS6HyW6D8qVD+ERjfAZW/1AGmHmqe
A6p5Wx1g9kHd4wBzD9S9DjD3Qv3jAPMP1L8OMP9Cw8MBFh6w8GGAAlj4wPiw
8IHxYeED48PCB1X/VjT1G9Dkl6Lxp6LzHdDUw/mw8EGzD86HhQ+ae+F8WPig
+RfOh4UPGn80/eBIPwATh4L/
    "], {{{}, {}, {}, {}, 
      {RGBColor[0.368417, 0.506779, 0.709798], Opacity[0.3], LineBox[{19, 1}],
        LineBox[{20, 2}], LineBox[{21, 3}], LineBox[{22, 4}], 
       LineBox[{23, 5}], LineBox[{24, 6}], LineBox[{25, 7}], LineBox[{26, 8}],
        LineBox[{27, 9}], LineBox[{28, 10}], LineBox[{29, 11}], 
       LineBox[{30, 12}], LineBox[{31, 13}], LineBox[{32, 14}], 
       LineBox[{33, 15}], LineBox[{34, 16}], LineBox[{35, 17}], 
       LineBox[{36, 18}]}}, {{}, 
      {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
       0.012833333333333334`], AbsoluteThickness[1.6], 
       PointBox[{37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 
        52, 53, 54}]}, {}}}], {}, {}, {{}, {}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{
    FormBox["\"\[Omega]\"", TraditionalForm], 
    FormBox[
    "\"|X(\\!\\(\\*SuperscriptBox[\\(\[ExponentialE]\\), \\(\[ImaginaryJ]\
\[Omega]\\)]\\))|\"", TraditionalForm]},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
         Part[#, 1]], 
        (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
         Part[#, 1]], 
        (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
         Part[#, 2]]}& )}},
  PlotLabel->FormBox["\"Frequency spectrum of x[n]\"", TraditionalForm],
  PlotRange->{{-12440.706908215581`, 12440.706908215581`}, {
    0, 0.15915494309189535`}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.05]}},
  Ticks->{{{
      NCache[(-3960) Pi, -12440.706908215581`], 
      FormBox[
       RowBox[{
         RowBox[{"-", "3960"}], " ", "\[Pi]"}], TraditionalForm]}, {
      NCache[(-3080) Pi, -9676.105373056564], 
      FormBox[
       RowBox[{
         RowBox[{"-", "3080"}], " ", "\[Pi]"}], TraditionalForm]}, {
      NCache[(-2200) Pi, -6911.503837897545], 
      FormBox[
       RowBox[{
         RowBox[{"-", "2200"}], " ", "\[Pi]"}], TraditionalForm]}, {
      NCache[(-1320) Pi, -4146.9023027385265`], 
      FormBox[
       RowBox[{
         RowBox[{"-", "1320"}], " ", "\[Pi]"}], TraditionalForm]}, {
      NCache[(-440) Pi, -1382.300767579509], 
      FormBox[
       RowBox[{
         RowBox[{"-", "440"}], " ", "\[Pi]"}], TraditionalForm]}, {
      NCache[440 Pi, 1382.300767579509], 
      FormBox[
       RowBox[{"440", " ", "\[Pi]"}], TraditionalForm]}, {
      NCache[1320 Pi, 4146.9023027385265`], 
      FormBox[
       RowBox[{"1320", " ", "\[Pi]"}], TraditionalForm]}, {
      NCache[2200 Pi, 6911.503837897545], 
      FormBox[
       RowBox[{"2200", " ", "\[Pi]"}], TraditionalForm]}, {
      NCache[3080 Pi, 9676.105373056564], 
      FormBox[
       RowBox[{"3080", " ", "\[Pi]"}], TraditionalForm]}, {
      NCache[3960 Pi, 12440.706908215581`], 
      FormBox[
       RowBox[{"3960", " ", "\[Pi]"}], TraditionalForm]}}, 
    Automatic}]], "Output",
 CellChangeTimes->{3.722079332417255*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"y", "[", "n_", "]"}], "=", 
  RowBox[{"Plus", "@@", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"H", "[", 
      SuperscriptBox["E", 
       RowBox[{"\[ImaginaryJ]", " ", "\[Omega]x"}]], "]"}], " ", "X", " ", 
     SuperscriptBox["E", 
      RowBox[{"\[ImaginaryJ]", " ", "\[Omega]x", " ", "n"}]]}], 
    ")"}]}]}]], "Input",
 CellChangeTimes->{{3.690285298616932*^9, 3.690285371955103*^9}, {
  3.722079403867721*^9, 3.722079407735026*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"(", 
   RowBox[{"0.`", "\[VeryThinSpace]", "+", 
    RowBox[{"0.`", " ", "\[ImaginaryI]"}]}], ")"}], "-", 
  RowBox[{
   RowBox[{"(", 
    RowBox[{"0.00028325416681693384`", "\[VeryThinSpace]", "-", 
     RowBox[{"0.0005322860136145009`", " ", "\[ImaginaryI]"}]}], ")"}], " ", 
   SuperscriptBox["\[ExponentialE]", 
    RowBox[{
     RowBox[{"-", 
      FractionBox["11", "50"]}], " ", "\[ImaginaryI]", " ", "n", " ", 
     "\[Pi]"}]]}], "-", 
  RowBox[{
   RowBox[{"(", 
    RowBox[{"0.00028325416681693286`", "\[VeryThinSpace]", "+", 
     RowBox[{"0.0005322860136145013`", " ", "\[ImaginaryI]"}]}], ")"}], " ", 
   SuperscriptBox["\[ExponentialE]", 
    FractionBox[
     RowBox[{"11", " ", "\[ImaginaryI]", " ", "n", " ", "\[Pi]"}], "50"]]}], 
  "-", 
  RowBox[{
   RowBox[{"(", 
    RowBox[{"0.0008825242514179276`", "\[VeryThinSpace]", "-", 
     RowBox[{"0.0009458220030785911`", " ", "\[ImaginaryI]"}]}], ")"}], " ", 
   SuperscriptBox["\[ExponentialE]", 
    RowBox[{
     RowBox[{"-", 
      FractionBox["11", "25"]}], " ", "\[ImaginaryI]", " ", "n", " ", 
     "\[Pi]"}]]}], "-", 
  RowBox[{
   RowBox[{"(", 
    RowBox[{"0.0008825242514179281`", "\[VeryThinSpace]", "+", 
     RowBox[{"0.0009458220030785908`", " ", "\[ImaginaryI]"}]}], ")"}], " ", 
   SuperscriptBox["\[ExponentialE]", 
    FractionBox[
     RowBox[{"11", " ", "\[ImaginaryI]", " ", "n", " ", "\[Pi]"}], "25"]]}], 
  "-", 
  RowBox[{
   RowBox[{"(", 
    RowBox[{"0.002080135404805312`", "\[VeryThinSpace]", "-", 
     RowBox[{"0.0011656051511536826`", " ", "\[ImaginaryI]"}]}], ")"}], " ", 
   SuperscriptBox["\[ExponentialE]", 
    RowBox[{
     RowBox[{"-", 
      FractionBox["33", "50"]}], " ", "\[ImaginaryI]", " ", "n", " ", 
     "\[Pi]"}]]}], "-", 
  RowBox[{
   RowBox[{"(", 
    RowBox[{"0.002080135404805312`", "\[VeryThinSpace]", "+", 
     RowBox[{"0.0011656051511536826`", " ", "\[ImaginaryI]"}]}], ")"}], " ", 
   SuperscriptBox["\[ExponentialE]", 
    FractionBox[
     RowBox[{"33", " ", "\[ImaginaryI]", " ", "n", " ", "\[Pi]"}], "50"]]}], 
  "-", 
  RowBox[{
   RowBox[{"(", 
    RowBox[{"0.006393010574985019`", "\[VeryThinSpace]", "-", 
     RowBox[{"0.0012910074963131608`", " ", "\[ImaginaryI]"}]}], ")"}], " ", 
   SuperscriptBox["\[ExponentialE]", 
    RowBox[{
     RowBox[{"-", 
      FractionBox["22", "25"]}], " ", "\[ImaginaryI]", " ", "n", " ", 
     "\[Pi]"}]]}], "-", 
  RowBox[{
   RowBox[{"(", 
    RowBox[{"0.006393010574985019`", "\[VeryThinSpace]", "+", 
     RowBox[{"0.0012910074963131532`", " ", "\[ImaginaryI]"}]}], ")"}], " ", 
   SuperscriptBox["\[ExponentialE]", 
    FractionBox[
     RowBox[{"22", " ", "\[ImaginaryI]", " ", "n", " ", "\[Pi]"}], "25"]]}], 
  "+", 
  RowBox[{
   RowBox[{"(", 
    RowBox[{"0.0002806806031521042`", "\[VeryThinSpace]", "+", 
     RowBox[{"0.0039631408255394645`", " ", "\[ImaginaryI]"}]}], ")"}], " ", 
   SuperscriptBox["\[ExponentialE]", 
    RowBox[{
     RowBox[{"-", 
      FractionBox["99", "100"]}], " ", "\[ImaginaryI]", " ", "n", " ", 
     "\[Pi]"}]]}], "+", 
  RowBox[{
   RowBox[{"(", 
    RowBox[{"0.0002806806031521042`", "\[VeryThinSpace]", "-", 
     RowBox[{"0.0039631408255394645`", " ", "\[ImaginaryI]"}]}], ")"}], " ", 
   SuperscriptBox["\[ExponentialE]", 
    FractionBox[
     RowBox[{"99", " ", "\[ImaginaryI]", " ", "n", " ", "\[Pi]"}], 
     "100"]]}]}]], "Output",
 CellChangeTimes->{3.722079342005519*^9, 3.722079408302827*^9}]
}, Open  ]],

Cell[BoxData[{
 RowBox[{
  RowBox[{"\[Omega]y", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", 
      FractionBox[
       RowBox[{"99", "\[Pi]", " "}], "100"]}], ",", 
     RowBox[{"-", 
      FractionBox[
       RowBox[{"88", "\[Pi]", " "}], "100"]}], ",", 
     RowBox[{"-", 
      FractionBox[
       RowBox[{"66", "\[Pi]", " "}], "100"]}], ",", 
     RowBox[{"-", 
      FractionBox[
       RowBox[{"44", "\[Pi]", " "}], "100"]}], ",", 
     RowBox[{"-", 
      FractionBox[
       RowBox[{"22", "\[Pi]", " "}], "100"]}], ",", 
     FractionBox[
      RowBox[{"22", "\[Pi]", " "}], "100"], ",", 
     FractionBox[
      RowBox[{"44", "\[Pi]", " "}], "100"], ",", 
     FractionBox[
      RowBox[{"66", "\[Pi]", " "}], "100"], ",", 
     FractionBox[
      RowBox[{"88", "\[Pi]", " "}], "100"], ",", 
     FractionBox[
      RowBox[{"99", "\[Pi]", " "}], "100"]}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Ay", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{"0.0002806806031521044`", "\[VeryThinSpace]", "+", 
       RowBox[{"0.0039631408255394645`", " ", "\[ImaginaryI]"}]}], ")"}], ",", 
     RowBox[{"-", 
      RowBox[{"(", 
       RowBox[{"0.006393010574985013`", "\[VeryThinSpace]", "-", 
        RowBox[{"0.0012910074963131584`", " ", "\[ImaginaryI]"}]}], ")"}]}], 
     ",", 
     RowBox[{"-", 
      RowBox[{"(", 
       RowBox[{"0.0020801354048053107`", "\[VeryThinSpace]", "-", 
        RowBox[{"0.0011656051511536834`", " ", "\[ImaginaryI]"}]}], ")"}]}], 
     ",", 
     RowBox[{"-", 
      RowBox[{"(", 
       RowBox[{"0.0008825242514179283`", "\[VeryThinSpace]", "-", 
        RowBox[{"0.000945822003078591`", " ", "\[ImaginaryI]"}]}], ")"}]}], 
     ",", 
     RowBox[{"-", 
      RowBox[{"(", 
       RowBox[{"0.0002832541668169339`", "\[VeryThinSpace]", "-", 
        RowBox[{"0.000532286013614501`", " ", "\[ImaginaryI]"}]}], ")"}]}], 
     ",", 
     RowBox[{"-", 
      RowBox[{"(", 
       RowBox[{"0.0002832541668169338`", "\[VeryThinSpace]", "+", 
        RowBox[{"0.000532286013614501`", " ", "\[ImaginaryI]"}]}], ")"}]}], 
     ",", 
     RowBox[{"-", 
      RowBox[{"(", 
       RowBox[{"0.0008825242514179283`", "\[VeryThinSpace]", "+", 
        RowBox[{"0.0009458220030785912`", " ", "\[ImaginaryI]"}]}], ")"}]}], 
     ",", 
     RowBox[{"-", 
      RowBox[{"(", 
       RowBox[{"0.0020801354048053107`", "\[VeryThinSpace]", "+", 
        RowBox[{"0.0011656051511536834`", " ", "\[ImaginaryI]"}]}], ")"}]}], 
     ",", 
     RowBox[{"-", 
      RowBox[{"(", 
       RowBox[{"0.006393010574985013`", "\[VeryThinSpace]", "+", 
        RowBox[{"0.0012910074963131584`", " ", "\[ImaginaryI]"}]}], ")"}]}], 
     ",", 
     RowBox[{"(", 
      RowBox[{"0.0002806806031521044`", "\[VeryThinSpace]", "-", 
       RowBox[{"0.0039631408255394645`", " ", "\[ImaginaryI]"}]}], ")"}]}], 
    "}"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.690289719512246*^9, 3.6902900702620354`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"plot2", "=", 
  RowBox[{"ListPlot", "[", 
   RowBox[{
    RowBox[{"Transpose", "[", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{
        SubscriptBox["f", "s"], "\[Omega]y"}], ",", " ", 
       RowBox[{"Abs", "[", "Ay", "]"}]}], "}"}], "]"}], ",", " ", 
    RowBox[{"PlotRange", "\[Rule]", "All"}], ",", " ", 
    RowBox[{"Filling", "\[Rule]", "Axis"}], ",", " ", 
    RowBox[{"AxesLabel", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{
      "\"\<\[Omega]\>\"", ",", " ", 
       "\"\<|X(\!\(\*SuperscriptBox[\(\[ExponentialE]\), \(\[ImaginaryJ]\
\[Omega]\)]\))|\>\""}], "}"}]}], ",", " ", 
    RowBox[{"Ticks", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{
          RowBox[{"-", "9"}], "\[Times]", "440", "Pi"}], ",", 
         RowBox[{
          RowBox[{"-", "7"}], "\[Times]", "440", "Pi"}], ",", 
         RowBox[{
          RowBox[{"-", "5"}], "\[Times]", "440", "Pi"}], ",", 
         RowBox[{
          RowBox[{"-", "3"}], "\[Times]", "440", "Pi"}], ",", 
         RowBox[{
          RowBox[{"-", "1"}], "\[Times]", "440", "Pi"}], ",", 
         RowBox[{"1", "\[Times]", "440", "Pi"}], ",", 
         RowBox[{"3", "\[Times]", "440", "Pi"}], ",", 
         RowBox[{"5", "\[Times]", "440", "Pi"}], ",", 
         RowBox[{"7", "\[Times]", "440", "Pi"}], ",", " ", 
         RowBox[{"9", "\[Times]", "440", "Pi"}]}], "}"}], ",", "Automatic"}], 
      "}"}]}], ",", 
    RowBox[{"PlotLabel", "\[Rule]", "\"\<Frequency spectrum of y[n]\>\""}], 
    ",", 
    RowBox[{"PlotStyle", "\[Rule]", "Green"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.6902901007263002`*^9, 3.690290103877923*^9}, {
  3.69070765121235*^9, 3.6907076602448673`*^9}, {3.6907840158333273`*^9, 
  3.690784043531152*^9}, {3.6907840773881483`*^9, 3.690784080011903*^9}, {
  3.6907843880584435`*^9, 3.6907844034655905`*^9}}],

Cell[BoxData[
 GraphicsBox[{{}, GraphicsComplexBox[CompressedData["
1:eJxTTMoPSmViYGCQA2IQPfPl9+oonxMHlFgUbQTcCuwPTsv6Yzzz6IHDUvda
Hmyrshf86P/3mdGBA7sCI+t6O5Kh8lsP/G+7fuy0YSiUv/TATeO5e/8fdIbx
HVD5Wx1g6qHmOaCad9QBZh/UPQ4w98DcxwAFMPfB+DD3ocpvReMvRec7oKmH
82HuQ7MPzoe5D40/aMMPAFdb3Hw=
    "], {{{}, {}, {}, {}, 
      {RGBColor[0, 1, 0], Opacity[0.3], LineBox[{11, 1}], LineBox[{12, 2}], 
       LineBox[{13, 3}], LineBox[{14, 4}], LineBox[{15, 5}], LineBox[{16, 6}],
        LineBox[{17, 7}], LineBox[{18, 8}], LineBox[{19, 9}], 
       LineBox[{20, 10}]}}, {{}, 
      {RGBColor[0, 1, 0], PointSize[0.012833333333333334`], AbsoluteThickness[
       1.6], PointBox[{21, 22, 23, 24, 25, 26, 27, 28, 29, 
        30}]}, {}}}], {}, {}, {{}, {}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{
    FormBox["\"\[Omega]\"", TraditionalForm], 
    FormBox[
    "\"|X(\\!\\(\\*SuperscriptBox[\\(\[ExponentialE]\\), \\(\[ImaginaryJ]\
\[Omega]\\)]\\))|\"", TraditionalForm]},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
         Part[#, 1]], 
        (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
         Part[#, 1]], 
        (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
         Part[#, 2]]}& )}},
  PlotLabel->FormBox["\"Frequency spectrum of y[n]\"", TraditionalForm],
  PlotRange->{{-12440.706908215581`, 12440.706908215581`}, {
    0, 0.006522061374090784}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.05]}},
  Ticks->{{{
      NCache[(-3960) Pi, -12440.706908215581`], 
      FormBox[
       RowBox[{
         RowBox[{"-", "3960"}], " ", "\[Pi]"}], TraditionalForm]}, {
      NCache[(-3080) Pi, -9676.105373056564], 
      FormBox[
       RowBox[{
         RowBox[{"-", "3080"}], " ", "\[Pi]"}], TraditionalForm]}, {
      NCache[(-2200) Pi, -6911.503837897545], 
      FormBox[
       RowBox[{
         RowBox[{"-", "2200"}], " ", "\[Pi]"}], TraditionalForm]}, {
      NCache[(-1320) Pi, -4146.9023027385265`], 
      FormBox[
       RowBox[{
         RowBox[{"-", "1320"}], " ", "\[Pi]"}], TraditionalForm]}, {
      NCache[(-440) Pi, -1382.300767579509], 
      FormBox[
       RowBox[{
         RowBox[{"-", "440"}], " ", "\[Pi]"}], TraditionalForm]}, {
      NCache[440 Pi, 1382.300767579509], 
      FormBox[
       RowBox[{"440", " ", "\[Pi]"}], TraditionalForm]}, {
      NCache[1320 Pi, 4146.9023027385265`], 
      FormBox[
       RowBox[{"1320", " ", "\[Pi]"}], TraditionalForm]}, {
      NCache[2200 Pi, 6911.503837897545], 
      FormBox[
       RowBox[{"2200", " ", "\[Pi]"}], TraditionalForm]}, {
      NCache[3080 Pi, 9676.105373056564], 
      FormBox[
       RowBox[{"3080", " ", "\[Pi]"}], TraditionalForm]}, {
      NCache[3960 Pi, 12440.706908215581`], 
      FormBox[
       RowBox[{"3960", " ", "\[Pi]"}], TraditionalForm]}}, 
    Automatic}]], "Output",
 CellChangeTimes->{3.722079361004286*^9, 3.722079417101561*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"DiscretePlot", "[", 
  RowBox[{
   RowBox[{"Abs", "[", " ", 
    RowBox[{"y", "[", "n", "]"}], "]"}], " ", ",", 
   RowBox[{"{", 
    RowBox[{"n", ",", " ", 
     RowBox[{"-", "18"}], ",", " ", "18"}], "}"}], ",", 
   RowBox[{"PlotLabel", "\[Rule]", "\"\<Sampled output y[n]\>\""}], ",", 
   RowBox[{"AxesLabel", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"\"\<n\>\"", ",", "\"\<y[n]\>\""}], "}"}]}]}], "]"}]], "Input",
 CellChangeTimes->{{3.6902910957361774`*^9, 3.690291095800186*^9}, {
  3.6902915136565657`*^9, 3.690291595031254*^9}, {3.690307726389046*^9, 
  3.6903077889925346`*^9}, {3.6903078649469137`*^9, 3.6903078683059196`*^9}, {
  3.690307975344786*^9, 3.6903079885288353`*^9}, {3.690308058369016*^9, 
  3.6903080744175625`*^9}, {3.6903081317289667`*^9, 3.6903081851219826`*^9}, {
  3.690309078833703*^9, 3.6903090991703925`*^9}, {3.6903093400197897`*^9, 
  3.6903094636169953`*^9}, {3.6903107435576725`*^9, 3.690310747954733*^9}, {
  3.69070767068398*^9, 3.690707714068108*^9}, {3.722079437976375*^9, 
  3.7220794986200733`*^9}}],

Cell[BoxData[
 GraphicsBox[{
   {RGBColor[0.368417, 0.506779, 0.709798], PointSize[0.011000000000000001`], 
    AbsoluteThickness[1.6], {
     {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
      0.011000000000000001`], AbsoluteThickness[1.6], Opacity[0.2], LineBox[{},
       VertexColors->None]}, 
     {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
      0.011000000000000001`], AbsoluteThickness[1.6], Opacity[0.2], 
      LineBox[{{{-18., 0.009917218239250675}, {-18., 0}}, {{-17., 
         0.014922085134857536`}, {-17., 0}}, {{-16., 
         0.007211250650716179}, {-16., 0}}, {{-15., 
         0.004467488337657387}, {-15., 0}}, {{-14., 
         0.0021644200500798355`}, {-14., 0}}, {{-13., 
         0.00043746205286362137`}, {-13., 0}}, {{-12., 
         0.0017101355186014482`}, {-12., 0}}, {{-11., 
         0.0038734450686682595`}, {-11., 0}}, {{-10., 
         0.007449616716232049}, {-10., 0}}, {{-9., 
         0.020154983334099513`}, {-9., 0}}, {{-8., 
         0.022064673635270354`}, {-8., 0}}, {{-7., 
         0.012196079998021823`}, {-7., 0}}, {{-6., 
         0.008583269351240723}, {-6., 0}}, {{-5., 
         0.005541881372109459}, {-5., 0}}, {{-4., 
         0.0031295407634030067`}, {-4., 0}}, {{-3., 
         0.0003197823759261481}, {-3., 0}}, {{-2., 
         0.0025047866489180328`}, {-2., 0}}, {{-1., 
         0.006784993733538629}, {-1., 0}}, {{0., 0.018716487589746176`}, {
         0., 0}}, {{1., 0.018343094407836318`}, {1., 0}}, {{2., 
         0.007487658765908296}, {2., 0}}, {{3., 0.004223321275272444}, {
         3., 0}}, {{4., 0.0015985165712719598`}, {4., 0}}, {{5., 
         0.00035686804614576905`}, {5., 0}}, {{6., 0.002675011018004309}, {
         6., 0}}, {{7., 0.004968371577325402}, {7., 0}}, {{8., 
         0.008649298102645399}, {8., 0}}, {{9., 0.018498013482686874`}, {
         9., 0}}, {{10., 0.01487007160926541}, {10., 0}}, {{11., 
         0.002377607839541754}, {11., 0}}, {{12., 0.001201084668745695}, {
         12., 0}}, {{13., 0.004168127332728638}, {13., 0}}, {{14., 
         0.006452508723739288}, {14., 0}}, {{15., 0.009063900597483365}, {
         15., 0}}, {{16., 0.011583317308776209`}, {16., 0}}, {{17., 
         0.015339080457462363`}, {17., 0}}, {{18., 0.023823306321680122`}, {
         18., 0}}},
       VertexColors->None]}}}, 
   {RGBColor[0.368417, 0.506779, 0.709798], PointSize[0.011000000000000001`], 
    AbsoluteThickness[1.6], {}, PointBox[CompressedData["
1:eJxTTMoPSmViYGBQBWIQDQFGB+b+4Wyo8m+xh/AND8xpVo6t6O+D8g0OLAwI
ie7urIXy9Q7cCH7s0uBTBOXrHOjr7NOS250I5WsdSJt61TR1tQ2Ur3FAcdZH
9issMVC+2oHXayb+Md6dD+WrHFjbPd+ptrkOylc64PFUlLNp8RQoX+HAafsl
evIzpkH5MgfePL6h6vSrA8qXOKCp5/BSakojlC9yYLk1W4no5jIoX+CA3N64
dPnFmVA+x4ECrw03+L6aQPkMBzau3iT+uiUFyv+wf8dstsdTTlXD5BkiTRIs
srQmw+Tt42yirTpOTILJO3B8i5NIXA1zP4fDvXfyOpU+hTD7HW5MD5ZcZRAF
c59DzIrAaQ7J5jD3O0QbXJ/1/GUqzH8ONyTYxLdHlsD87yCy9r7yzm0w/yk5
HHx0erXKR5j9Kg6q/xitjEtg8aXmcOWQda1JVTIs/B1k1p27vm1tMCx+HCp1
3TRnCsHcp+OgZKso/ym3Cha/Dsua5FUlJjTB4t8hYb9mx78d7bD04XD8R1C7
RFY/lG/k8IlNmU05dYY9AKI/nDQ=
     "]], {}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->True,
  AxesLabel->{
    FormBox["\"n\"", TraditionalForm], 
    FormBox["\"y[n]\"", TraditionalForm]},
  AxesOrigin->{0, 0},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{
   "MessagesHead" -> DiscretePlot, "AxisPadding" -> Scaled[0.02], 
    "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "DefaultPlotStyle" -> {
      Directive[
       RGBColor[0.368417, 0.506779, 0.709798], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.880722, 0.611041, 0.142051], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.560181, 0.691569, 0.194885], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.922526, 0.385626, 0.209179], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.528488, 0.470624, 0.701351], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.772079, 0.431554, 0.102387], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.363898, 0.618501, 0.782349], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[1, 0.75, 0], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.647624, 0.37816, 0.614037], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.571589, 0.586483, 0.], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.915, 0.3325, 0.2125], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.40082222609352647`, 0.5220066643438841, 0.85], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.9728288904374106, 0.621644452187053, 0.07336199581899142], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.736782672705901, 0.358, 0.5030266573755369], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.28026441037696703`, 0.715, 0.4292089322474965], 
       AbsoluteThickness[1.6]]}, "DomainPadding" -> Scaled[0.02], 
    "PointSizeFunction" -> "SmallPointSize", "RangePadding" -> Scaled[0.05]},
  PlotLabel->FormBox["\"Sampled output y[n]\"", TraditionalForm],
  PlotRange->{{-18, 18}, {0, 0.023823306321680122`}},
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.02]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{
  3.722079369564741*^9, {3.722079413644408*^9, 3.722079499423852*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"y", "[", "t", "]"}], " ", ",", 
   RowBox[{"{", 
    RowBox[{"t", ",", " ", 
     RowBox[{"-", "18"}], ",", " ", "18"}], "}"}], ",", 
   RowBox[{"PlotLabel", "\[Rule]", "\"\<Continous output y(t)\>\""}], ",", 
   RowBox[{"AxesLabel", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"\"\<t\>\"", ",", "\"\<y(t)\>\""}], "}"}]}]}], "]"}]], "Input",
 CellChangeTimes->{{3.690291112518674*^9, 3.6902911665669694`*^9}, {
  3.690291253736405*^9, 3.6902912590961456`*^9}, {3.6903086330574665`*^9, 
  3.6903086375855446`*^9}, {3.69031067598796*^9, 3.690310690866826*^9}, {
  3.690310784962943*^9, 3.6903108236347375`*^9}, {3.6907077210382175`*^9, 
  3.690707748746501*^9}}],

Cell[BoxData[
 GraphicsBox[{{{}, {}, 
    TagBox[
     {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
      1.], LineBox[CompressedData["
1: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
       "]], 
      LineBox[CompressedData["
1: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
Fyxo4AEKYebBFp2G0BUduvP6qvh/57VoQA==
       "]], LineBox[CompressedData["
1:eJwBAQT++yFib1JlAgAAAD8AAAACAAAAhVAhm15MBUCUYXIFudEzP4LPEAeE
ZAVALK2kzIloQD9/TgBzqXwFQJTbxHmqzkY/fM3v3s6UBUCk57opghlNP3bL
zrYZxQVAIbhN51irVD9qx4xmryUGQOGmkYQDEWA/Z0Z80tQ9BkDVPqFNHmlh
P2TFaz76VQZA8KnNQH63Yj9ew0oWRYYGQLxJT9HpNWU/W0I6gmqeBkA3P5yF
bmVmP1jBKe6PtgZA1/Q8oCqKZz9SvwjG2uYGQL0JZClssmk/Tz74MQD/BkCY
egpajrVqP0y9550lFwdAeCOediGtaz9Gu8Z1cEcHQIZ8rTUFeW0/Qzq24ZVf
B0AfhbhbFk1uP0C5pU27dwdAhJHIaRkVbz85t4QlBqgHQA7wyV1TQHA/NjZ0
kSvAB0CosnFKCpJwPzK1Y/1Q2AdAInZktZ3dcD8vNFNpdvAHQH/mzdQLI3E/
LLNC1ZsICEAYk6HyVGJxPykyMkHBIAhA/veiZHubcT8msSGt5jgIQPiKzoOD
znE/IzARGQxRCEC12iijc/txPyCvAIUxaQhAEPv4BVQicj8dLvDwVoEIQJ2h
c9UuQ3I/Gq3fXHyZCEAAfdwVEF5yPxcsz8ihsQhADXojmwVzcj8Uq740x8kI
QG3FA/0egnI/ESquoOzhCEAOgKqKbYtyPw6pnQwS+ghABDTrPQSPcj8LKI14
NxIJQIw1CK73jHI/CKd85FwqCUDaMxUCXoVyPwUmbFCCQglAolH64k54cj8C
pVu8p1oJQI4yHm3jZXI//yNLKM1yCUDheL0hNk5yP/yiOpTyiglAVj7212Ix
cj/5ISoAGKMJQKIejq2GD3I/9qAZbD27CUC0b3n3v+hxP/MfCdhi0wlAZk4q
Mi69cT/wnvhDiOsJQJIlrvHxjHE/7R3or60DCkA/WKDRLFhxP+qc1xvTGwpA
07b4ZAEfcT/kmrbzHUwKQGmol2QGoHA/4RmmX0NkCkAYoWc4gFpwP96Ylcto
fApAwLe5bSYRcD/XlnSjs6wKQMdt8LAk524/qo0qLznDCkBCLumJzEpuP3yE
4Lq+2QpATZkDYNiobT8gckzSyQYLQCWOyW4iVWw/ak0kAeBgC0CpvIFbxHVp
P/wD1F4MFQxAbUIVotcRYz/O+onqkSsMQJP0SijuOmI/ofE/dhdCDEDvY5AP
jWJhP0bfq40ibwxAZJmIocJcXz+PuoO8OMkMQKA6FWpEflg/InEzGmV9DUBw
Biepgt5FP/Rn6aXqkw1Arme3HKSTQj/GXp8xcKoNQJhS3jetoT4/a0wLSXvX
DUDIBjxsaMwxPz5DwdQA7g1AAIM908r+Jj+gdLLwgfINQFhJnEqnfiQ/lsOp
DQ==
       "]], LineBox[CompressedData["
1:eJwVV3c81e8Xl2jI3tt1bde4V4OMnlNJSRLJ3jvJHpnZZN97ZVVIRSV9JcmI
R1YRkkglUkZCpZQk8bu/vz6v83o/zznvc57z+pz3kXbxM3NnZmJi4t3MxPT/
75j3xaOahpyw8tc0sEVHGVsLmGRfduCExUCpu29uauB15qbyinROSGzKW63f
vA8fHqcNN09zgpPYYebRO4ZYdPiI88E1Tgh+O5x+j3wMLzxbX3jKywWENNa1
o9eP45wGb5YhxAVOyoszA3dMsUs1IcfaggushpwTfPvM8O6KV2LvfbjA3XjU
5sz0Sfw298DOuUIusOgayZT5ewrfSV9p8avmgrLuGN6HKxY4Jv7u0V9dXJB6
JZfd5osllvEXdWH6yQWK7S9bSpqsceTO2eUDrNwQwbngpHHRBk+ptT9K4uYG
Nz4p1Vp3W1wnF35khwI3uDyFrIR5O8x8iJawfyc36P9+s7f5P3ts7FbZEoa4
Id5l+artaQdckNDxp8qIGzhjtbu8hR3xVNnYrilLbkh1tpv688gRk9uW/UTd
uCHGw+lOJskJR37gqjzhzw25h4goMMgJ8xIOSDencsPe+vVHs0tO2AHZ2i3l
csNascznPBVnfMshOF/pKjdEffQxNnVyxj+jMwcdq7ihzJFNUCnbGcOVco68
Bm54q6iZQm5wxhmP8JHeTm7gszWajxh3xiOjrxOYB7mBt70mVnzDGRP/fm/R
GucGdolBT2UxF+wrumPVd44blsuncho1XHDjXtndN5a5Qb529NbkIRfMaq3n
P8rMAwFPDNmbzV3wiXMWlTxcPFBQ7lLp4OiCL+f7zRwW44HQeyLMH9xd8Gxd
qnSMAg9IXPPcZO/lgne+umpXu5MHHB60rs97uOCYX435c4gHzFbayyqcXXAP
/9Ag4RgPKAeovL5l5YIFd33hsLTiAeYz7E3sx1yw88kthpluPDAobps6p+OC
7wRKJbb788C1gneZ9ooueIWqhf9E8cDArTOisTwuWP+e6ar6BR7w4Kry9fnt
jLMHvHd7XOSBCvLOu7pvnfHbbwn+l6/ygL+cyAu2Rmcsz3WlcrCKB9qLxPIW
85xxoFrdzLZGHvj2fHfI1gBn3Gz8XBp18cAi/SnN64gzNs/YVFA5zgO/ue+r
+3xzwqWVoi8/zPGAriVhbh92wvM9OzmFf/PArkeFBx9lOOH47R6JiVy8kLdu
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
JdxZ2tigQIf/3jYZ9wL8P1Qfp6s=
       "]]},
     Annotation[#, "Charting`Private`Tag$4185#1"]& ]}, {}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{
    FormBox["\"t\"", TraditionalForm], 
    FormBox["\"y(t)\"", TraditionalForm]},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{
   "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
         Part[#, 1]], 
        (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
         Part[#, 1]], 
        (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
         Part[#, 2]]}& )}},
  PlotLabel->FormBox["\"Continous output y(t)\"", TraditionalForm],
  PlotRange->{{-18, 18}, {-0.024516877488803292`, 0.024521738118807885`}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.722079519228669*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Show", "[", 
  RowBox[{"{", 
   RowBox[{"plot1", ",", " ", "plot2"}], "}"}], "]"}]], "Input",
 CellChangeTimes->{{3.6907841021175585`*^9, 3.6907841174944963`*^9}}],

Cell[BoxData[
 GraphicsBox[{{{}, GraphicsComplexBox[CompressedData["
1:eJxTTMoPSmViYGAwA2IQPfPl9+oonxMHmFRUXXdKT7I/OC3rj/HMoweaT5zM
NYifYv/S+W4N77NDB5jnPIsw95huL/jR/+8zowMHWLZtfz5Vc7Z9oU3r74b/
uw6cZ7Pep+azAKp/K1T/Eqj6DVD1q6HyS6HyW6D8qVD+ERjfAZW/1AGmHmqe
A6p5Wx1g9kHd4wBzD9S9DjD3Qv3jAPMP1L8OMP9Cw8MBFh6w8GGAAlj4wPiw
8IHxYeED48PCB1X/VjT1G9Dkl6Lxp6LzHdDUw/mw8EGzD86HhQ+ae+F8WPig
+RfOh4UPGn80/eBIPwATh4L/
     "], {{{}, {}, {}, {}, 
       {RGBColor[0.368417, 0.506779, 0.709798], Opacity[0.3], 
        LineBox[{19, 1}], LineBox[{20, 2}], LineBox[{21, 3}], 
        LineBox[{22, 4}], LineBox[{23, 5}], LineBox[{24, 6}], 
        LineBox[{25, 7}], LineBox[{26, 8}], LineBox[{27, 9}], 
        LineBox[{28, 10}], LineBox[{29, 11}], LineBox[{30, 12}], 
        LineBox[{31, 13}], LineBox[{32, 14}], LineBox[{33, 15}], 
        LineBox[{34, 16}], LineBox[{35, 17}], LineBox[{36, 18}]}}, {{}, 
       {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
        0.012833333333333334`], AbsoluteThickness[1.6], 
        PointBox[{37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 
         52, 53, 54}]}, {}}}], {}, {}, {{}, {}}}, {{}, 
    GraphicsComplexBox[CompressedData["
1:eJxTTMoPSmViYGCQA2IQPfPl9+oonxMHlFgUbQTcCuwPTsv6Yzzz6IHDUvda
Hmyrshf86P/3mdGBA7sCI+t6O5Kh8lsP/G+7fuy0YSiUv/TATeO5e/8fdIbx
HVD5Wx1g6qHmOaCad9QBZh/UPQ4w98DcxwAFMPfB+DD3ocpvReMvRec7oKmH
82HuQ7MPzoe5D40/aMMPAFdb3Hw=
     "], {{{}, {}, {}, {}, 
       {RGBColor[0, 1, 0], Opacity[0.3], LineBox[{11, 1}], LineBox[{12, 2}], 
        LineBox[{13, 3}], LineBox[{14, 4}], LineBox[{15, 5}], 
        LineBox[{16, 6}], LineBox[{17, 7}], LineBox[{18, 8}], 
        LineBox[{19, 9}], LineBox[{20, 10}]}}, {{}, 
       {RGBColor[0, 1, 0], PointSize[0.012833333333333334`], 
        AbsoluteThickness[1.6], 
        PointBox[{21, 22, 23, 24, 25, 26, 27, 28, 29, 
         30}]}, {}}}], {}, {}, {{}, {}}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{
    FormBox["\"\[Omega]\"", TraditionalForm], 
    FormBox[
    "\"|X(\\!\\(\\*SuperscriptBox[\\(\[ExponentialE]\\), \\(\[ImaginaryJ]\
\[Omega]\\)]\\))|\"", TraditionalForm]},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
         Part[#, 1]], 
        (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
         Part[#, 1]], 
        (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
         Part[#, 2]]}& )}},
  PlotLabel->FormBox["\"Frequency spectrum of x[n]\"", TraditionalForm],
  PlotRange->{{-12440.706908215581`, 12440.706908215581`}, {
    0, 0.15915494309189535`}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.05]}},
  Ticks->{{{
      NCache[(-3960) Pi, -12440.706908215581`], 
      FormBox[
       RowBox[{
         RowBox[{"-", "3960"}], " ", "\[Pi]"}], TraditionalForm]}, {
      NCache[(-3080) Pi, -9676.105373056564], 
      FormBox[
       RowBox[{
         RowBox[{"-", "3080"}], " ", "\[Pi]"}], TraditionalForm]}, {
      NCache[(-2200) Pi, -6911.503837897545], 
      FormBox[
       RowBox[{
         RowBox[{"-", "2200"}], " ", "\[Pi]"}], TraditionalForm]}, {
      NCache[(-1320) Pi, -4146.9023027385265`], 
      FormBox[
       RowBox[{
         RowBox[{"-", "1320"}], " ", "\[Pi]"}], TraditionalForm]}, {
      NCache[(-440) Pi, -1382.300767579509], 
      FormBox[
       RowBox[{
         RowBox[{"-", "440"}], " ", "\[Pi]"}], TraditionalForm]}, {
      NCache[440 Pi, 1382.300767579509], 
      FormBox[
       RowBox[{"440", " ", "\[Pi]"}], TraditionalForm]}, {
      NCache[1320 Pi, 4146.9023027385265`], 
      FormBox[
       RowBox[{"1320", " ", "\[Pi]"}], TraditionalForm]}, {
      NCache[2200 Pi, 6911.503837897545], 
      FormBox[
       RowBox[{"2200", " ", "\[Pi]"}], TraditionalForm]}, {
      NCache[3080 Pi, 9676.105373056564], 
      FormBox[
       RowBox[{"3080", " ", "\[Pi]"}], TraditionalForm]}, {
      NCache[3960 Pi, 12440.706908215581`], 
      FormBox[
       RowBox[{"3960", " ", "\[Pi]"}], TraditionalForm]}}, 
    Automatic}]], "Output",
 CellChangeTimes->{3.722079532985409*^9}]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Part 2", "Section",
 CellChangeTimes->{{3.719892062954335*^9, 3.7198920645211363`*^9}, {
  3.721381017940072*^9, 3.721381018010539*^9}},
 ExpressionUUID -> "f8d8dae0-4b4d-4b40-8ac1-e0ed47438e11"],

Cell[CellGroupData[{

Cell["Assignment", "Subsection",
 CellChangeTimes->{{3.719893143271935*^9, 
  3.7198931581801643`*^9}},ExpressionUUID->"03978c21-bfef-4b9b-a968-\
6f723c979e3f"],

Cell["Introduce the following signal", "Text",ExpressionUUID->"b75931fd-fc5d-4be7-9104-7648840bc59d"],

Cell[BoxData[
 FormBox[
  RowBox[{
   RowBox[{"x", "(", "t", ")"}], "=", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      RowBox[{
       SuperscriptBox["\[ExponentialE]", 
        RowBox[{
         RowBox[{"-", "50"}], " ", "t"}]], " ", 
       RowBox[{"cos", "(", 
        RowBox[{"2", " ", "\[Pi]", " ", "100", " ", "t"}], ")"}]}], "+", 
      RowBox[{
       SuperscriptBox["\[ExponentialE]", 
        RowBox[{
         RowBox[{"-", "75"}], " ", "t"}]], " ", 
       RowBox[{"cos", "(", 
        RowBox[{"2", " ", "\[Pi]", " ", "200", " ", "t"}], ")"}]}], "+", 
      RowBox[{
       SuperscriptBox["\[ExponentialE]", 
        RowBox[{
         RowBox[{"-", "100"}], " ", "t"}]], " ", 
       RowBox[{"cos", "(", 
        RowBox[{"2", " ", "\[Pi]", " ", "300", " ", "t"}], ")"}]}]}], ")"}], 
    RowBox[{"u", "(", "t", ")"}]}]}], TraditionalForm]], "DisplayFormula",Expr\
essionUUID->"a2ba77bf-9a3b-4f67-bb85-fa55868c3e4b"],

Cell[CellGroupData[{

Cell[TextData[{
 "Make a plot of ",
 Cell[BoxData[
  FormBox[
   RowBox[{"x", "(", "t", ")"}], TraditionalForm]],ExpressionUUID->
  "cc958d08-adaa-42da-a065-c3cea395536c"],
 "."
}], "Item",ExpressionUUID->"ec39a7e2-c3d3-411f-bbd8-d76ec83fad01"],

Cell[TextData[{
 "Compute the spectrum ",
 Cell[BoxData[
  FormBox[
   RowBox[{"X", "(", 
    RowBox[{"j", " ", "\[Omega]"}], ")"}], TraditionalForm]],ExpressionUUID->
  "502bb53b-7ad4-4d2a-b8e4-165ba19d2668"],
 "."
}], "Item",ExpressionUUID->"89bac823-4d32-4f06-b19b-a733a6faa8ff"],

Cell[TextData[{
 "Plot ",
 Cell[BoxData[
  FormBox[
   TemplateBox[{RowBox[{"X", "(", 
       RowBox[{"j", " ", "\[Omega]"}], ")"}]},
    "Abs"], TraditionalForm]],ExpressionUUID->
  "2ae8ffa0-d264-4a24-83fe-98cb25eee35b"],
 " and ",
 Cell[BoxData[
  FormBox[
   RowBox[{"arg", "(", 
    RowBox[{"X", "(", 
     RowBox[{"j", " ", "\[Omega]"}], ")"}], ")"}], TraditionalForm]],
  ExpressionUUID->"5f44cc4f-4bae-479b-a2f7-dda115daf15a"],
 "."
}], "Item",ExpressionUUID->"fd423fa0-78c2-42e0-9dae-23ed6c92a7c9"],

Cell["\<\
There are some distinct local maxima and minima in the spectrum. Solve for \
these frequencies.\
\>", "Item",ExpressionUUID->"17e4e288-921e-4a91-a829-2aae2fc63acf"],

Cell[TextData[{
 "Can you motivate the local maxima from the expression ",
 Cell[BoxData[
  FormBox[
   RowBox[{"x", "(", "t", ")"}], TraditionalForm]],ExpressionUUID->
  "c6bb54a0-3394-42d3-ad3c-83023b2f564f"],
 "?"
}], "Item",
 UnderoverscriptBoxOptions->{
 LimitsPositioning->
  False},ExpressionUUID->"9df8007e-b16e-4843-aa9f-e21032ab9cd9"]
}, Open  ]]
}, Open  ]],

Cell["Discussion", "Subsection",
 CellChangeTimes->{{3.719893143271935*^9, 
  3.7198931740773067`*^9}},ExpressionUUID->"b5f48795-8e6a-4d90-af2d-\
562c043527a0"],

Cell[CellGroupData[{

Cell["Code", "Subsection",
 CellChangeTimes->{{3.719893143271935*^9, 3.719893177067865*^9}},
 ExpressionUUID -> "5e6e16a3-a8ed-4e01-bfcc-ae0d0d874e4a"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"ClearAll", "[", "\"\<`*\>\"", "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"SetOptions", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"FourierTransform", ",", "InverseFourierTransform"}], "}"}], ",", 
    RowBox[{"FourierParameters", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{"1", ",", 
       RowBox[{"-", "1"}]}], "}"}]}]}], "]"}], ";"}]}], "Input",
 CellChangeTimes->{{3.7220795507354183`*^9, 
  3.722079573103015*^9}},ExpressionUUID->"7b35aa72-691f-4fc6-a640-\
744abb640545"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"x", "[", "t_", "]"}], "=", 
  RowBox[{
   RowBox[{"(", 
    RowBox[{
     RowBox[{
      SuperscriptBox["\[ExponentialE]", 
       RowBox[{
        RowBox[{"-", "50"}], " ", "t"}]], 
      RowBox[{"Cos", "[", 
       RowBox[{"2", "\[Pi]", " ", "100", "t"}], "]"}]}], "+", 
     RowBox[{
      SuperscriptBox["\[ExponentialE]", 
       RowBox[{
        RowBox[{"-", "75"}], " ", "t"}]], 
      RowBox[{"Cos", "[", 
       RowBox[{"2", "\[Pi]", " ", "200", "t"}], "]"}]}], "+", 
     RowBox[{
      SuperscriptBox["\[ExponentialE]", 
       RowBox[{
        RowBox[{"-", "100"}], " ", "t"}]], 
      RowBox[{"Cos", "[", 
       RowBox[{"2", "\[Pi]", " ", "300", "t"}], "]"}]}]}], ")"}], 
   RowBox[{"UnitStep", "[", "t", "]"}]}]}]], "Input",
 CellChangeTimes->{{3.690459915499364*^9, 3.690459920142462*^9}, {
  3.6904602645923934`*^9, 3.6904603958394184`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"(", 
   RowBox[{
    RowBox[{
     SuperscriptBox["\[ExponentialE]", 
      RowBox[{
       RowBox[{"-", "50"}], " ", "t"}]], " ", 
     RowBox[{"Cos", "[", 
      RowBox[{"200", " ", "\[Pi]", " ", "t"}], "]"}]}], "+", 
    RowBox[{
     SuperscriptBox["\[ExponentialE]", 
      RowBox[{
       RowBox[{"-", "75"}], " ", "t"}]], " ", 
     RowBox[{"Cos", "[", 
      RowBox[{"400", " ", "\[Pi]", " ", "t"}], "]"}]}], "+", 
    RowBox[{
     SuperscriptBox["\[ExponentialE]", 
      RowBox[{
       RowBox[{"-", "100"}], " ", "t"}]], " ", 
     RowBox[{"Cos", "[", 
      RowBox[{"600", " ", "\[Pi]", " ", "t"}], "]"}]}]}], ")"}], " ", 
  RowBox[{"UnitStep", "[", "t", "]"}]}]], "Output",
 CellChangeTimes->{3.722079632432335*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"x", "[", "t", "]"}], ",", " ", 
   RowBox[{"{", 
    RowBox[{"t", ",", " ", "0", " ", ",", " ", "0.1"}], "}"}], ",", " ", 
   RowBox[{"PlotRange", "\[Rule]", "All"}], ",", " ", 
   RowBox[{"AxesLabel", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"\"\<t\>\"", ",", " ", "\"\<x(t)\>\""}], "}"}]}], ",", 
   RowBox[{"PlotLabel", "\[Rule]", "\"\<Plot of x(t)\>\""}]}], "]"}]], "Input",\

 CellChangeTimes->{{3.690460406088377*^9, 3.690460412911621*^9}, {
  3.690460446402363*^9, 3.6904605400805244`*^9}, {3.6907085794622865`*^9, 
  3.6907086116809874`*^9}}],

Cell[BoxData[
 GraphicsBox[{{{}, {}, 
    TagBox[
     {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
      1.], LineBox[CompressedData["
1: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

       "]]},
     Annotation[#, "Charting`Private`Tag$4271#1"]& ]}, {}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{
    FormBox["\"t\"", TraditionalForm], 
    FormBox["\"x(t)\"", TraditionalForm]},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{
   "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
         Part[#, 1]], 
        (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
         Part[#, 1]], 
        (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
         Part[#, 2]]}& )}},
  PlotLabel->FormBox["\"Plot of x(t)\"", TraditionalForm],
  PlotRange->{All, All},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.722079633755373*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"X", "[", "\[Omega]_", "]"}], "=", 
  RowBox[{"FourierTransform", "[", 
   RowBox[{
    RowBox[{"x", "[", "t", "]"}], ",", "t", ",", " ", "\[Omega]"}], 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.6904606073734984`*^9, 3.690460620368168*^9}, {
  3.6904609860795965`*^9, 3.6904609895047626`*^9}, {3.690461085248654*^9, 
  3.690461096498096*^9}}],

Cell[BoxData[
 RowBox[{
  FractionBox[
   RowBox[{"50", "+", 
    RowBox[{"\[ImaginaryI]", " ", "\[Omega]"}]}], 
   RowBox[{
    RowBox[{"40000", " ", 
     SuperscriptBox["\[Pi]", "2"]}], "-", 
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{
       RowBox[{
        RowBox[{"-", "50"}], " ", "\[ImaginaryI]"}], "+", "\[Omega]"}], ")"}],
      "2"]}]], "+", 
  FractionBox[
   RowBox[{"75", "+", 
    RowBox[{"\[ImaginaryI]", " ", "\[Omega]"}]}], 
   RowBox[{
    RowBox[{"160000", " ", 
     SuperscriptBox["\[Pi]", "2"]}], "-", 
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{
       RowBox[{
        RowBox[{"-", "75"}], " ", "\[ImaginaryI]"}], "+", "\[Omega]"}], ")"}],
      "2"]}]], "+", 
  FractionBox[
   RowBox[{"100", "+", 
    RowBox[{"\[ImaginaryI]", " ", "\[Omega]"}]}], 
   RowBox[{
    RowBox[{"360000", " ", 
     SuperscriptBox["\[Pi]", "2"]}], "-", 
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{
       RowBox[{
        RowBox[{"-", "100"}], " ", "\[ImaginaryI]"}], "+", "\[Omega]"}], 
      ")"}], "2"]}]]}]], "Output",
 CellChangeTimes->{3.722079646262933*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"Abs", "[", 
    RowBox[{"X", "[", "\[Omega]", "]"}], "]"}], ",", " ", 
   RowBox[{"{", 
    RowBox[{"\[Omega]", ",", " ", 
     RowBox[{"-", " ", "3000"}], ",", " ", "3000"}], "}"}], ",", 
   RowBox[{"AxesLabel", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
     "\"\<\[Omega]\>\"", ",", 
      "\"\<|X(\!\(\*SuperscriptBox[\(\[ExponentialE]\), \(\[ImaginaryJ]\
\[Omega]\)]\))|\>\""}], "}"}]}], ",", 
   RowBox[{"PlotLabel", "\[Rule]", "\"\<Frequency spectrum\>\""}]}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.690461106734911*^9, 3.690461207264821*^9}, {
  3.6907086190231824`*^9, 3.690708632299801*^9}, {3.690708776401903*^9, 
  3.690708816597492*^9}, {3.6907166729964375`*^9, 3.6907166822654877`*^9}, {
  3.6907167241050425`*^9, 3.6907167366453056`*^9}}],

Cell[BoxData[
 GraphicsBox[{{{{}, {}, 
     TagBox[
      {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], 
       Opacity[1.], LineBox[CompressedData["
1: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
1+5orKcR8D/L6H+O
        "]], LineBox[CompressedData["
1:eJwVlXk41IsXxl1xi7QNKXRF25VsXUs3yfGk3Cjbd0zUZBkjjJ2QsRbZssbM
mO8slUIpqSQVxWnRlRbu3JJblLKVkS2kIj+/P87zPuc5z3mfz3v+OdreocQh
WRkZmZK5+r+qktWXG6PFWLJxNPGeRjRMfn76Z1aoGOVWXNS+NxsFdnXHX3D9
xPhfc9XzhrdRME4bX3jJVYzNmbnfl/OiYPfaivM3HMX4cTIm/0RIFIhHmNb4
lxhNpRkWozujwCbr39iXW8R4tq969L00EgRuWapdhmIk09TW8O5EwvB666qB
38WY5N/tm58VCXys+jS7QoyMk5zOm+siQTpx0k13SoTXchOsxDaHId/LySzp
lggH9Vk/T3mGQ4/+AknmVRHGFW6XL9UKh60/GoI5F0TozDiRk/Q+DD5wDUvL
+SLsqz0xKcsMA9Mni1VexIgwbSq3K/l5CLw2fTaqs1WE77y/hZGygWAwLzXH
eLMIzWRb5JVzAyCl1WKj5UYRDntUsjrUA0AvsMKLqibCwk3Vhjl/siDpTFZL
wjchpjmceeuf6gfrFtpdltwWYnNzqcwnlg88LXAp96kSokV6r3qjsg9EqnuW
Tl4UIoW9M0ShgQkPNkaK1UVCTGSnpz1WY4L37lM53olClI/3ylPuYoBi64XM
8WghjmFczGouA6pcr6emhQqxdIR9JnsPA2T9mhIuegnx1TVSIfWOFxSnjgWP
7RDikTK3zEx3T9i9aIZ1fJsQ13yS+jM7PWCEM99X1WRuv7JY56OnB1iVrPIw
Xy/EYfWRT31B7tB138Yheb4Qh7rcrULL6JBh52ynIiPEHmFoDG0bHYwkdJuy
KQFqBDNEEskBmLuxZfMnAbJlgpeeUDgAmjJCA8pTAcpT3HsbuG7wKL1Ut+Sh
AGsZltcMwA1CllzdYHZXgOcqNGJ1pK5Qr9moeaBSgHY273/esnMF37IW9cEy
AU7VW7y1/7kPFhu8Vk08LUD1gpwpVvU+cN8+vPhsvgBVf/zjY6KzD+Qavyma
ZArQRPfa565eGlTslZv/6JgAN7MvKC8ro8E0XW32U4QA7ctrBr/q06Cke+2P
uEABip8XGlVMuMDeQIOvi3wEuN5zaP27BhcQxVoPb6YJkLlVLaKW7gI7ZR2k
D+wF+O1yYbeHvgsMZrr102zm+AbAMPYXF+AsY3b3WwowRu1CrUI7FbaRwe/Y
WwQ472WnWPEaFT5oxbxZaCRAgnfgFDubCicuJL8S6wjQWMtblxpAhdc3i1ru
qQlwxoQtMdWnQjKcfUKlCPDskp4JUwoVdP+u+LtXcS5fZldl7jcCJA43HxyZ
J0DRQFaGeTcBsW33GhSmSdy1nVJu3ELAGo+ndcJxEmMHV0gO3yWgubftpv5n
EisOjzPGLxMQEfz+ekMvidM1dbTKMwSoTUivOL8l0Ua0dK+AS4D/73dUFV6R
OCFXq9WeTUDN/uwEbCFR8cV5hbVpBMhnH+w50kTiJuU+rcPHCHCp19tjeI/E
netkzTGRgLMj09f6bpP4vjGl/5e5fnTNs5Wnqkg0Nnl+1DCJACuaOIl2aY6P
4qZjlUxAbnpwn1IJiQg6Et10Ajpvb7d/KCLxn4xUu74cAvQGF1XHcUl8aP+3
BYs3l1fzrbpxLokvSkzNL87xP3aqPDaQRuJpy494uoKAlSmJH4uTSMyw5eyw
qiXA94aD4/4YElfXm29KfkzAjX7NmqXhJIpelvfTXxMgpz68qolF4ol3jdIH
gwQQextSkrxJjDPJu3VVhgrFiXkDZnQSg7kd71eqUsGy2/BW6V4SZeglK8x2
USFnucxq910kEtPd7e0eVOj4qzVVxZLEC5u2siRsKrArwqgphiT6KM+onL9O
haa3VrXmOiS2ZhuYhkuooLpsmfaYFonlGvNMwsaoUB11bciLQuIVepX6Z1MX
GLIcy7Sc4KOB0g3PZc0uYBF+f2TiMx81F0ufXRl1gaxzBa6X+/joO1B/z1ad
BjoLjNevauej0ILc4BZCA+Y/h/FbLR97jGy1dmrvg3bmxGT1UT6OW1eV76l0
hQ28RvcgNh+L+ocyHLtdIaqJ+3BtBB9bDx6RU1RzA4q+WUEBk4/GtbXGZJob
2E9G64fZ8LFjeV5DP2s/3M+YYm5S4qOkLTlO2YkOHjaRdjvl+Ph5dNsTIy4d
fswbMXKfLsL/Uocylryhg0lS/0zuYBHWt82PpLAOwvmotqKxp0XIZnBYVrnu
kO1d/eR2ThEGzvxmzPzpCTpaRlWS1CLU6pQuUdLxgsbOS3xpQhE26/Veojp7
wU+3c4d+CynCLJEK1ajUC8IdC2aPOhThbptVj+0JBuyzCDPevaQIh5xVTFsf
eMPYN6kaY34Rph/cw6KPe0PeTT+Z2FkeiokE7aj1TGj6w/PZpWEeqkVu9ffM
ZMK2jQ5+S1p5WBP7JYjp5gNaqnrCtnweWpzWUFRX9YU7/54/NpzBQ0Hy8gUU
Z1/Yf3Kt/4JjPJQ67XzRmu0LBUoapubhPHwneJte/asfyM9TbBE789DLkh7D
k/OHgeF+2UMUHpbeJpxM9QPgtV+NrfxCHl5x0qsZDQ+A5nfH80vn8VB7Vrf3
3M0AKG/R1uwb5+JmBc87M7sCwf8KfavfKy5yL5iNrAgNArffdY/Ob+XiAZrh
JcqdINh9eurR+SYuekSdn6+vGAw6eVyXj7e5eHrMOrCtPBj6Q1pCWSIuOlrl
lXG+hkBbn7hGgcvF1ZQP79c5hMIjj6CZ8hwuNjfIKMiUhUKZg0LWQCIXWYe4
r1/qhYGvgXVZIIOLD9LHzK5+DIOezzUdwRu4yFjxcLo1OQJeHEpdu3g1FyXm
jzsO3Y6Ah53UgMoVXHQyTr5+cyQCSp6NfB1awMUXdbOcHMZhYF7WVQ6TctD0
2YbTuCcSPgSdso24ykFVe+120fZokPQE5VPKOag44ljXnxAN9w9ue1VVzEEN
Z5vr7PpoKN7b7vOlgINNj/9S0bE6Al56lKORURy8EnzObIt1DDiVdD1SCZmb
s7s0HFNiwGrVlUU3fDmYeLdrZc/9GNBS2iuccOWgz7rO7klgwztpak20OQcV
AmbwoH4srBqejY/5g4Nvjm95dI4VCwfG2Naxuhx0vS5TUXcuFvgTXxTi13DQ
4dCkkPkmFtqmglsT1DmoUztE7F8aByrT/bwkCgdp3l/K9u+IA2KW4X5MkYNX
jdpXa4fHQb5sx9oUWQ5WpRDFQaI4eC6/b+D490Kkbq9f9/1BHCgptF5NGyvE
HNPvSZn9cWCnZHckY6AQlxb/Ytb5azxkLHm4/cSHQuy11bOv046HRoqlXPbr
QtSOcdswtCUeZFVvNedI5vxodY67bOPBSu2Pk3nNhdi0v86eR4uHxFUVrifv
F879a1WXuwfj4c7qDZqFtYXYYFX1SewRDzEdqi7rrxei7eJKTh49Hv4HPBoe
Qg==
        "]], LineBox[CompressedData["
1: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
        "]], 
       LineBox[CompressedData["
1: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
        "]], 
       LineBox[CompressedData["
1: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
        "]], 
       LineBox[CompressedData["
1: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
        "]], 
       LineBox[CompressedData["
1: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
qqbFJjcK/A8L5g5D
        "]]},
      Annotation[#, 
       "Charting`Private`Tag$28096#1"]& ], {}}, {{}, {}, {}}}, {}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{
    FormBox["\"\[Omega]\"", TraditionalForm], 
    FormBox[
    "\"|X(\\!\\(\\*SuperscriptBox[\\(\[ExponentialE]\\), \\(\[ImaginaryJ]\
\[Omega]\\)]\\))|\"", TraditionalForm]},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{
   "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
         Part[#, 1]], 
        (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
         Part[#, 1]], 
        (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
         Part[#, 2]]}& )}},
  PlotLabel->FormBox["\"Frequency spectrum\"", TraditionalForm],
  PlotRange->{{-3000, 3000}, {0., 0.010168403662615164`}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.722079646496675*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"Arg", "[", 
    RowBox[{"X", "[", "\[Omega]", "]"}], "]"}], ",", " ", 
   RowBox[{"{", 
    RowBox[{"\[Omega]", ",", " ", 
     RowBox[{"-", " ", "3000"}], ",", " ", "3000"}], "}"}], ",", 
   RowBox[{"AxesLabel", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
     "\"\<\[Omega]\>\"", ",", 
      "\"\<Arg(\!\(\*SuperscriptBox[\(\[ExponentialE]\), \(\[ImaginaryJ]\
\[Omega]\)]\))\>\""}], "}"}]}], ",", 
   RowBox[{"PlotLabel", "\[Rule]", "\"\<Argument\>\""}]}], "]"}]], "Input",
 CellChangeTimes->{{3.690461389648615*^9, 3.6904613905137253`*^9}, {
  3.690709360079524*^9, 3.6907093992798414`*^9}, {3.6907095301819687`*^9, 
  3.690709535304967*^9}}],

Cell[BoxData[
 GraphicsBox[{{{{}, {}, 
     TagBox[
      {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], 
       Opacity[1.], LineBox[CompressedData["
1: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
F9T2wH91zwz2
        "]], LineBox[CompressedData["
1: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
qhxdX5oJjB3mpzaG1aD/AcXQ7Tg=
        "]], LineBox[CompressedData["
1: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
        "]], 
       LineBox[CompressedData["
1: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
        "]], 
       LineBox[CompressedData["
1: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
5IsbdAasfIQpIdJTrdkpgMtUVcSfv8T/A7mBH6E=
        "]], LineBox[CompressedData["

1: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
+TL+lACXcvKzX4byIVqJ8pCm3uD/AESSodY=
        "]], LineBox[CompressedData["
1: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
        "]]},
      Annotation[#, 
       "Charting`Private`Tag$28138#1"]& ], {}}, {{}, {}, {}}}, {}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{
    FormBox["\"\[Omega]\"", TraditionalForm], 
    FormBox[
    "\"Arg(\\!\\(\\*SuperscriptBox[\\(\[ExponentialE]\\), \\(\[ImaginaryJ]\
\[Omega]\\)]\\))\"", TraditionalForm]},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{
   "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
         Part[#, 1]], 
        (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
         Part[#, 1]], 
        (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
         Part[#, 2]]}& )}},
  PlotLabel->FormBox["\"Argument\"", TraditionalForm],
  PlotRange->{{-3000, 3000}, {-1.5225680839366749`, 1.5225680839366749`}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.722079646747244*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"data", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"N", "[", 
      RowBox[{"Abs", "[", 
       RowBox[{"X", "[", "\[Omega]", "]"}], "]"}], "]"}], ",", " ", 
     RowBox[{"{", 
      RowBox[{"\[Omega]", ",", " ", 
       RowBox[{"800", "\[Pi]"}]}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"maxima", " ", "=", " ", 
  RowBox[{"FindPeaks", "[", "data", "]"}]}], "\[IndentingNewLine]", 
 RowBox[{"minima", "=", 
  RowBox[{"Abs", "[", 
   RowBox[{"FindPeaks", "[", 
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{"N", "[", 
       RowBox[{"-", 
        RowBox[{"Abs", "[", 
         RowBox[{"X", "[", "\[Omega]", "]"}], "]"}]}], "]"}], ",", " ", 
      RowBox[{"{", 
       RowBox[{"\[Omega]", ",", " ", 
        RowBox[{"800", "\[Pi]"}]}], "}"}]}], "]"}], "]"}], "]"}]}]}], "Input",\

 CellChangeTimes->{{3.690461439207423*^9, 3.6904615018090825`*^9}, {
  3.69046165396996*^9, 3.6904617752810125`*^9}, {3.6904621036823435`*^9, 
  3.69046213490866*^9}, {3.6904621734582787`*^9, 3.69046219552129*^9}, {
  3.690462226052763*^9, 3.69046225661034*^9}, {3.6904623103224626`*^9, 
  3.6904623249938955`*^9}, {3.6904624829627085`*^9, 3.6904624886109753`*^9}, {
  3.6904628326116467`*^9, 3.690462841024043*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"627", ",", "0.010168578426399814`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1263", ",", "0.0069262242803653905`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1911", ",", "0.005577661752279531`"}], "}"}]}], "}"}]], "Output",\

 CellChangeTimes->{3.722079650015914*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"1", ",", "0.00020127562916035546`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"958", ",", "0.0007074378838718933`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1647", ",", "0.0011286790575089254`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2513", ",", "0.0018505661632262284`"}], "}"}]}], "}"}]], "Output",\

 CellChangeTimes->{3.722079652226515*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ListLinePlot", "[", 
  RowBox[{
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"N", "[", 
      RowBox[{"Abs", "[", 
       RowBox[{"X", "[", "\[Omega]", "]"}], "]"}], "]"}], ",", " ", 
     RowBox[{"{", 
      RowBox[{"\[Omega]", ",", " ", 
       RowBox[{"800", "\[Pi]"}]}], "}"}]}], "]"}], ",", " ", 
   RowBox[{"Epilog", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"Red", ",", " ", 
      RowBox[{"PointSize", "[", "0.02", "]"}], ",", " ", 
      RowBox[{"Point", "[", 
       RowBox[{"Join", "[", 
        RowBox[{"maxima", ",", " ", "minima"}], "]"}], "]"}]}], "}"}]}], ",", 
   
   RowBox[{
   "PlotLabel", "\[Rule]", 
    "\"\<Local maxima and minima of freq. spectra\>\""}], ",", 
   RowBox[{"AxesLabel", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
     "\"\<\[Omega]\>\"", ",", 
      "\"\<|X(\!\(\*SuperscriptBox[\(\[ExponentialE]\), \(\[ImaginaryJ]\
\[Omega]\)]\))|\>\""}], "}"}]}]}], "]"}]], "Input",
 CellChangeTimes->{{3.6904619266831636`*^9, 3.6904620343536396`*^9}, {
  3.690462353634123*^9, 3.690462368018297*^9}, {3.690462448642528*^9, 
  3.6904624693153534`*^9}, {3.690462499794547*^9, 3.6904625122742295`*^9}, {
  3.6904627397832556`*^9, 3.6904627576020203`*^9}, {3.6904627877801533`*^9, 
  3.6904627961623755`*^9}, {3.690462846307705*^9, 3.6904628500526867`*^9}, {
  3.6907095401655164`*^9, 3.690709586842927*^9}}],

Cell[BoxData[
 GraphicsBox[{{}, {{}, {}, 
    {RGBColor[0.368417, 0.506779, 0.709798], PointSize[0.005555555555555556], 
     AbsoluteThickness[1.6], LineBox[CompressedData["
1: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
vyzvm6q6f3vWRN8g56WiyXDynwcScmEq9H77Hh6ziVycCs8hNqZbprJ8cCqC
DXtNO84hV6r29wDdYS01lDeuSYWNjbNw5n5yfSr88mrn8YJYnjkVFvLnj58u
ITeq6ne/zmDRcHJLKqaUPfhx6SvlpdtTsSDIabhNJctfp6F5zI2w9r1k9TSU
6X77qgwja6bBd6tzwLEVZO00GK+Of39xEstrp2HRuQn4wfLeBmlw9rHYsu49
5cGN0jBj7HD79gqySRrk+42eXD/I8uVpSLs7orEmgWyZhl0em20Ge5Pt0vDq
4eRH2VZkpzQcuvvLYutUlkdPw4rIxQu5g8leafAYPtP75V/Kv/ul4c07/QWi
9+SwNDx9YT1bepfl51Xra6w43FJC5qfh5NSm8twjZEEaemWlHz8jI8vTMMdT
21U/keXt03CxnzzvVyg5Lw37inUXT9tCLkxD1Pszytq15OI0eG+1j3y2guXz
09DnYrcCh6XkyjRcdljibrqAXJOGkGXLIwWm5Po0mPzNyXGawd4nSMPQu+/s
xFPJjWmwnneybtEUcksaHiXtXbp1Mrk9DRp3c9LU2XJOOrQ/bVkxgq2vno6V
Y/QGHDUma6bjP18MOjGbrJ2OBGuRryHY+wrpmDc948coS7JBOnQuXnPJsCcb
/Z9TNINcySbpaDhfveaOF3u/IR33Oo2yzQkhW6ZDffL3qrfxZLt09Lv0gZ8t
JTulo/sXzx438tj7EOmY1WZyZBNrP6901FqsUfiw9vVLx/aSD69e/v/2T8du
TR3vK/9Y+6dj82C/T+pD6PjhpyPG9Hz3s9PJgnTEZ0SaXbMly9PxtLP+p5m+
7H2HdIQN93TpmkrOS8fav3HFk/PJhek4t+7kiMJqcnE6XntsTU9oISvT4Zx+
40+BFp0/lelIP3/LVt+UXJOOB0Oz13xwI9enY3Dy3c+tfPY+RTp8FybctDhF
bkyHyeTEE/VPyS3pwFiH1UfV6XrQno6Z54eEnJvB3n/IwI3NkoqOTWT1DBgb
ve0IySRrZsCvbcHD0eVk7Qy8qz+g9aeNvS+RgY4Au8jO4+n6ZZCBZ8krHk1Z
SzbKwGabJ11jRWSTDDTopL1qq2TvN2Tg6dRCVz6Hrq+WGTBZYr9t5myyXQaM
ui/X+RNAdsqAi49pwqPj7H2IDMxvXHej8gPZKwOSdx46lfrs+p8Bhef4mvvu
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
XKyA6Qfn5FHMJQrY81sauzIrVcdr62nPnczlCnQ/uTQ4Yye5UgH9WRqRs1h5
VQpEPL30NIzl1WoUmLdsXrtDAvm+Agk3Fo6tTiLXK1Cb2+/MqzTyU9X+fYZv
UhH7Pq2qff3DdD/JyG8UUHibRDWw/dmogOjtftMwtr+bFHjhvCzp9DH2PVvV
8T9eLT3zNLlV1T43Sj2GsO/RtiswPmXj+MUV5A4FXGbnvR56h33/NgtzJOq7
5I/IallYULvPSvmGrJ6FrOEGn0UtZI0s3J/x2KvfH/a93Cw4GkYeMOtJx69W
FuZNsg8bqE3WzsLkLeMv7NYnD8/Coe4bpt9jeT3dLBzs/P3geQt2/mdh78/k
W3ar2fmfBfMTu1cp2PsehllYYc/9nBnOzn/V32tnGi9IZed/FlLXu5bv28vO
/ywMqT87+expdv5n4fHlP392VLLzPwtjH8w90/GMnf9Z2PHJu2ZKKzv/s/C8
TFSu3Yvl/7LQu8doTjH7/q1dFo5M0/7Uew7L/2VB9N3q/VB2fXTKQv7AU3Yv
fMmuWVD3lUev4bPv42bh7eEflzMOkN2zgPMn3aJKyV5ZOLb73ZFRT8k+WSib
NuPZzl/se7pZWP2j12zZYLo/BGWhannrT8+Z5DDV9k56YfdtFTkqC4k//ENn
svd/uFn4PHTlbmMZmZeFjviQz03FZH4W2kK9peuf/L+e7jwsh/btAziRNdkl
kS09IUWSEH1RSZKEFpEkKpItSYoklSRLSe51lmSLJyqkJCF7REJKISJJ6LEv
7/yO47zePz/H3TLLNTP3zJzn9yInyBCSrixM+EPeI8OL1VlJwYPo+pksw6Xv
RWN0ppFTZXD+Jt4KDiQrZNjW23zjrn3s+i9D6SX54sW57PovQ8cBew831bDr
vwwlMw6unMC+P2TIwK2dVj7ZjPVXSev/fGPr1gvI2TIkP0zWi4ph/VYynPp9
3jr/FDlfBr89rVJOV5ELZcitO2GztAN9X7oi7Y8El3VlY8nXZQhL6zqjxTLy
bWn/ZBR8eZPM8mZlWBrRXky8Qi6ToTo2bfPHZvJjGQQr//NdDen7YaUM75Tr
dnxwI9fIMLBx+sCdrL+tVoa4kPe5tez76RsZFnh/3fXrI7lBOh7kGRX3DVme
qwwGdzrX+C0gN8twbFpTTd4+8jfp+GzxZdDdG+RfMqyLO9bIt2Tf/+Ww0tiy
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
9Lw=
      "]]}}, {}, {}, {{}, {}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{
    FormBox["\"\[Omega]\"", TraditionalForm], 
    FormBox[
    "\"|X(\\!\\(\\*SuperscriptBox[\\(\[ExponentialE]\\), \\(\[ImaginaryJ]\
\[Omega]\\)]\\))|\"", TraditionalForm]},
  AxesOrigin->{0., 0},
  DisplayFunction->Identity,
  Epilog->{
    RGBColor[1, 0, 0], 
    PointSize[0.02], 
    PointBox[{{627, 0.010168578426399814`}, {1263, 0.0069262242803653905`}, {
      1911, 0.005577661752279531}, {1, 0.00020127562916035546`}, {
      958, 0.0007074378838718933}, {1647, 0.0011286790575089254`}, {
      2513, 0.0018505661632262284`}}]},
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
         Part[#, 1]], 
        (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
         Part[#, 1]], 
        (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
         Part[#, 2]]}& )}},
  PlotLabel->FormBox[
   "\"Local maxima and minima of freq. spectra\"", TraditionalForm],
  PlotRange->{{0., 2513.}, {0, 0.010168578426399814`}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.722079654681169*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"maxima", "[", 
   RowBox[{"[", 
    RowBox[{"All", ",", " ", "1"}], "]"}], "]"}], "/", 
  RowBox[{"N", "[", 
   RowBox[{"2", "\[Pi]"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.6904629317153835`*^9, 3.6904629573635607`*^9}, {
  3.690464002551119*^9, 3.690464037431888*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "99.79014931861838`", ",", "201.01269312506383`", ",", 
   "304.145096248612`"}], "}"}]], "Output",
 CellChangeTimes->{3.722079654777008*^9}]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}, Open  ]]
},
WindowSize->{646, 751},
WindowMargins->{{0, Automatic}, {Automatic, 0}},
FrontEndVersion->"11.1 for Mac OS X x86 (32-bit, 64-bit Kernel) (April 27, \
2017)",
StyleDefinitions->"Default.nb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[580, 22, 221, 4, 92, "Title", "ExpressionUUID" -> \
"269b3d32-aefc-4d7a-acea-9de2bdd98e97"],
Cell[804, 28, 214, 6, 81, "Subtitle", "ExpressionUUID" -> \
"57eae278-d1ac-4785-ad01-61fa25bff17a"],
Cell[CellGroupData[{
Cell[1043, 38, 153, 3, 64, "Section", "ExpressionUUID" -> \
"9a707a71-4977-4374-86b1-3883a88eaa02"],
Cell[CellGroupData[{
Cell[1221, 45, 160, 3, 44, "Subsection", "ExpressionUUID" -> \
"85d4f9db-8c3f-4088-94d5-91a4c411e9bc"],
Cell[1384, 50, 2293, 71, 142, "Text", "ExpressionUUID" -> \
"22174a65-b7c9-49b0-ab91-5a6309b13340"],
Cell[CellGroupData[{
Cell[3702, 125, 276, 7, 30, "Item", "ExpressionUUID" -> \
"8ed9aeac-e6f6-4876-87c3-60845d22082e"],
Cell[3981, 134, 147, 2, 30, "Item", "ExpressionUUID" -> \
"f3010108-3526-4e6d-ae57-cece700c8b50"],
Cell[4131, 138, 179, 2, 30, "Item", "ExpressionUUID" -> \
"ef7a7622-a21a-49f0-867b-89fabc6a1c44"],
Cell[4313, 142, 128, 1, 30, "Item", "ExpressionUUID" -> \
"3ca13ce3-5629-4612-bccc-b1dbc0131843"],
Cell[4444, 145, 1394, 43, 68, "Item", "ExpressionUUID" -> \
"00f54344-1ae4-4190-85ba-fd604b8d8e95"],
Cell[5841, 190, 511, 15, 48, "Item", "ExpressionUUID" -> \
"45e7f986-2ec6-45e4-97db-6798bc3e3e96"],
Cell[6355, 207, 489, 15, 30, "Item", "ExpressionUUID" -> \
"0854fe8b-c423-48ef-b89d-07053b2a70d4"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[6893, 228, 160, 3, 44, "Subsection", "ExpressionUUID" -> \
"dcbb5e0b-45b0-45d9-b0b0-b5103e9013c9"],
Cell[CellGroupData[{
Cell[7078, 235, 221, 4, 35, "Subsubsection", "ExpressionUUID" -> \
"acf3a624-4dd0-4ea8-a9fe-b16e0c12fde8"],
Cell[7302, 241, 9714, 213, 695, "Text", "ExpressionUUID" -> \
"c2509b87-9a93-42ff-b39f-25d7031bc92a"]
}, Closed]],
Cell[CellGroupData[{
Cell[17053, 459, 231, 4, 29, "Subsubsection", "ExpressionUUID" -> \
"f2e3b2ff-caf0-41e3-927c-1a7ccccecbf2"],
Cell[17287, 465, 247, 6, 49, "Text", "ExpressionUUID" -> \
"7d2fc40a-a965-44d6-acac-5a2b2b2e6176"]
}, Closed]],
Cell[CellGroupData[{
Cell[17571, 476, 245, 4, 29, "Subsubsection", "ExpressionUUID" -> \
"ee618c1f-4806-4ea6-81b0-6138ee76fc82"],
Cell[17819, 482, 30657, 520, 362, "Text", "ExpressionUUID" -> \
"ceaf96ac-2ecf-4e6e-84b2-b5149b5017f8"]
}, Closed]],
Cell[CellGroupData[{
Cell[48513, 1007, 255, 4, 29, "Subsubsection", "ExpressionUUID" -> \
"b74411c9-31aa-4d62-aa89-8cd2f453861e"],
Cell[48771, 1013, 34616, 733, 408, "Text", "ExpressionUUID" -> \
"26875551-f923-4d7f-9bab-2c67ac5392ea"]
}, Closed]],
Cell[CellGroupData[{
Cell[83424, 1751, 248, 4, 29, "Subsubsection", "ExpressionUUID" -> \
"91e52814-e98b-48d5-a77d-21d9952552d8"],
Cell[83675, 1757, 50566, 883, 409, "Text", "ExpressionUUID" -> \
"0c83f3e9-c826-471f-9b96-b53a318cf1d0"]
}, Closed]],
Cell[134256, 2643, 173, 3, 29, "Subsubsection", "ExpressionUUID" -> \
"70924c63-4bcf-4a94-8a66-255811486998"],
Cell[134432, 2648, 173, 3, 29, "Subsubsection", "ExpressionUUID" -> \
"dd9a128e-7f85-4a3b-aae0-067cedc3fa14"],
Cell[134608, 2653, 173, 3, 29, "Subsubsection", "ExpressionUUID" -> \
"67f71353-9ac4-4c2e-83f6-1067cf576407"],
Cell[134784, 2658, 173, 3, 29, "Subsubsection", "ExpressionUUID" -> \
"7262454b-f0ed-47ea-80c8-edd0be17648c"]
}, Open  ]],
Cell[CellGroupData[{
Cell[134994, 2666, 152, 3, 44, "Subsection", "ExpressionUUID" -> \
"e4607c36-21e0-4478-b986-c3d3fe889813"],
Cell[135149, 2671, 200, 3, 32, "Input", "ExpressionUUID" -> \
"18367998-ae19-4cfb-b1a7-ddbcc4ab3bbd"],
Cell[CellGroupData[{
Cell[135374, 2678, 216, 4, 35, "Subsubsection", "ExpressionUUID" -> \
"c671a0d7-3438-4862-b3de-08b4b35d3086"],
Cell[135593, 2684, 43669, 1142, 5131, "Input", "ExpressionUUID" -> \
"aec69cc3-e6f0-42de-bd9c-8658885b4c6c"]
}, Closed]],
Cell[CellGroupData[{
Cell[179299, 3831, 207, 4, 29, "Subsubsection", "ExpressionUUID" -> \
"ee93048c-516a-48fa-b95b-cdb0a3cc292c"],
Cell[179509, 3837, 1822, 61, 134, "Input", "ExpressionUUID" -> \
"3116af15-080b-4c97-98e2-360684a65d0b"],
Cell[181334, 3900, 2813, 75, 113, "Input", "ExpressionUUID" -> \
"18d43b55-aaee-44f5-9711-80ffc35f0639"],
Cell[CellGroupData[{
Cell[184172, 3979, 548, 14, 54, "Input", "ExpressionUUID" -> \
"62bb4788-3eca-487a-b66b-99f232920d9f"],
Cell[184723, 3995, 4484, 111, 389, "Output", "ExpressionUUID" -> \
"c5960b43-e11c-498c-9859-f571bd294ac8"]
}, Open  ]],
Cell[189222, 4109, 656, 14, 96, "Input", "ExpressionUUID" -> \
"c57094f8-5ee6-4794-95b5-f4445d1b0fce"],
Cell[189881, 4125, 524, 12, 75, "Input", "ExpressionUUID" -> \
"cb470722-a060-4ba2-8dfd-3bb894a9d9a3"],
Cell[190408, 4139, 1640, 43, 75, "Input", "ExpressionUUID" -> \
"b1281bf0-877f-4112-b5e2-3d9e3c04b4ff"],
Cell[CellGroupData[{
Cell[192073, 4186, 1007, 25, 117, "Input", "ExpressionUUID" -> \
"51719bf0-47bf-4254-affe-5d2b5fcebaad"],
Cell[193083, 4213, 4415, 85, 252, "Output", "ExpressionUUID" -> \
"56c2686d-d891-4fab-913c-a50a2609b4f8"]
}, Open  ]],
Cell[CellGroupData[{
Cell[197535, 4303, 1069, 29, 102, "Input", "ExpressionUUID" -> \
"4fb23e89-468d-4e8e-8c62-f8c06f14c507"],
Cell[198607, 4334, 30203, 511, 287, "Output", "ExpressionUUID" -> \
"2e77c64f-2532-487b-b42a-c6fdfbcd9efc"]
}, Open  ]],
Cell[CellGroupData[{
Cell[228847, 4850, 969, 28, 100, "Input", "ExpressionUUID" -> \
"1af272ce-fa6a-4718-84c3-7fe8a2415649"],
Cell[229819, 4880, 430, 8, 54, "Output", "ExpressionUUID" -> \
"52701faa-6ffd-480a-a5ef-96a850ce572c"],
Cell[230252, 4890, 398, 8, 54, "Output", "ExpressionUUID" -> \
"32eb0bad-233c-4b46-9c3f-763f93b46958"]
}, Open  ]],
Cell[230665, 4901, 2437, 69, 266, "Input", "ExpressionUUID" -> \
"af6c306e-92a4-4373-9660-9c852e7cef3b"],
Cell[233105, 4972, 4302, 137, 302, "Input", "ExpressionUUID" -> \
"360304c4-b645-4935-a289-608028c8416b"],
Cell[237410, 5111, 735, 19, 56, "Input", "ExpressionUUID" -> \
"2b3c8f7d-b0cf-49c3-8dfa-379469ef11fb"],
Cell[CellGroupData[{
Cell[238170, 5134, 723, 18, 54, "Input", "ExpressionUUID" -> \
"26e76ef7-6c82-4f6d-a238-9c884d031546"],
Cell[238896, 5154, 44686, 749, 266, "Output", "ExpressionUUID" -> \
"c975acfd-2d4b-4276-87f6-e16875b5116b"]
}, Open  ]],
Cell[CellGroupData[{
Cell[283619, 5908, 624, 14, 54, "Input", "ExpressionUUID" -> \
"d708ff30-cad7-4b9c-a117-2b7442e4790d"],
Cell[284246, 5924, 5372, 121, 264, "Output", "ExpressionUUID" -> \
"59e7a35e-771f-486c-848e-33507c2d00f4"]
}, Open  ]],
Cell[CellGroupData[{
Cell[289655, 6050, 2224, 49, 144, "Input", "ExpressionUUID" -> \
"b2a2c014-3a46-419a-b123-5ac4f1941d77"],
Cell[291882, 6101, 3890, 91, 270, "Output", "ExpressionUUID" -> \
"4c0602bd-9f01-4773-9416-f5e8856b008b"]
}, Open  ]],
Cell[CellGroupData[{
Cell[295809, 6197, 475, 13, 35, "Input", "ExpressionUUID" -> \
"7006e499-e89b-497b-9848-ba294adcdc41"],
Cell[296287, 6212, 3450, 90, 301, "Output", "ExpressionUUID" -> \
"c7ff0448-c75b-4a01-ab11-342e768d9aee"]
}, Open  ]],
Cell[299752, 6305, 2960, 82, 302, "Input", "ExpressionUUID" -> \
"c02bd438-f782-4cea-8777-61224e3acb3b"],
Cell[CellGroupData[{
Cell[302737, 6391, 1880, 45, 144, "Input", "ExpressionUUID" -> \
"211a8c32-bc3e-48ed-8f07-98cb5807eae4"],
Cell[304620, 6438, 3536, 85, 270, "Output", "ExpressionUUID" -> \
"98f31e99-dc90-427a-b169-40ae60e8d474"]
}, Open  ]],
Cell[CellGroupData[{
Cell[308193, 6528, 1066, 20, 54, "Input", "ExpressionUUID" -> \
"203d6a49-0784-48d1-82e1-dc7dcc95524c"],
Cell[309262, 6550, 5556, 122, 276, "Output", "ExpressionUUID" -> \
"62d26ca7-7cea-4666-a3fe-3b1c85be5042"]
}, Open  ]],
Cell[CellGroupData[{
Cell[314855, 6677, 719, 15, 54, "Input", "ExpressionUUID" -> \
"d3a318ee-08cd-4226-834a-711840d5773e"],
Cell[315577, 6694, 44029, 740, 266, "Output", "ExpressionUUID" -> \
"a19bd116-3f37-452b-af2f-d59f89b3eb38"]
}, Open  ]],
Cell[CellGroupData[{
Cell[359643, 7439, 187, 4, 32, "Input", "ExpressionUUID" -> \
"af3756eb-701f-4953-898a-9e86979ba63f"],
Cell[359833, 7445, 4641, 105, 270, "Output", "ExpressionUUID" -> \
"1f126bab-f1a3-4eb2-b0db-319b39eca68c"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[364547, 7558, 201, 3, 64, "Section", "ExpressionUUID" -> \
"f8d8dae0-4b4d-4b40-8ac1-e0ed47438e11"],
Cell[CellGroupData[{
Cell[364773, 7565, 160, 3, 44, "Subsection", "ExpressionUUID" -> \
"03978c21-bfef-4b9b-a968-6f723c979e3f"],
Cell[364936, 7570, 101, 0, 30, "Text", "ExpressionUUID" -> \
"b75931fd-fc5d-4be7-9104-7648840bc59d"],
Cell[365040, 7572, 929, 26, 29, "DisplayFormula", "ExpressionUUID" -> \
"a2ba77bf-9a3b-4f67-bb85-fa55868c3e4b"],
Cell[CellGroupData[{
Cell[365994, 7602, 244, 7, 30, "Item", "ExpressionUUID" -> \
"ec39a7e2-c3d3-411f-bbd8-d76ec83fad01"],
Cell[366241, 7611, 282, 8, 30, "Item", "ExpressionUUID" -> \
"89bac823-4d32-4f06-b19b-a733a6faa8ff"],
Cell[366526, 7621, 507, 16, 30, "Item", "ExpressionUUID" -> \
"fd423fa0-78c2-42e0-9dae-23ed6c92a7c9"],
Cell[367036, 7639, 174, 3, 45, "Item", "ExpressionUUID" -> \
"17e4e288-921e-4a91-a829-2aae2fc63acf"],
Cell[367213, 7644, 344, 10, 30, "Item", "ExpressionUUID" -> \
"9df8007e-b16e-4843-aa9f-e21032ab9cd9"]
}, Open  ]]
}, Open  ]],
Cell[367584, 7658, 160, 3, 44, "Subsection", "ExpressionUUID" -> \
"b5f48795-8e6a-4d90-af2d-562c043527a0"],
Cell[CellGroupData[{
Cell[367769, 7665, 151, 2, 36, "Subsection", "ExpressionUUID" -> \
"5e6e16a3-a8ed-4e01-bfcc-ae0d0d874e4a"],
Cell[367923, 7669, 538, 15, 75, "Input", "ExpressionUUID" -> \
"7b35aa72-691f-4fc6-a640-744abb640545"],
Cell[CellGroupData[{
Cell[368486, 7688, 893, 26, 56, "Input", "ExpressionUUID" -> \
"ae321973-4686-4d0d-8d28-a739b5d6fe90"],
Cell[369382, 7716, 764, 23, 35, "Output", "ExpressionUUID" -> \
"f1b98450-1d26-4e48-880b-4296eca24eb9"]
}, Open  ]],
Cell[CellGroupData[{
Cell[370183, 7744, 612, 14, 54, "Input", "ExpressionUUID" -> \
"15cd563b-2d2b-49f8-bc67-daa3fbc4d9fd"],
Cell[370798, 7760, 43182, 724, 260, "Output", "ExpressionUUID" -> \
"a8ffbab7-ed2b-4cd4-a88d-3d4ffcee694e"]
}, Open  ]],
Cell[CellGroupData[{
Cell[414017, 8489, 378, 9, 32, "Input", "ExpressionUUID" -> \
"0e1d0ec5-f309-4245-b1c6-5853491bb622"],
Cell[414398, 8500, 1100, 38, 96, "Output", "ExpressionUUID" -> \
"fa46d07b-1a44-4684-a675-e8605942c9a3"]
}, Open  ]],
Cell[CellGroupData[{
Cell[415535, 8543, 817, 19, 58, "Input", "ExpressionUUID" -> \
"b8cca311-0f84-434d-8eda-0fa366f7c6ea"],
Cell[416355, 8564, 27588, 476, 267, "Output", "ExpressionUUID" -> \
"b49aeb25-9d24-4088-82f1-cda5641a09af"]
}, Open  ]],
Cell[CellGroupData[{
Cell[443980, 9045, 705, 17, 58, "Input", "ExpressionUUID" -> \
"e209324f-ff0b-4d03-b873-dd2f6f664885"],
Cell[444688, 9064, 35045, 597, 262, "Output", "ExpressionUUID" -> \
"f1b0c993-dca0-4cca-8c07-4d446c6583d6"]
}, Open  ]],
Cell[CellGroupData[{
Cell[479770, 9666, 1277, 32, 75, "Input", "ExpressionUUID" -> \
"4938a02b-dab3-435d-9f78-c7ecb0e3f828"],
Cell[481050, 9700, 343, 10, 32, "Output", "ExpressionUUID" -> \
"acfbf9cf-25ef-46b4-a1aa-ab39b842efe3"],
Cell[481396, 9712, 426, 12, 54, "Output", "ExpressionUUID" -> \
"2532ccb3-8b7c-45e0-b320-8908c4ea4ed3"]
}, Open  ]],
Cell[CellGroupData[{
Cell[481859, 9729, 1364, 33, 100, "Input", "ExpressionUUID" -> \
"fc597a8a-314c-441e-8d78-e55e38aff1a4"],
Cell[483226, 9764, 35567, 599, 265, "Output", "ExpressionUUID" -> \
"8f12ffa5-98e3-4bb0-964e-235dad8dbff7"]
}, Open  ]],
Cell[CellGroupData[{
Cell[518830, 10368, 308, 8, 32, "Input", "ExpressionUUID" -> \
"83eb4bf3-3b6b-40dc-9824-6ce63b8e3d32"],
Cell[519141, 10378, 183, 5, 32, "Output", "ExpressionUUID" -> \
"d0d9b144-f979-4528-b7b5-7d080d48d11d"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}
]
*)

